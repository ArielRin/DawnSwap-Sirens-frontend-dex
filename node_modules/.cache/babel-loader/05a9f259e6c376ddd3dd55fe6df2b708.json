{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringComments = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Use API to list, add, get, edit or delete string comments.\n */\nclass StringComments extends core_1.CrowdinApi {\n  listStringComments(projectId, options, deprecatedType, deprecatedTargetLanguageId, deprecatedIssueType, deprecatedIssueStatus) {\n    let url = `${this.url}/projects/${projectId}/comments`;\n    if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n      options = {\n        stringId: options,\n        type: deprecatedType,\n        targetLanguageId: deprecatedTargetLanguageId,\n        issueStatus: deprecatedIssueStatus,\n        issueType: deprecatedIssueType\n      };\n    }\n    url = this.addQueryParam(url, 'stringId', options.stringId);\n    url = this.addQueryParam(url, 'type', options.type);\n    url = this.addQueryParam(url, 'targetLanguageId', options.targetLanguageId);\n    url = this.addQueryParam(url, 'issueType', options.issueType);\n    url = this.addQueryParam(url, 'issueStatus', options.issueStatus);\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.comments.post\n   */\n  addStringComment(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/comments`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param stringCommentId string comment identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.comments.get\n   */\n  getStringComment(projectId, stringCommentId) {\n    const url = `${this.url}/projects/${projectId}/comments/${stringCommentId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param stringCommentId string comment identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.comments.delete\n   */\n  deleteStringComment(projectId, stringCommentId) {\n    const url = `${this.url}/projects/${projectId}/comments/${stringCommentId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param stringCommentId string comment identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.comments.patch\n   */\n  editStringComment(projectId, stringCommentId, request) {\n    const url = `${this.url}/projects/${projectId}/comments/${stringCommentId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n}\nexports.StringComments = StringComments;","map":{"version":3,"names":["Object","defineProperty","exports","value","StringComments","core_1","require","CrowdinApi","listStringComments","projectId","options","deprecatedType","deprecatedTargetLanguageId","deprecatedIssueType","deprecatedIssueStatus","url","isOptionalNumber","arguments","stringId","type","targetLanguageId","issueStatus","issueType","addQueryParam","getList","limit","offset","addStringComment","request","post","defaultConfig","getStringComment","stringCommentId","get","deleteStringComment","delete","editStringComment","patch"],"sources":["C:/projects/panther-frontend-dex1/node_modules/@crowdin/crowdin-api-client/out/stringComments/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringComments = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Use API to list, add, get, edit or delete string comments.\n */\nclass StringComments extends core_1.CrowdinApi {\n    listStringComments(projectId, options, deprecatedType, deprecatedTargetLanguageId, deprecatedIssueType, deprecatedIssueStatus) {\n        let url = `${this.url}/projects/${projectId}/comments`;\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                stringId: options,\n                type: deprecatedType,\n                targetLanguageId: deprecatedTargetLanguageId,\n                issueStatus: deprecatedIssueStatus,\n                issueType: deprecatedIssueType,\n            };\n        }\n        url = this.addQueryParam(url, 'stringId', options.stringId);\n        url = this.addQueryParam(url, 'type', options.type);\n        url = this.addQueryParam(url, 'targetLanguageId', options.targetLanguageId);\n        url = this.addQueryParam(url, 'issueType', options.issueType);\n        url = this.addQueryParam(url, 'issueStatus', options.issueStatus);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.comments.post\n     */\n    addStringComment(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/comments`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringCommentId string comment identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.comments.get\n     */\n    getStringComment(projectId, stringCommentId) {\n        const url = `${this.url}/projects/${projectId}/comments/${stringCommentId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringCommentId string comment identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.comments.delete\n     */\n    deleteStringComment(projectId, stringCommentId) {\n        const url = `${this.url}/projects/${projectId}/comments/${stringCommentId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringCommentId string comment identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.comments.patch\n     */\n    editStringComment(projectId, stringCommentId, request) {\n        const url = `${this.url}/projects/${projectId}/comments/${stringCommentId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.StringComments = StringComments;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}