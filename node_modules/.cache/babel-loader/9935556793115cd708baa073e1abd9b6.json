{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringTranslations = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Use API to add or remove strings translations, approvals, and votes.\n */\nclass StringTranslations extends core_1.CrowdinApi {\n  listTranslationApprovals(projectId, options, deprecatedLanguageId, deprecatedTranslationId, deprecatedLimit, deprecatedOffset, deprecatedFileId) {\n    let url = `${this.url}/projects/${projectId}/approvals`;\n    if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n      options = {\n        stringId: options,\n        languageId: deprecatedLanguageId,\n        translationId: deprecatedTranslationId,\n        limit: deprecatedLimit,\n        offset: deprecatedOffset,\n        fileId: deprecatedFileId\n      };\n    }\n    url = this.addQueryParam(url, 'stringId', options.stringId);\n    url = this.addQueryParam(url, 'languageId', options.languageId);\n    url = this.addQueryParam(url, 'translationId', options.translationId);\n    url = this.addQueryParam(url, 'fileId', options.fileId);\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.approvals.post\n   */\n  addApproval(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/approvals`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param approvalId approval identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.approvals.get\n   */\n  approvalInfo(projectId, approvalId) {\n    const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param approvalId approval identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.approvals.delete\n   */\n  removeApproval(projectId, approvalId) {\n    const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  listLanguageTranslations(projectId, languageId, options, fileId, limit, offset, labelIds, denormalizePlaceholders, croql) {\n    let url = `${this.url}/projects/${projectId}/languages/${languageId}/translations`;\n    if ((0, core_1.isOptionalString)(options, '2' in arguments)) {\n      options = {\n        stringIds: options,\n        fileId,\n        limit,\n        offset,\n        labelIds,\n        denormalizePlaceholders,\n        croql\n      };\n    }\n    url = this.addQueryParam(url, 'stringIds', options.stringIds);\n    url = this.addQueryParam(url, 'fileId', options.fileId);\n    url = this.addQueryParam(url, 'labelIds', options.labelIds);\n    url = this.addQueryParam(url, 'denormalizePlaceholders', options.denormalizePlaceholders);\n    url = this.addQueryParam(url, 'croql', options.croql);\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.alignment.post\n   */\n  translationAlignment(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/translations/alignment`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  listStringTranslations(projectId, stringId, languageId, options, deprecatedOffset, deprecatedDenormalizePlaceholders) {\n    if ((0, core_1.isOptionalNumber)(options, '3' in arguments)) {\n      options = {\n        limit: options,\n        offset: deprecatedOffset,\n        denormalizePlaceholders: deprecatedDenormalizePlaceholders\n      };\n    }\n    let url = `${this.url}/projects/${projectId}/translations`;\n    url = this.addQueryParam(url, 'stringId', stringId);\n    url = this.addQueryParam(url, 'languageId', languageId);\n    url = this.addQueryParam(url, 'denormalizePlaceholders', options.denormalizePlaceholders);\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.post\n   */\n  addTranslation(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/translations`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param stringId string identifier\n   * @param languageId language identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.deleteMany\n   */\n  deleteAllTranslations(projectId, stringId, languageId) {\n    let url = `${this.url}/projects/${projectId}/translations`;\n    url = this.addQueryParam(url, 'stringId', stringId);\n    url = this.addQueryParam(url, 'languageId', languageId);\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param translationId translation identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.get\n   */\n  translationInfo(projectId, translationId) {\n    const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param translation translation identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.put\n   */\n  restoreTranslation(projectId, translationId) {\n    const url = `${this.url}/projects/${projectId}/translations/${translationId}/restore`;\n    return this.put(url, {}, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param translation translation identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.delete\n   */\n  deleteTranslation(projectId, translationId) {\n    const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  listTranslationVotes(projectId, options, deprecatedLanguageId, deprecatedTranslationId, deprecatedLimit, deprecatedOffset) {\n    let url = `${this.url}/projects/${projectId}/votes`;\n    if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n      options = {\n        stringId: options,\n        languageId: deprecatedLanguageId,\n        translationId: deprecatedTranslationId,\n        limit: deprecatedLimit,\n        offset: deprecatedOffset\n      };\n    }\n    url = this.addQueryParam(url, 'stringId', options.stringId);\n    url = this.addQueryParam(url, 'languageId', options.languageId);\n    url = this.addQueryParam(url, 'translationId', options.translationId);\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.votes.post\n   */\n  addVote(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/votes`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param voteId vote identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.votes.get\n   */\n  voteInfo(projectId, voteId) {\n    const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param voteId vote identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.votes.delete\n   */\n  cancelVote(projectId, voteId) {\n    const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n}\nexports.StringTranslations = StringTranslations;","map":{"version":3,"names":["Object","defineProperty","exports","value","StringTranslations","core_1","require","CrowdinApi","listTranslationApprovals","projectId","options","deprecatedLanguageId","deprecatedTranslationId","deprecatedLimit","deprecatedOffset","deprecatedFileId","url","isOptionalNumber","arguments","stringId","languageId","translationId","limit","offset","fileId","addQueryParam","getList","addApproval","request","post","defaultConfig","approvalInfo","approvalId","get","removeApproval","delete","listLanguageTranslations","labelIds","denormalizePlaceholders","croql","isOptionalString","stringIds","translationAlignment","listStringTranslations","deprecatedDenormalizePlaceholders","addTranslation","deleteAllTranslations","translationInfo","restoreTranslation","put","deleteTranslation","listTranslationVotes","addVote","voteInfo","voteId","cancelVote"],"sources":["C:/projects/panther-frontend-dex1/node_modules/@crowdin/crowdin-api-client/out/stringTranslations/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringTranslations = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Use API to add or remove strings translations, approvals, and votes.\n */\nclass StringTranslations extends core_1.CrowdinApi {\n    listTranslationApprovals(projectId, options, deprecatedLanguageId, deprecatedTranslationId, deprecatedLimit, deprecatedOffset, deprecatedFileId) {\n        let url = `${this.url}/projects/${projectId}/approvals`;\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                stringId: options,\n                languageId: deprecatedLanguageId,\n                translationId: deprecatedTranslationId,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n                fileId: deprecatedFileId,\n            };\n        }\n        url = this.addQueryParam(url, 'stringId', options.stringId);\n        url = this.addQueryParam(url, 'languageId', options.languageId);\n        url = this.addQueryParam(url, 'translationId', options.translationId);\n        url = this.addQueryParam(url, 'fileId', options.fileId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.approvals.post\n     */\n    addApproval(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/approvals`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.approvals.get\n     */\n    approvalInfo(projectId, approvalId) {\n        const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.approvals.delete\n     */\n    removeApproval(projectId, approvalId) {\n        const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    listLanguageTranslations(projectId, languageId, options, fileId, limit, offset, labelIds, denormalizePlaceholders, croql) {\n        let url = `${this.url}/projects/${projectId}/languages/${languageId}/translations`;\n        if ((0, core_1.isOptionalString)(options, '2' in arguments)) {\n            options = {\n                stringIds: options,\n                fileId,\n                limit,\n                offset,\n                labelIds,\n                denormalizePlaceholders,\n                croql,\n            };\n        }\n        url = this.addQueryParam(url, 'stringIds', options.stringIds);\n        url = this.addQueryParam(url, 'fileId', options.fileId);\n        url = this.addQueryParam(url, 'labelIds', options.labelIds);\n        url = this.addQueryParam(url, 'denormalizePlaceholders', options.denormalizePlaceholders);\n        url = this.addQueryParam(url, 'croql', options.croql);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.alignment.post\n     */\n    translationAlignment(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/translations/alignment`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    listStringTranslations(projectId, stringId, languageId, options, deprecatedOffset, deprecatedDenormalizePlaceholders) {\n        if ((0, core_1.isOptionalNumber)(options, '3' in arguments)) {\n            options = {\n                limit: options,\n                offset: deprecatedOffset,\n                denormalizePlaceholders: deprecatedDenormalizePlaceholders,\n            };\n        }\n        let url = `${this.url}/projects/${projectId}/translations`;\n        url = this.addQueryParam(url, 'stringId', stringId);\n        url = this.addQueryParam(url, 'languageId', languageId);\n        url = this.addQueryParam(url, 'denormalizePlaceholders', options.denormalizePlaceholders);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.post\n     */\n    addTranslation(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/translations`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.deleteMany\n     */\n    deleteAllTranslations(projectId, stringId, languageId) {\n        let url = `${this.url}/projects/${projectId}/translations`;\n        url = this.addQueryParam(url, 'stringId', stringId);\n        url = this.addQueryParam(url, 'languageId', languageId);\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translationId translation identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.get\n     */\n    translationInfo(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.put\n     */\n    restoreTranslation(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}/restore`;\n        return this.put(url, {}, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.translations.delete\n     */\n    deleteTranslation(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    listTranslationVotes(projectId, options, deprecatedLanguageId, deprecatedTranslationId, deprecatedLimit, deprecatedOffset) {\n        let url = `${this.url}/projects/${projectId}/votes`;\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = {\n                stringId: options,\n                languageId: deprecatedLanguageId,\n                translationId: deprecatedTranslationId,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n            };\n        }\n        url = this.addQueryParam(url, 'stringId', options.stringId);\n        url = this.addQueryParam(url, 'languageId', options.languageId);\n        url = this.addQueryParam(url, 'translationId', options.translationId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.votes.post\n     */\n    addVote(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/votes`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.votes.get\n     */\n    voteInfo(projectId, voteId) {\n        const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.votes.delete\n     */\n    cancelVote(projectId, voteId) {\n        const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.StringTranslations = StringTranslations;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}