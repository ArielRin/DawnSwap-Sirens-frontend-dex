{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants';\nimport { updateVersion } from '../global/actions';\nimport { addSerializedPair, addSerializedToken, removeSerializedPair, removeSerializedToken, updateMatchesDarkMode, updateUserDarkMode, updateUserExpertMode, updateUserSlippageTolerance, updateUserDeadline, muteAudio, unmuteAudio } from './actions';\nconst currentTimestamp = () => new Date().getTime();\nfunction pairKey(token0Address, token1Address) {\n  return `${token0Address};${token1Address}`;\n}\nexport const initialState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  userExpertMode: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true\n};\nexport default createReducer(initialState, builder => builder.addCase(updateVersion, state => {\n  // slippage isnt being tracked in local storage, reset to default\n  // noinspection SuspiciousTypeOfGuard\n  if (typeof state.userSlippageTolerance !== 'number') {\n    state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE;\n  }\n\n  // deadline isnt being tracked in local storage, reset to default\n  // noinspection SuspiciousTypeOfGuard\n  if (typeof state.userDeadline !== 'number') {\n    state.userDeadline = DEFAULT_DEADLINE_FROM_NOW;\n  }\n  state.lastUpdateVersionTimestamp = currentTimestamp();\n}).addCase(updateUserDarkMode, (state, action) => {\n  state.userDarkMode = action.payload.userDarkMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateMatchesDarkMode, (state, action) => {\n  state.matchesDarkMode = action.payload.matchesDarkMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserExpertMode, (state, action) => {\n  state.userExpertMode = action.payload.userExpertMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserSlippageTolerance, (state, action) => {\n  state.userSlippageTolerance = action.payload.userSlippageTolerance;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserDeadline, (state, action) => {\n  state.userDeadline = action.payload.userDeadline;\n  state.timestamp = currentTimestamp();\n}).addCase(addSerializedToken, (state, _ref) => {\n  let {\n    payload: {\n      serializedToken\n    }\n  } = _ref;\n  state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {};\n  state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken;\n  state.timestamp = currentTimestamp();\n}).addCase(removeSerializedToken, (state, _ref2) => {\n  let {\n    payload: {\n      address,\n      chainId\n    }\n  } = _ref2;\n  state.tokens[chainId] = state.tokens[chainId] || {};\n  delete state.tokens[chainId][address];\n  state.timestamp = currentTimestamp();\n}).addCase(addSerializedPair, (state, _ref3) => {\n  let {\n    payload: {\n      serializedPair\n    }\n  } = _ref3;\n  if (serializedPair.token0.chainId === serializedPair.token1.chainId && serializedPair.token0.address !== serializedPair.token1.address) {\n    const {\n      chainId\n    } = serializedPair.token0;\n    state.pairs[chainId] = state.pairs[chainId] || {};\n    state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair;\n  }\n  state.timestamp = currentTimestamp();\n}).addCase(removeSerializedPair, (state, _ref4) => {\n  let {\n    payload: {\n      chainId,\n      tokenAAddress,\n      tokenBAddress\n    }\n  } = _ref4;\n  if (state.pairs[chainId]) {\n    // just delete both keys if either exists\n    delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)];\n    delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)];\n  }\n  state.timestamp = currentTimestamp();\n}).addCase(muteAudio, state => {\n  state.audioPlay = false;\n}).addCase(unmuteAudio, state => {\n  state.audioPlay = true;\n}));","map":{"version":3,"names":["createReducer","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","updateVersion","addSerializedPair","addSerializedToken","removeSerializedPair","removeSerializedToken","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","muteAudio","unmuteAudio","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","initialState","userDarkMode","matchesDarkMode","userExpertMode","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","audioPlay","builder","addCase","state","lastUpdateVersionTimestamp","action","payload","_ref","serializedToken","chainId","address","_ref2","_ref3","serializedPair","token0","token1","_ref4","tokenAAddress","tokenBAddress"],"sources":["C:/projects/panther-frontend-dex1/src/state/user/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\r\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateMatchesDarkMode,\r\n  updateUserDarkMode,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  muteAudio,\r\n  unmuteAudio\r\n} from './actions'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\r\n  matchesDarkMode: boolean // whether the dark mode media query matches\r\n\r\n  userExpertMode: boolean\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  timestamp: number\r\n\r\n  audioPlay: boolean\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userDarkMode: null,\r\n  matchesDarkMode: false,\r\n  userExpertMode: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  audioPlay: true\r\n}\r\n\r\nexport default createReducer(initialState, builder =>\r\n  builder\r\n    .addCase(updateVersion, state => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDarkMode, (state, action) => {\r\n      state.userDarkMode = action.payload.userDarkMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateMatchesDarkMode, (state, action) => {\r\n      state.matchesDarkMode = action.payload.matchesDarkMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const {chainId} = serializedPair.token0\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(muteAudio, state => {\r\n      state.audioPlay = false\r\n    })\r\n    .addCase(unmuteAudio, state => {\r\n      state.audioPlay = true\r\n    })\r\n)\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}