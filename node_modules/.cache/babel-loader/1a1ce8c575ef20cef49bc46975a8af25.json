{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Dictionaries = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Dictionaries allow you to create a storage of words that should be skipped by the spell checker.\n *\n * Use API to get the list of organization dictionaries and to edit a specific dictionary.\n */\nclass Dictionaries extends core_1.CrowdinApi {\n  listDictionaries(projectId, options) {\n    if ((0, core_1.isOptionalString)(options, '1' in arguments)) {\n      options = {\n        languageIds: options\n      };\n    }\n    let url = `${this.url}/projects/${projectId}/dictionaries`;\n    url = this.addQueryParam(url, 'languageIds', options.languageIds);\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param languageId language identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.dictionaries.patch\n   */\n  editDictionary(projectId, languageId, request) {\n    const url = `${this.url}/projects/${projectId}/dictionaries/${languageId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n}\nexports.Dictionaries = Dictionaries;","map":{"version":3,"names":["Object","defineProperty","exports","value","Dictionaries","core_1","require","CrowdinApi","listDictionaries","projectId","options","isOptionalString","arguments","languageIds","url","addQueryParam","get","defaultConfig","editDictionary","languageId","request","patch"],"sources":["C:/projects/panther-frontend-dex1/node_modules/@crowdin/crowdin-api-client/out/dictionaries/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dictionaries = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Dictionaries allow you to create a storage of words that should be skipped by the spell checker.\n *\n * Use API to get the list of organization dictionaries and to edit a specific dictionary.\n */\nclass Dictionaries extends core_1.CrowdinApi {\n    listDictionaries(projectId, options) {\n        if ((0, core_1.isOptionalString)(options, '1' in arguments)) {\n            options = { languageIds: options };\n        }\n        let url = `${this.url}/projects/${projectId}/dictionaries`;\n        url = this.addQueryParam(url, 'languageIds', options.languageIds);\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param languageId language identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.dictionaries.patch\n     */\n    editDictionary(projectId, languageId, request) {\n        const url = `${this.url}/projects/${projectId}/dictionaries/${languageId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Dictionaries = Dictionaries;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA,MAAMF,YAAY,SAASC,MAAM,CAACE,UAAU,CAAC;EACzCC,gBAAgBA,CAACC,SAAS,EAAEC,OAAO,EAAE;IACjC,IAAI,CAAC,CAAC,EAAEL,MAAM,CAACM,gBAAgB,EAAED,OAAO,EAAE,GAAG,IAAIE,SAAS,CAAC,EAAE;MACzDF,OAAO,GAAG;QAAEG,WAAW,EAAEH;MAAQ,CAAC;IACtC;IACA,IAAII,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYL,SAAU,eAAc;IAC1DK,GAAG,GAAG,IAAI,CAACC,aAAa,CAACD,GAAG,EAAE,aAAa,EAAEJ,OAAO,CAACG,WAAW,CAAC;IACjE,OAAO,IAAI,CAACG,GAAG,CAACF,GAAG,EAAE,IAAI,CAACG,aAAa,CAAC,CAAC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;AACA;AACA;EACIC,cAAcA,CAACT,SAAS,EAAEU,UAAU,EAAEC,OAAO,EAAE;IAC3C,MAAMN,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYL,SAAU,iBAAgBU,UAAW,EAAC;IAC1E,OAAO,IAAI,CAACE,KAAK,CAACP,GAAG,EAAEM,OAAO,EAAE,IAAI,CAACH,aAAa,CAAC,CAAC,CAAC;EACzD;AACJ;AACAf,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script"}