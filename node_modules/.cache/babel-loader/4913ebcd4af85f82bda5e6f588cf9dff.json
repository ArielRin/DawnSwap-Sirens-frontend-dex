{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists';\n// eslint-disable-next-line import/no-unresolved\n\nimport { DEFAULT_LIST_OF_LISTS, DEFAULT_TOKEN_LIST_URL } from '../../constants/lists';\nimport { updateVersion } from '../global/actions';\nimport { acceptListUpdate, addList, fetchTokenList, removeList, selectList } from './actions';\nimport DEFAULT_LIST from '../../constants/token/pantherswap.json';\nconst NEW_LIST_STATE = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null\n};\nconst initialState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.reduce((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE;\n      return memo;\n    }, {}),\n    [DEFAULT_TOKEN_LIST_URL]: {\n      error: null,\n      current: DEFAULT_LIST,\n      loadingRequestId: null,\n      pendingUpdate: null\n    }\n  },\n  selectedListUrl: DEFAULT_TOKEN_LIST_URL\n};\nexport default createReducer(initialState, builder => builder.addCase(fetchTokenList.pending, (state, _ref) => {\n  let {\n    payload: {\n      requestId,\n      url\n    }\n  } = _ref;\n  state.byUrl[url] = {\n    current: null,\n    pendingUpdate: null,\n    ...state.byUrl[url],\n    loadingRequestId: requestId,\n    error: null\n  };\n}).addCase(fetchTokenList.fulfilled, (state, _ref2) => {\n  var _state$byUrl$url, _state$byUrl$url2;\n  let {\n    payload: {\n      requestId,\n      tokenList,\n      url\n    }\n  } = _ref2;\n  const current = (_state$byUrl$url = state.byUrl[url]) === null || _state$byUrl$url === void 0 ? void 0 : _state$byUrl$url.current;\n  const loadingRequestId = (_state$byUrl$url2 = state.byUrl[url]) === null || _state$byUrl$url2 === void 0 ? void 0 : _state$byUrl$url2.loadingRequestId;\n\n  // no-op if update does nothing\n  if (current) {\n    const upgradeType = getVersionUpgrade(current.version, tokenList.version);\n    if (upgradeType === VersionUpgrade.NONE) return;\n    if (loadingRequestId === null || loadingRequestId === requestId) {\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: null,\n        current,\n        pendingUpdate: tokenList\n      };\n    }\n  } else {\n    state.byUrl[url] = {\n      ...state.byUrl[url],\n      loadingRequestId: null,\n      error: null,\n      current: tokenList,\n      pendingUpdate: null\n    };\n  }\n}).addCase(fetchTokenList.rejected, (state, _ref3) => {\n  var _state$byUrl$url3;\n  let {\n    payload: {\n      url,\n      requestId,\n      errorMessage\n    }\n  } = _ref3;\n  if (((_state$byUrl$url3 = state.byUrl[url]) === null || _state$byUrl$url3 === void 0 ? void 0 : _state$byUrl$url3.loadingRequestId) !== requestId) {\n    // no-op since it's not the latest request\n    return;\n  }\n  state.byUrl[url] = {\n    ...state.byUrl[url],\n    loadingRequestId: null,\n    error: errorMessage,\n    current: null,\n    pendingUpdate: null\n  };\n}).addCase(selectList, (state, _ref4) => {\n  let {\n    payload: url\n  } = _ref4;\n  state.selectedListUrl = url;\n  // automatically adds list\n  if (!state.byUrl[url]) {\n    state.byUrl[url] = NEW_LIST_STATE;\n  }\n}).addCase(addList, (state, _ref5) => {\n  let {\n    payload: url\n  } = _ref5;\n  if (!state.byUrl[url]) {\n    state.byUrl[url] = NEW_LIST_STATE;\n  }\n}).addCase(removeList, (state, _ref6) => {\n  let {\n    payload: url\n  } = _ref6;\n  if (state.byUrl[url]) {\n    delete state.byUrl[url];\n  }\n  if (state.selectedListUrl === url) {\n    state.selectedListUrl = Object.keys(state.byUrl)[0];\n  }\n}).addCase(acceptListUpdate, (state, _ref7) => {\n  var _state$byUrl$url4;\n  let {\n    payload: url\n  } = _ref7;\n  if (!((_state$byUrl$url4 = state.byUrl[url]) !== null && _state$byUrl$url4 !== void 0 && _state$byUrl$url4.pendingUpdate)) {\n    throw new Error('accept list update called without pending update');\n  }\n  state.byUrl[url] = {\n    ...state.byUrl[url],\n    pendingUpdate: null,\n    current: state.byUrl[url].pendingUpdate\n  };\n}).addCase(updateVersion, state => {\n  // state loaded from localStorage, but new lists have never been initialized\n  if (!state.lastInitializedDefaultListOfLists) {\n    state.byUrl = initialState.byUrl;\n    state.selectedListUrl = undefined;\n  } else if (state.lastInitializedDefaultListOfLists) {\n    const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce((s, l) => s.add(l), new Set());\n    const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce((s, l) => s.add(l), new Set());\n    DEFAULT_LIST_OF_LISTS.forEach(listUrl => {\n      if (!lastInitializedSet.has(listUrl)) {\n        state.byUrl[listUrl] = NEW_LIST_STATE;\n      }\n    });\n    state.lastInitializedDefaultListOfLists.forEach(listUrl => {\n      if (!newListOfListsSet.has(listUrl)) {\n        delete state.byUrl[listUrl];\n      }\n    });\n  }\n  state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS;\n}));","map":{"version":3,"names":["createReducer","getVersionUpgrade","VersionUpgrade","DEFAULT_LIST_OF_LISTS","DEFAULT_TOKEN_LIST_URL","updateVersion","acceptListUpdate","addList","fetchTokenList","removeList","selectList","DEFAULT_LIST","NEW_LIST_STATE","error","current","loadingRequestId","pendingUpdate","initialState","lastInitializedDefaultListOfLists","byUrl","reduce","memo","listUrl","selectedListUrl","builder","addCase","pending","state","_ref","payload","requestId","url","fulfilled","_ref2","_state$byUrl$url","_state$byUrl$url2","tokenList","upgradeType","version","NONE","rejected","_ref3","_state$byUrl$url3","errorMessage","_ref4","_ref5","_ref6","Object","keys","_ref7","_state$byUrl$url4","Error","undefined","lastInitializedSet","s","l","add","Set","newListOfListsSet","forEach","has"],"sources":["C:/projects/panther-frontend-dex1/src/state/lists/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { TokenList } from '@uniswap/token-lists/dist/types'\r\nimport { DEFAULT_LIST_OF_LISTS, DEFAULT_TOKEN_LIST_URL } from '../../constants/lists'\r\nimport { updateVersion } from '../global/actions'\r\nimport { acceptListUpdate, addList, fetchTokenList, removeList, selectList } from './actions'\r\nimport DEFAULT_LIST from '../../constants/token/pantherswap.json'\r\n\r\nexport interface ListsState {\r\n  readonly byUrl: {\r\n    readonly [url: string]: {\r\n      readonly current: TokenList | null\r\n      readonly pendingUpdate: TokenList | null\r\n      readonly loadingRequestId: string | null\r\n      readonly error: string | null\r\n    }\r\n  }\r\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\r\n  readonly lastInitializedDefaultListOfLists?: string[]\r\n  readonly selectedListUrl: string | undefined\r\n}\r\n\r\nconst NEW_LIST_STATE: ListsState['byUrl'][string] = {\r\n  error: null,\r\n  current: null,\r\n  loadingRequestId: null,\r\n  pendingUpdate: null,\r\n}\r\n\r\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\r\n\r\nconst initialState: ListsState = {\r\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\r\n  byUrl: {\r\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\r\n      memo[listUrl] = NEW_LIST_STATE\r\n      return memo\r\n    }, {}),\r\n    [DEFAULT_TOKEN_LIST_URL]: {\r\n      error: null,\r\n      current: DEFAULT_LIST,\r\n      loadingRequestId: null,\r\n      pendingUpdate: null,\r\n    },\r\n  },\r\n  selectedListUrl: DEFAULT_TOKEN_LIST_URL,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\r\n      state.byUrl[url] = {\r\n        current: null,\r\n        pendingUpdate: null,\r\n        ...state.byUrl[url],\r\n        loadingRequestId: requestId,\r\n        error: null,\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\r\n      const current = state.byUrl[url]?.current\r\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\r\n\r\n      // no-op if update does nothing\r\n      if (current) {\r\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\r\n        if (upgradeType === VersionUpgrade.NONE) return\r\n        if (loadingRequestId === null || loadingRequestId === requestId) {\r\n          state.byUrl[url] = {\r\n            ...state.byUrl[url],\r\n            loadingRequestId: null,\r\n            error: null,\r\n            current,\r\n            pendingUpdate: tokenList,\r\n          }\r\n        }\r\n      } else {\r\n        state.byUrl[url] = {\r\n          ...state.byUrl[url],\r\n          loadingRequestId: null,\r\n          error: null,\r\n          current: tokenList,\r\n          pendingUpdate: null,\r\n        }\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\r\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\r\n        // no-op since it's not the latest request\r\n        return\r\n      }\r\n\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        loadingRequestId: null,\r\n        error: errorMessage,\r\n        current: null,\r\n        pendingUpdate: null,\r\n      }\r\n    })\r\n    .addCase(selectList, (state, { payload: url }) => {\r\n      state.selectedListUrl = url\r\n      // automatically adds list\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(addList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(removeList, (state, { payload: url }) => {\r\n      if (state.byUrl[url]) {\r\n        delete state.byUrl[url]\r\n      }\r\n      if (state.selectedListUrl === url) {\r\n        state.selectedListUrl = Object.keys(state.byUrl)[0]\r\n      }\r\n    })\r\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]?.pendingUpdate) {\r\n        throw new Error('accept list update called without pending update')\r\n      }\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        pendingUpdate: null,\r\n        current: state.byUrl[url].pendingUpdate,\r\n      }\r\n    })\r\n    .addCase(updateVersion, (state) => {\r\n      // state loaded from localStorage, but new lists have never been initialized\r\n      if (!state.lastInitializedDefaultListOfLists) {\r\n        state.byUrl = initialState.byUrl\r\n        state.selectedListUrl = undefined\r\n      } else if (state.lastInitializedDefaultListOfLists) {\r\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\r\n          (s, l) => s.add(l),\r\n          new Set()\r\n        )\r\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\r\n\r\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\r\n          if (!lastInitializedSet.has(listUrl)) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n        })\r\n\r\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\r\n          if (!newListOfListsSet.has(listUrl)) {\r\n            delete state.byUrl[listUrl]\r\n          }\r\n        })\r\n      }\r\n\r\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\r\n    })\r\n)\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}