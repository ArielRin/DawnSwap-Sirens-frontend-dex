{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\panther-frontend-dex1\\\\src\\\\components\\\\swap\\\\AdvancedSwapDetails.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { TradeType } from '@pantherswap-libs/sdk';\nimport { Card, CardBody, Text } from '@pantherswap-libs/uikit';\nimport { Field } from '../../state/swap/actions';\nimport { useUserSlippageTolerance } from '../../state/user/hooks';\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../utils/prices';\nimport { AutoColumn } from '../Column';\nimport QuestionHelper from '../QuestionHelper';\nimport { RowBetween, RowFixed } from '../Row';\nimport FormattedPriceImpact from './FormattedPriceImpact';\nimport { SectionBreak } from './styleds';\nimport SwapRoute from './SwapRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TradeSummary(_ref) {\n  var _ref2, _slippageAdjustedAmou, _ref3, _slippageAdjustedAmou2;\n  let {\n    trade,\n    allowedSlippage\n  } = _ref;\n  const {\n    priceImpactWithoutFee,\n    realizedLPFee\n  } = computeTradePriceBreakdown(trade);\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT;\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: isExactIn ? 'Minimum received' : 'Maximum sold'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: isExactIn ? (_ref2 = `${(_slippageAdjustedAmou = slippageAdjustedAmounts[Field.OUTPUT]) === null || _slippageAdjustedAmou === void 0 ? void 0 : _slippageAdjustedAmou.toSignificant(4)} ${trade.outputAmount.currency.symbol}`) !== null && _ref2 !== void 0 ? _ref2 : '-' : (_ref3 = `${(_slippageAdjustedAmou2 = slippageAdjustedAmounts[Field.INPUT]) === null || _slippageAdjustedAmou2 === void 0 ? void 0 : _slippageAdjustedAmou2.toSignificant(4)} ${trade.inputAmount.currency.symbol}`) !== null && _ref3 !== void 0 ? _ref3 : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: \"Price Impact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"The difference between the market price and estimated price due to trade size.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormattedPriceImpact, {\n          priceImpact: priceImpactWithoutFee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: \"Liquidity Provider Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the Treasure-eeey!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = TradeSummary;\nexport function AdvancedSwapDetails(_ref4) {\n  _s();\n  let {\n    trade\n  } = _ref4;\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const showRoute = Boolean(trade && trade.route.path.length > 2);\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"md\",\n    children: trade && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TradeSummary, {\n        trade: trade,\n        allowedSlippage: allowedSlippage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), showRoute && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SectionBreak, {\n          style: {\n            margin: '0 8px',\n            maxWidth: '100%',\n            width: 'auto',\n            marginTop: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          style: {\n            padding: '0 8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"14px\",\n              children: \"Route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n              text: \"Routing through these tokens resulted in the best price for your trade.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SwapRoute, {\n            trade: trade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(AdvancedSwapDetails, \"H61stQQnrbnQDlNsdLMys3w1hVM=\", false, function () {\n  return [useUserSlippageTolerance];\n});\n_c2 = AdvancedSwapDetails;\nvar _c, _c2;\n$RefreshReg$(_c, \"TradeSummary\");\n$RefreshReg$(_c2, \"AdvancedSwapDetails\");","map":{"version":3,"names":["React","TradeType","Card","CardBody","Text","Field","useUserSlippageTolerance","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","AutoColumn","QuestionHelper","RowBetween","RowFixed","FormattedPriceImpact","SectionBreak","SwapRoute","jsxDEV","_jsxDEV","Fragment","_Fragment","TradeSummary","_ref","_ref2","_slippageAdjustedAmou","_ref3","_slippageAdjustedAmou2","trade","allowedSlippage","priceImpactWithoutFee","realizedLPFee","isExactIn","tradeType","EXACT_INPUT","slippageAdjustedAmounts","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","text","OUTPUT","toSignificant","outputAmount","currency","symbol","INPUT","inputAmount","priceImpact","_c","AdvancedSwapDetails","_ref4","_s","showRoute","Boolean","route","path","length","gap","style","margin","maxWidth","width","marginTop","padding","_c2","$RefreshReg$"],"sources":["C:/projects/panther-frontend-dex1/src/components/swap/AdvancedSwapDetails.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Trade, TradeType } from '@pantherswap-libs/sdk'\r\nimport { Card, CardBody, Text } from '@pantherswap-libs/uikit'\r\nimport { Field } from '../../state/swap/actions'\r\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../utils/prices'\r\nimport { AutoColumn } from '../Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { SectionBreak } from './styleds'\r\nimport SwapRoute from './SwapRoute'\r\n\r\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\r\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\r\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\r\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{isExactIn ? 'Minimum received' : 'Maximum sold'}</Text>\r\n            <QuestionHelper text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\" />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {isExactIn\r\n                ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\r\n                  '-'\r\n                : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ??\r\n                  '-'}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">Price Impact</Text>\r\n            <QuestionHelper text=\"The difference between the market price and estimated price due to trade size.\" />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\r\n            <QuestionHelper text=\"For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the Treasure-eeey!\" />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport interface AdvancedSwapDetailsProps {\r\n  trade?: Trade\r\n}\r\n\r\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      {trade && (\r\n        <>\r\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\r\n          {showRoute && (\r\n            <>\r\n              <SectionBreak style={{ margin: '0 8px', maxWidth: '100%', width: 'auto', marginTop: '16px' }} />\r\n              <AutoColumn style={{ padding: '0 8px' }}>\r\n                <RowFixed>\r\n                  <Text fontSize=\"14px\">Route</Text>\r\n                  <QuestionHelper text=\"Routing through these tokens resulted in the best price for your trade.\" />\r\n                </RowFixed>\r\n                <SwapRoute trade={trade} />\r\n              </AutoColumn>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </AutoColumn>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}