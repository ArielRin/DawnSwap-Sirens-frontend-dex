{"ast":null,"code":"var _process$env$REACT_AP;\nimport { Web3Provider } from '@ethersproject/providers';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector';\nimport { PortisConnector } from '@web3-react/portis-connector';\nimport { FortmaticConnector } from './Fortmatic';\nimport { NetworkConnector } from './NetworkConnector';\nimport { BscConnector } from './bsc/bscConnector';\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL;\nconst FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY;\nconst PORTIS_ID = process.env.REACT_APP_PORTIS_ID;\nexport const NETWORK_CHAIN_ID = parseInt((_process$env$REACT_AP = process.env.REACT_APP_CHAIN_ID) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : '1');\nif (typeof NETWORK_URL === 'undefined') {\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`);\n}\nexport const network = new NetworkConnector({\n  urls: {\n    [NETWORK_CHAIN_ID]: NETWORK_URL\n  }\n});\nlet networkLibrary;\nexport function getNetworkLibrary() {\n  var _networkLibrary;\n  // eslint-disable-next-line no-return-assign\n  return networkLibrary = (_networkLibrary = networkLibrary) !== null && _networkLibrary !== void 0 ? _networkLibrary : new Web3Provider(network.provider);\n}\nexport const injected = new InjectedConnector({\n  supportedChainIds: [2611, 56, 97]\n});\nexport const bsc = new BscConnector({\n  supportedChainIds: [2611]\n});\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: {\n    1: NETWORK_URL\n  },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000\n});\n\n// mainnet only\nexport const fortmatic = new FortmaticConnector({\n  apiKey: FORMATIC_KEY !== null && FORMATIC_KEY !== void 0 ? FORMATIC_KEY : '',\n  chainId: 1\n});\n\n// mainnet only\nexport const portis = new PortisConnector({\n  dAppId: PORTIS_ID !== null && PORTIS_ID !== void 0 ? PORTIS_ID : '',\n  networks: [1]\n});\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: NETWORK_URL,\n  appName: 'Uniswap',\n  appLogoUrl: 'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg'\n});","map":{"version":3,"names":["Web3Provider","InjectedConnector","WalletConnectConnector","WalletLinkConnector","PortisConnector","FortmaticConnector","NetworkConnector","BscConnector","NETWORK_URL","process","env","REACT_APP_NETWORK_URL","FORMATIC_KEY","REACT_APP_FORTMATIC_KEY","PORTIS_ID","REACT_APP_PORTIS_ID","NETWORK_CHAIN_ID","parseInt","_process$env$REACT_AP","REACT_APP_CHAIN_ID","Error","network","urls","networkLibrary","getNetworkLibrary","_networkLibrary","provider","injected","supportedChainIds","bsc","walletconnect","rpc","bridge","qrcode","pollingInterval","fortmatic","apiKey","chainId","portis","dAppId","networks","walletlink","url","appName","appLogoUrl"],"sources":["C:/projects/panther-frontend-dex1/src/connectors/index.ts"],"sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\r\nimport { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\nimport { PortisConnector } from '@web3-react/portis-connector'\r\n\r\nimport { FortmaticConnector } from './Fortmatic'\r\nimport { NetworkConnector } from './NetworkConnector'\r\nimport { BscConnector } from './bsc/bscConnector'\r\n\r\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL\r\nconst FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY\r\nconst PORTIS_ID = process.env.REACT_APP_PORTIS_ID\r\n\r\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '1')\r\n\r\nif (typeof NETWORK_URL === 'undefined') {\r\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\r\n}\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n})\r\n\r\nlet networkLibrary: Web3Provider | undefined\r\nexport function getNetworkLibrary(): Web3Provider {\r\n  // eslint-disable-next-line no-return-assign\r\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\r\n}\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [2611,56, 97],\r\n})\r\n\r\nexport const bsc = new BscConnector({ supportedChainIds: [2611] })\r\n\r\n// mainnet only\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { 1: NETWORK_URL },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: 15000,\r\n})\r\n\r\n// mainnet only\r\nexport const fortmatic = new FortmaticConnector({\r\n  apiKey: FORMATIC_KEY ?? '',\r\n  chainId: 1,\r\n})\r\n\r\n// mainnet only\r\nexport const portis = new PortisConnector({\r\n  dAppId: PORTIS_ID ?? '',\r\n  networks: [1],\r\n})\r\n\r\n// mainnet only\r\nexport const walletlink = new WalletLinkConnector({\r\n  url: NETWORK_URL,\r\n  appName: 'Uniswap',\r\n  appLogoUrl:\r\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\r\n})\r\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,sBAAsB,QAAQ,qCAAqC;AAC5E,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,SAASC,eAAe,QAAQ,8BAA8B;AAE9D,SAASC,kBAAkB,QAAQ,aAAa;AAChD,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AACrD,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACG,uBAAuB;AACxD,MAAMC,SAAS,GAAGL,OAAO,CAACC,GAAG,CAACK,mBAAmB;AAEjD,OAAO,MAAMC,gBAAwB,GAAGC,QAAQ,EAAAC,qBAAA,GAACT,OAAO,CAACC,GAAG,CAACS,kBAAkB,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,GAAG,CAAC;AAEvF,IAAI,OAAOV,WAAW,KAAK,WAAW,EAAE;EACtC,MAAM,IAAIY,KAAK,CAAE,8DAA6D,CAAC;AACjF;AAEA,OAAO,MAAMC,OAAO,GAAG,IAAIf,gBAAgB,CAAC;EAC1CgB,IAAI,EAAE;IAAE,CAACN,gBAAgB,GAAGR;EAAY;AAC1C,CAAC,CAAC;AAEF,IAAIe,cAAwC;AAC5C,OAAO,SAASC,iBAAiBA,CAAA,EAAiB;EAAA,IAAAC,eAAA;EAChD;EACA,OAAQF,cAAc,IAAAE,eAAA,GAAGF,cAAc,cAAAE,eAAA,cAAAA,eAAA,GAAI,IAAIzB,YAAY,CAACqB,OAAO,CAACK,QAAe,CAAC;AACtF;AAEA,OAAO,MAAMC,QAAQ,GAAG,IAAI1B,iBAAiB,CAAC;EAC5C2B,iBAAiB,EAAE,CAAC,IAAI,EAAC,EAAE,EAAE,EAAE;AACjC,CAAC,CAAC;AAEF,OAAO,MAAMC,GAAG,GAAG,IAAItB,YAAY,CAAC;EAAEqB,iBAAiB,EAAE,CAAC,IAAI;AAAE,CAAC,CAAC;;AAElE;AACA,OAAO,MAAME,aAAa,GAAG,IAAI5B,sBAAsB,CAAC;EACtD6B,GAAG,EAAE;IAAE,CAAC,EAAEvB;EAAY,CAAC;EACvBwB,MAAM,EAAE,kCAAkC;EAC1CC,MAAM,EAAE,IAAI;EACZC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAG,IAAI9B,kBAAkB,CAAC;EAC9C+B,MAAM,EAAExB,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAI,EAAE;EAC1ByB,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,MAAM,GAAG,IAAIlC,eAAe,CAAC;EACxCmC,MAAM,EAAEzB,SAAS,aAATA,SAAS,cAATA,SAAS,GAAI,EAAE;EACvB0B,QAAQ,EAAE,CAAC,CAAC;AACd,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,UAAU,GAAG,IAAItC,mBAAmB,CAAC;EAChDuC,GAAG,EAAElC,WAAW;EAChBmC,OAAO,EAAE,SAAS;EAClBC,UAAU,EACR;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}