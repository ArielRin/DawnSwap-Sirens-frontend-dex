{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\panther-frontend-dex1\\\\src\\\\components\\\\swap\\\\SwapModalFooter.tsx\",\n  _s = $RefreshSig$();\nimport { TradeType } from '@pantherswap-libs/sdk';\nimport React, { useMemo, useState } from 'react';\nimport { Text, Button } from '@pantherswap-libs/uikit';\nimport { Repeat } from 'react-feather';\nimport { Field } from '../../state/swap/actions';\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, formatExecutionPrice, warningSeverity } from '../../utils/prices';\nimport { AutoColumn } from '../Column';\nimport QuestionHelper from '../QuestionHelper';\nimport { AutoRow, RowBetween, RowFixed } from '../Row';\nimport FormattedPriceImpact from './FormattedPriceImpact';\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SwapModalFooter(_ref) {\n  _s();\n  var _slippageAdjustedAmou, _slippageAdjustedAmou2, _slippageAdjustedAmou3, _slippageAdjustedAmou4;\n  let {\n    trade,\n    onConfirm,\n    allowedSlippage,\n    swapErrorMessage,\n    disabledConfirm\n  } = _ref;\n  const [showInverted, setShowInverted] = useState(false);\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [allowedSlippage, trade]);\n  const {\n    priceImpactWithoutFee,\n    realizedLPFee\n  } = useMemo(() => computeTradePriceBreakdown(trade), [trade]);\n  const severity = warningSeverity(priceImpactWithoutFee);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"0px\",\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            display: 'flex',\n            textAlign: 'right',\n            paddingLeft: '8px',\n            fontWeight: 500\n          },\n          children: [formatExecutionPrice(trade, showInverted), /*#__PURE__*/_jsxDEV(StyledBalanceMaxMini, {\n            onClick: () => setShowInverted(!showInverted),\n            children: /*#__PURE__*/_jsxDEV(Repeat, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: trade.tradeType === TradeType.EXACT_INPUT ? (_slippageAdjustedAmou = (_slippageAdjustedAmou2 = slippageAdjustedAmounts[Field.OUTPUT]) === null || _slippageAdjustedAmou2 === void 0 ? void 0 : _slippageAdjustedAmou2.toSignificant(4)) !== null && _slippageAdjustedAmou !== void 0 ? _slippageAdjustedAmou : '-' : (_slippageAdjustedAmou3 = (_slippageAdjustedAmou4 = slippageAdjustedAmounts[Field.INPUT]) === null || _slippageAdjustedAmou4 === void 0 ? void 0 : _slippageAdjustedAmou4.toSignificant(4)) !== null && _slippageAdjustedAmou3 !== void 0 ? _slippageAdjustedAmou3 : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            marginLeft: \"4px\",\n            children: trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: \"Price Impact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"The difference between the market price and your price due to trade size.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormattedPriceImpact, {\n          priceImpact: priceImpactWithoutFee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: \"Liquidity Provider Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the Sirens Treasure-eeey!.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: realizedLPFee ? `${realizedLPFee === null || realizedLPFee === void 0 ? void 0 : realizedLPFee.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoRow, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onConfirm,\n        disabled: disabledConfirm,\n        variant: severity > 2 ? 'danger' : 'primary',\n        mt: \"10px\",\n        id: \"confirm-swap-or-send\",\n        fullWidth: true,\n        children: severity > 2 ? 'Swap Anyway' : 'Confirm Swap'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n        error: swapErrorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SwapModalFooter, \"EHVFZ8x+z7x1/4xs5fkdJEiuFR4=\");\n_c = SwapModalFooter;\nvar _c;\n$RefreshReg$(_c, \"SwapModalFooter\");","map":{"version":3,"names":["TradeType","React","useMemo","useState","Text","Button","Repeat","Field","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","formatExecutionPrice","warningSeverity","AutoColumn","QuestionHelper","AutoRow","RowBetween","RowFixed","FormattedPriceImpact","StyledBalanceMaxMini","SwapCallbackError","jsxDEV","_jsxDEV","Fragment","_Fragment","SwapModalFooter","_ref","_s","_slippageAdjustedAmou","_slippageAdjustedAmou2","_slippageAdjustedAmou3","_slippageAdjustedAmou4","trade","onConfirm","allowedSlippage","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","slippageAdjustedAmounts","priceImpactWithoutFee","realizedLPFee","severity","children","gap","align","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","style","justifyContent","alignItems","display","textAlign","paddingLeft","fontWeight","onClick","size","tradeType","EXACT_INPUT","text","OUTPUT","toSignificant","INPUT","marginLeft","outputAmount","currency","symbol","inputAmount","priceImpact","disabled","variant","mt","id","fullWidth","error","_c","$RefreshReg$"],"sources":["C:/projects/panther-frontend-dex1/src/components/swap/SwapModalFooter.tsx"],"sourcesContent":["import { Trade, TradeType } from '@pantherswap-libs/sdk'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { Text , Button } from '@pantherswap-libs/uikit'\r\nimport { Repeat } from 'react-feather'\r\n\r\nimport { Field } from '../../state/swap/actions'\r\nimport {\r\n  computeSlippageAdjustedAmounts,\r\n  computeTradePriceBreakdown,\r\n  formatExecutionPrice,\r\n  warningSeverity\r\n} from '../../utils/prices'\r\nimport { AutoColumn } from '../Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\r\n\r\nexport default function SwapModalFooter({\r\n  trade,\r\n  onConfirm,\r\n  allowedSlippage,\r\n  swapErrorMessage,\r\n  disabledConfirm\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  disabledConfirm: boolean\r\n}) {\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\r\n    allowedSlippage,\r\n    trade\r\n  ])\r\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const severity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  return (\r\n    <>\r\n      <AutoColumn gap=\"0px\">\r\n        <RowBetween align=\"center\">\r\n          <Text fontSize=\"14px\">Price</Text>\r\n          <Text\r\n            fontSize=\"14px\"\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              textAlign: 'right',\r\n              paddingLeft: '8px',\r\n              fontWeight: 500\r\n            }}\r\n          >\r\n            {formatExecutionPrice(trade, showInverted)}\r\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n              <Repeat size={14} />\r\n            </StyledBalanceMaxMini>\r\n          </Text>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\r\n            </Text>\r\n            <QuestionHelper text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\" />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\r\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\r\n            </Text>\r\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? trade.outputAmount.currency.symbol\r\n                : trade.inputAmount.currency.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">Price Impact</Text>\r\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\r\n            <QuestionHelper text=\"For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the Sirens Treasure-eeey!.\" />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)  } ${  trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </AutoColumn>\r\n\r\n      <AutoRow>\r\n        <Button\r\n          onClick={onConfirm}\r\n          disabled={disabledConfirm}\r\n          variant={severity > 2 ? 'danger' : 'primary'}\r\n          mt=\"10px\"\r\n          id=\"confirm-swap-or-send\"\r\n          fullWidth\r\n        >\r\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\r\n        </Button>\r\n\r\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n      </AutoRow>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}