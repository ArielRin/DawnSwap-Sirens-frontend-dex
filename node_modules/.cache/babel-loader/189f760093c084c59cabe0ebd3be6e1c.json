{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TasksModel = exports.Tasks = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Create and assign tasks to get files translated or proofread by specific people.\n * You can set the due dates, split words between people, and receive notifications about the changes and updates on tasks.\n * Tasks are project-specific, so you’ll have to create them within a project.\n *\n * Use API to create, modify, and delete specific tasks.\n */\nclass Tasks extends core_1.CrowdinApi {\n  listTasks(projectId, options, deprecatedOffset, deprecatedStatus) {\n    if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n      options = {\n        limit: options,\n        offset: deprecatedOffset,\n        status: deprecatedStatus\n      };\n    }\n    let url = `${this.url}/projects/${projectId}/tasks`;\n    url = this.addQueryParam(url, 'status', options.status);\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.post\n   */\n  addTask(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/tasks`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param taskId task identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.exports.post\n   */\n  exportTaskStrings(projectId, taskId) {\n    const url = `${this.url}/projects/${projectId}/tasks/${taskId}/exports`;\n    return this.post(url, {}, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param taskId task identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.get\n   */\n  getTask(projectId, taskId) {\n    const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param taskId task identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.delete\n   */\n  deleteTask(projectId, taskId) {\n    const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param taskId task identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.patch\n   */\n  editTask(projectId, taskId, request) {\n    const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  listUserTasks(options, deprecatedOffset, deprecatedStatus, deprecatedIsArchived) {\n    let url = `${this.url}/user/tasks`;\n    if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n      options = {\n        limit: options,\n        offset: deprecatedOffset,\n        status: deprecatedStatus,\n        isArchived: deprecatedIsArchived\n      };\n    }\n    url = this.addQueryParam(url, 'status', options.status);\n    url = this.addQueryParam(url, 'isArchived', options.isArchived);\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param taskId task identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.user.tasks.patch\n   */\n  editTaskArchivedStatus(projectId, taskId, request) {\n    let url = `${this.url}/user/tasks/${taskId}`;\n    url = this.addQueryParam(url, 'projectId', projectId);\n    return this.patch(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param options optional parameters for the request\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.settings-templates.getMany\n   */\n  listTaskSettingsTemplates(projectId, options) {\n    const url = `${this.url}/projects/${projectId}/tasks/settings-templates`;\n    return this.getList(url, options === null || options === void 0 ? void 0 : options.limit, options === null || options === void 0 ? void 0 : options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.settings-templates.post\n   */\n  addTaskSettingsTemplate(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/tasks/settings-templates`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param taskSettingsId task settings identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.settings-templates.get\n   */\n  getTaskSettingsTemplate(projectId, taskSettingsId) {\n    const url = `${this.url}/projects/${projectId}/tasks/settings-templates/${taskSettingsId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param taskSettingsId task settings identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.settings-templates.delete\n   */\n  deleteTaskSettingsTemplate(projectId, taskSettingsId) {\n    const url = `${this.url}/projects/${projectId}/tasks/settings-templates/${taskSettingsId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param taskSettingsId task settings identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.settings-templates.patch\n   */\n  editTaskSettingsTemplate(projectId, taskSettingsId, request) {\n    const url = `${this.url}/projects/${projectId}/tasks/settings-templates/${taskSettingsId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n}\nexports.Tasks = Tasks;\nvar TasksModel;\n(function (TasksModel) {\n  let Type;\n  (function (Type) {\n    Type[Type[\"TRANSLATE\"] = 0] = \"TRANSLATE\";\n    Type[Type[\"PROOFREAD\"] = 1] = \"PROOFREAD\";\n    Type[Type[\"TRANSLATE_BY_VENDOR\"] = 2] = \"TRANSLATE_BY_VENDOR\";\n  })(Type = TasksModel.Type || (TasksModel.Type = {}));\n})(TasksModel = exports.TasksModel || (exports.TasksModel = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","TasksModel","Tasks","core_1","require","CrowdinApi","listTasks","projectId","options","deprecatedOffset","deprecatedStatus","isOptionalNumber","arguments","limit","offset","status","url","addQueryParam","getList","addTask","request","post","defaultConfig","exportTaskStrings","taskId","getTask","get","deleteTask","delete","editTask","patch","listUserTasks","deprecatedIsArchived","isArchived","editTaskArchivedStatus","listTaskSettingsTemplates","addTaskSettingsTemplate","getTaskSettingsTemplate","taskSettingsId","deleteTaskSettingsTemplate","editTaskSettingsTemplate","Type"],"sources":["C:/projects/panther-frontend-dex1/node_modules/@crowdin/crowdin-api-client/out/tasks/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TasksModel = exports.Tasks = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Create and assign tasks to get files translated or proofread by specific people.\n * You can set the due dates, split words between people, and receive notifications about the changes and updates on tasks.\n * Tasks are project-specific, so you’ll have to create them within a project.\n *\n * Use API to create, modify, and delete specific tasks.\n */\nclass Tasks extends core_1.CrowdinApi {\n    listTasks(projectId, options, deprecatedOffset, deprecatedStatus) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset, status: deprecatedStatus };\n        }\n        let url = `${this.url}/projects/${projectId}/tasks`;\n        url = this.addQueryParam(url, 'status', options.status);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.post\n     */\n    addTask(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/tasks`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.exports.post\n     */\n    exportTaskStrings(projectId, taskId) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}/exports`;\n        return this.post(url, {}, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.get\n     */\n    getTask(projectId, taskId) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.delete\n     */\n    deleteTask(projectId, taskId) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.patch\n     */\n    editTask(projectId, taskId, request) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    listUserTasks(options, deprecatedOffset, deprecatedStatus, deprecatedIsArchived) {\n        let url = `${this.url}/user/tasks`;\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = {\n                limit: options,\n                offset: deprecatedOffset,\n                status: deprecatedStatus,\n                isArchived: deprecatedIsArchived,\n            };\n        }\n        url = this.addQueryParam(url, 'status', options.status);\n        url = this.addQueryParam(url, 'isArchived', options.isArchived);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.user.tasks.patch\n     */\n    editTaskArchivedStatus(projectId, taskId, request) {\n        let url = `${this.url}/user/tasks/${taskId}`;\n        url = this.addQueryParam(url, 'projectId', projectId);\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param options optional parameters for the request\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.settings-templates.getMany\n     */\n    listTaskSettingsTemplates(projectId, options) {\n        const url = `${this.url}/projects/${projectId}/tasks/settings-templates`;\n        return this.getList(url, options === null || options === void 0 ? void 0 : options.limit, options === null || options === void 0 ? void 0 : options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.settings-templates.post\n     */\n    addTaskSettingsTemplate(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/tasks/settings-templates`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskSettingsId task settings identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.settings-templates.get\n     */\n    getTaskSettingsTemplate(projectId, taskSettingsId) {\n        const url = `${this.url}/projects/${projectId}/tasks/settings-templates/${taskSettingsId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskSettingsId task settings identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.settings-templates.delete\n     */\n    deleteTaskSettingsTemplate(projectId, taskSettingsId) {\n        const url = `${this.url}/projects/${projectId}/tasks/settings-templates/${taskSettingsId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskSettingsId task settings identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.tasks.settings-templates.patch\n     */\n    editTaskSettingsTemplate(projectId, taskSettingsId, request) {\n        const url = `${this.url}/projects/${projectId}/tasks/settings-templates/${taskSettingsId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Tasks = Tasks;\nvar TasksModel;\n(function (TasksModel) {\n    let Type;\n    (function (Type) {\n        Type[Type[\"TRANSLATE\"] = 0] = \"TRANSLATE\";\n        Type[Type[\"PROOFREAD\"] = 1] = \"PROOFREAD\";\n        Type[Type[\"TRANSLATE_BY_VENDOR\"] = 2] = \"TRANSLATE_BY_VENDOR\";\n    })(Type = TasksModel.Type || (TasksModel.Type = {}));\n})(TasksModel = exports.TasksModel || (exports.TasksModel = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}