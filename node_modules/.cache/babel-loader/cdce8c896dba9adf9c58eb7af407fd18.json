{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\panther-frontend-dex1\\\\src\\\\components\\\\ListLogo\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport useHttpLocations from '../../hooks/useHttpLocations';\nimport Logo from '../Logo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledListLogo = styled(Logo)`\n  width: ${_ref => {\n  let {\n    size\n  } = _ref;\n  return size;\n}};\n  height: ${_ref2 => {\n  let {\n    size\n  } = _ref2;\n  return size;\n}};\n`;\n_c = StyledListLogo;\nexport default function ListLogo(_ref3) {\n  _s();\n  let {\n    logoURI,\n    style,\n    size = '24px',\n    alt\n  } = _ref3;\n  const srcs = useHttpLocations(logoURI);\n  return /*#__PURE__*/_jsxDEV(StyledListLogo, {\n    alt: alt,\n    size: size,\n    srcs: srcs,\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n_s(ListLogo, \"PXJnSM69qv/NBbFXlHQsgUPxKxo=\", false, function () {\n  return [useHttpLocations];\n});\n_c2 = ListLogo;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledListLogo\");\n$RefreshReg$(_c2, \"ListLogo\");","map":{"version":3,"names":["React","styled","useHttpLocations","Logo","jsxDEV","_jsxDEV","StyledListLogo","_ref","size","_ref2","_c","ListLogo","_ref3","_s","logoURI","style","alt","srcs","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/projects/panther-frontend-dex1/src/components/ListLogo/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\n\r\nimport Logo from '../Logo'\r\n\r\nconst StyledListLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function ListLogo({\r\n  logoURI,\r\n  style,\r\n  size = '24px',\r\n  alt\r\n}: {\r\n  logoURI: string\r\n  size?: string\r\n  style?: React.CSSProperties\r\n  alt?: string\r\n}) {\r\n  const srcs: string[] = useHttpLocations(logoURI)\r\n\r\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,gBAAgB,MAAM,8BAA8B;AAE3D,OAAOC,IAAI,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGL,MAAM,CAACE,IAAI,CAAoB;AACtD,WAAWI,IAAA;EAAA,IAAC;IAAEC;EAAK,CAAC,GAAAD,IAAA;EAAA,OAAKC,IAAI;AAAA,CAAC;AAC9B,YAAYC,KAAA;EAAA,IAAC;IAAED;EAAK,CAAC,GAAAC,KAAA;EAAA,OAAKD,IAAI;AAAA,CAAC;AAC/B,CAAC;AAAAE,EAAA,GAHKJ,cAAc;AAKpB,eAAe,SAASK,QAAQA,CAAAC,KAAA,EAU7B;EAAAC,EAAA;EAAA,IAV8B;IAC/BC,OAAO;IACPC,KAAK;IACLP,IAAI,GAAG,MAAM;IACbQ;EAMF,CAAC,GAAAJ,KAAA;EACC,MAAMK,IAAc,GAAGf,gBAAgB,CAACY,OAAO,CAAC;EAEhD,oBAAOT,OAAA,CAACC,cAAc;IAACU,GAAG,EAAEA,GAAI;IAACR,IAAI,EAAEA,IAAK;IAACS,IAAI,EAAEA,IAAK;IAACF,KAAK,EAAEA;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E;AAACR,EAAA,CAduBF,QAAQ;EAAA,QAWPT,gBAAgB;AAAA;AAAAoB,GAAA,GAXjBX,QAAQ;AAAA,IAAAD,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}