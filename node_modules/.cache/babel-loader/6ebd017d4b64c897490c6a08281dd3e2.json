{"ast":null,"code":"import _objectSpread from\"C:/projects/panther-frontend-dex1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useContext}from'react';import{Menu as UikitMenu}from'@pantherswap-libs/uikit';import{useWeb3React}from'@web3-react/core';import{allLanguages}from'constants/localisation/languageCodes';import{LanguageContext}from'hooks/LanguageContext';import useTheme from'hooks/useTheme';import useGetPriceData from'hooks/useGetPriceData';// import useGetLocalProfile from 'hooks/useGetLocalProfile'\nimport{injected,bsc,walletconnect}from'connectors';import links from'./config';var Menu=function Menu(props){var _useWeb3React=useWeb3React(),account=_useWeb3React.account,activate=_useWeb3React.activate,deactivate=_useWeb3React.deactivate;var _useContext=useContext(LanguageContext),selectedLanguage=_useContext.selectedLanguage,setSelectedLanguage=_useContext.setSelectedLanguage;var _useTheme=useTheme(),isDark=_useTheme.isDark,toggleTheme=_useTheme.toggleTheme;var priceData=useGetPriceData();var pantherAddress='0x93E7ae1eF759Ee2dBEf0F87424b08d7Af7E4BcA5';var cakePriceUsd=priceData&&priceData.data[pantherAddress]?Number(priceData.data[pantherAddress].price):Number(0);// const profile = useGetLocalProfile()\nreturn/*#__PURE__*/_jsx(UikitMenu,_objectSpread({links:links,account:account,login:function login(connectorId){if(connectorId==='walletconnect'){return activate(walletconnect);}if(connectorId==='bsc'){return activate(bsc);}return activate(injected);},logout:deactivate,isDark:isDark,toggleTheme:toggleTheme,currentLang:(selectedLanguage===null||selectedLanguage===void 0?void 0:selectedLanguage.code)||'',langs:allLanguages,setLang:setSelectedLanguage,cakePriceUsd:cakePriceUsd,cakePriceLink:\"https://redlightscan.finance/token/\".concat(pantherAddress)/* profile={profile} */},props));};export default Menu;","map":{"version":3,"sources":["C:/projects/panther-frontend-dex1/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWeb3React","allLanguages","LanguageContext","useTheme","useGetPriceData","injected","bsc","walletconnect","links","props","account","activate","deactivate","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","priceData","pantherAddress","cakePriceUsd","data","Number","price","connectorId","code"],"mappings":"kMAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAI,GAAIC,CAAAA,SAAjB,KAA+C,yBAA/C,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,YAAT,KAA6B,sCAA7B,CACA,OAASC,eAAT,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,uBAA5B,CACA;AACA,OAASC,QAAT,CAAmBC,GAAnB,CAAwBC,aAAxB,KAA6C,YAA7C,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CAEA,GAAMV,CAAAA,IAAc,CAAG,QAAjBA,CAAAA,IAAiB,CAACW,KAAD,CAAW,mBACUT,YAAY,EADtB,CACxBU,OADwB,eACxBA,OADwB,CACfC,QADe,eACfA,QADe,CACLC,UADK,eACLA,UADK,iBAEkBf,UAAU,CAACK,eAAD,CAF5B,CAExBW,gBAFwB,aAExBA,gBAFwB,CAENC,mBAFM,aAENA,mBAFM,eAGAX,QAAQ,EAHR,CAGxBY,MAHwB,WAGxBA,MAHwB,CAGhBC,WAHgB,WAGhBA,WAHgB,CAIhC,GAAMC,CAAAA,SAAS,CAAGb,eAAe,EAAjC,CAEA,GAAMc,CAAAA,cAAc,CAAG,4CAAvB,CACA,GAAMC,CAAAA,YAAY,CAAGF,SAAS,EAAIA,SAAS,CAACG,IAAV,CAAeF,cAAf,CAAb,CAA8CG,MAAM,CAACJ,SAAS,CAACG,IAAV,CAAeF,cAAf,EAA+BI,KAAhC,CAApD,CAA6FD,MAAM,CAAC,CAAD,CAAxH,CACA;AAEA,mBACE,KAAC,SAAD,gBACE,KAAK,CAAEb,KADT,CAEE,OAAO,CAAEE,OAFX,CAGE,KAAK,CAAE,eAACa,WAAD,CAA8B,CACnC,GAAIA,WAAW,GAAK,eAApB,CAAqC,CACnC,MAAOZ,CAAAA,QAAQ,CAACJ,aAAD,CAAf,CACD,CAED,GAAIgB,WAAW,GAAK,KAApB,CAA2B,CACzB,MAAOZ,CAAAA,QAAQ,CAACL,GAAD,CAAf,CACD,CAED,MAAOK,CAAAA,QAAQ,CAACN,QAAD,CAAf,CACD,CAbH,CAcE,MAAM,CAAEO,UAdV,CAeE,MAAM,CAAEG,MAfV,CAgBE,WAAW,CAAEC,WAhBf,CAiBE,WAAW,CAAE,CAAAH,gBAAgB,OAAhB,EAAAA,gBAAgB,SAAhB,QAAAA,gBAAgB,CAAEW,IAAlB,GAA0B,EAjBzC,CAkBE,KAAK,CAAEvB,YAlBT,CAmBE,OAAO,CAAEa,mBAnBX,CAoBE,YAAY,CAAEK,YApBhB,CAqBE,aAAa,8CAAwCD,cAAxC,CACb,uBAtBF,EAuBMT,KAvBN,EADF,CA2BD,CArCD,CAuCA,cAAeX,CAAAA,IAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Menu as UikitMenu, ConnectorId } from '@pantherswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { allLanguages } from 'constants/localisation/languageCodes'\r\nimport { LanguageContext } from 'hooks/LanguageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetPriceData from 'hooks/useGetPriceData'\r\n// import useGetLocalProfile from 'hooks/useGetLocalProfile'\r\nimport { injected, bsc, walletconnect } from 'connectors'\r\nimport links from './config'\r\n\r\nconst Menu: React.FC = (props) => {\r\n  const { account, activate, deactivate } = useWeb3React()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const priceData = useGetPriceData()\r\n\r\n  const pantherAddress = '0x93E7ae1eF759Ee2dBEf0F87424b08d7Af7E4BcA5'\r\n  const cakePriceUsd = priceData && priceData.data[pantherAddress] ? Number(priceData.data[pantherAddress].price) : Number(0)\r\n  // const profile = useGetLocalProfile()\r\n\r\n  return (\r\n    <UikitMenu\r\n      links={links}\r\n      account={account as string}\r\n      login={(connectorId: ConnectorId) => {\r\n        if (connectorId === 'walletconnect') {\r\n          return activate(walletconnect)\r\n        }\r\n\r\n        if (connectorId === 'bsc') {\r\n          return activate(bsc)\r\n        }\r\n\r\n        return activate(injected)\r\n      }}\r\n      logout={deactivate}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage?.code || ''}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd}\r\n      cakePriceLink={`https://redlightscan.finance/token/${pantherAddress}`}\r\n      /* profile={profile} */\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n"]},"metadata":{},"sourceType":"module"}