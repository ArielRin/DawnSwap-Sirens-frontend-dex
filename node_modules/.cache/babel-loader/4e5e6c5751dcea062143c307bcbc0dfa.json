{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$();\nimport { Pair, Token } from '@pantherswap-libs/sdk';\nimport flatMap from 'lodash.flatmap';\nimport { useCallback, useMemo } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants';\nimport { useActiveWeb3React } from '../../hooks';\n// eslint-disable-next-line import/no-cycle\nimport { useAllTokens } from '../../hooks/Tokens';\nimport { addSerializedPair, addSerializedToken, removeSerializedToken, updateUserDarkMode, updateUserDeadline, updateUserExpertMode, updateUserSlippageTolerance, muteAudio, unmuteAudio } from './actions';\nimport { setThemeCache } from '../../utils/theme';\nfunction serializeToken(token) {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  };\n}\nfunction deserializeToken(serializedToken) {\n  return new Token(serializedToken.chainId, serializedToken.address, serializedToken.decimals, serializedToken.symbol, serializedToken.name);\n}\nexport function useIsDarkMode() {\n  _s();\n  const {\n    userDarkMode,\n    matchesDarkMode\n  } = useSelector(\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  _ref => {\n    let {\n      user: {\n        matchesDarkMode,\n        userDarkMode\n      }\n    } = _ref;\n    return {\n      userDarkMode,\n      matchesDarkMode\n    };\n  }, shallowEqual);\n  return userDarkMode === null ? matchesDarkMode : userDarkMode;\n}\n_s(useIsDarkMode, \"fn6etfcHXfMs02JV/usc15XJU0k=\", false, function () {\n  return [useSelector];\n});\nexport function useDarkModeManager() {\n  _s2();\n  const dispatch = useDispatch();\n  const {\n    userDarkMode\n  } = useSelector(\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  _ref2 => {\n    let {\n      user: {\n        userDarkMode\n      }\n    } = _ref2;\n    return {\n      userDarkMode\n    };\n  }, shallowEqual);\n  const darkMode = useIsDarkMode();\n  const toggleSetDarkMode = useCallback(() => {\n    setThemeCache(!userDarkMode);\n    dispatch(updateUserDarkMode({\n      userDarkMode: !userDarkMode\n    }));\n  }, [userDarkMode, dispatch]);\n  return [darkMode, toggleSetDarkMode];\n}\n_s2(useDarkModeManager, \"dUf2vtNsPqN7JBPlaLgBYV7e93w=\", false, function () {\n  return [useDispatch, useSelector, useIsDarkMode];\n});\nexport function useAudioModeManager() {\n  _s3();\n  const dispatch = useDispatch();\n  const audioPlay = useSelector(state => state.user.audioPlay);\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio());\n    } else {\n      dispatch(unmuteAudio());\n    }\n  }, [audioPlay, dispatch]);\n  return [audioPlay, toggleSetAudioMode];\n}\n_s3(useAudioModeManager, \"peXMsI6wL8RFr9b05KQwkjrw8ic=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useIsExpertMode() {\n  _s4();\n  return useSelector(state => state.user.userExpertMode);\n}\n_s4(useIsExpertMode, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nexport function useExpertModeManager() {\n  _s5();\n  const dispatch = useDispatch();\n  const expertMode = useIsExpertMode();\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({\n      userExpertMode: !expertMode\n    }));\n  }, [expertMode, dispatch]);\n  return [expertMode, toggleSetExpertMode];\n}\n_s5(useExpertModeManager, \"ULLfsmjCcahFerd6rXziokiA+RI=\", false, function () {\n  return [useDispatch, useIsExpertMode];\n});\nexport function useUserSlippageTolerance() {\n  _s6();\n  const dispatch = useDispatch();\n  const userSlippageTolerance = useSelector(state => {\n    return state.user.userSlippageTolerance;\n  });\n  const setUserSlippageTolerance = useCallback(slippageTolerance => {\n    dispatch(updateUserSlippageTolerance({\n      userSlippageTolerance: slippageTolerance\n    }));\n  }, [dispatch]);\n  return [userSlippageTolerance, setUserSlippageTolerance];\n}\n_s6(useUserSlippageTolerance, \"lO9PfBe6MbiNxNv0Q3TS/IyxyIE=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useUserDeadline() {\n  _s7();\n  const dispatch = useDispatch();\n  const userDeadline = useSelector(state => {\n    return state.user.userDeadline;\n  });\n  const setUserDeadline = useCallback(deadline => {\n    dispatch(updateUserDeadline({\n      userDeadline: deadline\n    }));\n  }, [dispatch]);\n  return [userDeadline, setUserDeadline];\n}\n_s7(useUserDeadline, \"nR4EOlfoy/fKrJpN3ITukwrTqzM=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport function useAddUserToken() {\n  _s8();\n  const dispatch = useDispatch();\n  return useCallback(token => {\n    dispatch(addSerializedToken({\n      serializedToken: serializeToken(token)\n    }));\n  }, [dispatch]);\n}\n_s8(useAddUserToken, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\nexport function useRemoveUserAddedToken() {\n  _s9();\n  const dispatch = useDispatch();\n  return useCallback((chainId, address) => {\n    dispatch(removeSerializedToken({\n      chainId,\n      address\n    }));\n  }, [dispatch]);\n}\n_s9(useRemoveUserAddedToken, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\nexport function useUserAddedTokens() {\n  _s10();\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const serializedTokensMap = useSelector(_ref3 => {\n    let {\n      user: {\n        tokens\n      }\n    } = _ref3;\n    return tokens;\n  });\n  return useMemo(() => {\n    var _serializedTokensMap;\n    if (!chainId) return [];\n    return Object.values((_serializedTokensMap = serializedTokensMap[chainId]) !== null && _serializedTokensMap !== void 0 ? _serializedTokensMap : {}).map(deserializeToken);\n  }, [serializedTokensMap, chainId]);\n}\n_s10(useUserAddedTokens, \"PdCPfDsyvt0iyDvIy6GqqMS0G5U=\", false, function () {\n  return [useActiveWeb3React, useSelector];\n});\nfunction serializePair(pair) {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1)\n  };\n}\nexport function usePairAdder() {\n  _s11();\n  const dispatch = useDispatch();\n  return useCallback(pair => {\n    dispatch(addSerializedPair({\n      serializedPair: serializePair(pair)\n    }));\n  }, [dispatch]);\n}\n\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\n_s11(usePairAdder, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\nexport function toV2LiquidityToken(_ref4) {\n  let [tokenA, tokenB] = _ref4;\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Sirens-LP', 'SirensTreasure LPs');\n}\n\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\nexport function useTrackedTokenPairs() {\n  _s12();\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const tokens = useAllTokens();\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => {\n    var _PINNED_PAIRS$chainId;\n    return chainId ? (_PINNED_PAIRS$chainId = PINNED_PAIRS[chainId]) !== null && _PINNED_PAIRS$chainId !== void 0 ? _PINNED_PAIRS$chainId : [] : [];\n  }, [chainId]);\n\n  // pairs for every token against every base\n  const generatedPairs = useMemo(() => chainId ? flatMap(Object.keys(tokens), tokenAddress => {\n    var _BASES_TO_TRACK_LIQUI;\n    const token = tokens[tokenAddress];\n    // for each token on the current chain,\n    return (\n      // loop though all bases on the current chain\n      ((_BASES_TO_TRACK_LIQUI = BASES_TO_TRACK_LIQUIDITY_FOR[chainId]) !== null && _BASES_TO_TRACK_LIQUI !== void 0 ? _BASES_TO_TRACK_LIQUI : [] // to construct pairs of the given token with each base\n      ).map(base => {\n        if (base.address === token.address) {\n          return null;\n        }\n        return [base, token];\n      }).filter(p => p !== null)\n    );\n  }) : [], [tokens, chainId]);\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector(_ref5 => {\n    let {\n      user: {\n        pairs\n      }\n    } = _ref5;\n    return pairs;\n  });\n  const userPairs = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return [];\n    const forChain = savedSerializedPairs[chainId];\n    if (!forChain) return [];\n    return Object.keys(forChain).map(pairId => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)];\n    });\n  }, [savedSerializedPairs, chainId]);\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [generatedPairs, pinnedPairs, userPairs]);\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce((memo, _ref6) => {\n      let [tokenA, tokenB] = _ref6;\n      const sorted = tokenA.sortsBefore(tokenB);\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\n      if (memo[key]) return memo;\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\n      return memo;\n    }, {});\n    return Object.keys(keyed).map(key => keyed[key]);\n  }, [combinedList]);\n}\n_s12(useTrackedTokenPairs, \"oBOSU+ngm2b9bAOkfOtlhmAQB98=\", false, function () {\n  return [useActiveWeb3React, useAllTokens, useSelector];\n});","map":{"version":3,"names":["Pair","Token","flatMap","useCallback","useMemo","shallowEqual","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useActiveWeb3React","useAllTokens","addSerializedPair","addSerializedToken","removeSerializedToken","updateUserDarkMode","updateUserDeadline","updateUserExpertMode","updateUserSlippageTolerance","muteAudio","unmuteAudio","setThemeCache","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","_s","userDarkMode","matchesDarkMode","_ref","user","useDarkModeManager","_s2","dispatch","_ref2","darkMode","toggleSetDarkMode","useAudioModeManager","_s3","audioPlay","state","toggleSetAudioMode","useIsExpertMode","_s4","userExpertMode","useExpertModeManager","_s5","expertMode","toggleSetExpertMode","useUserSlippageTolerance","_s6","userSlippageTolerance","setUserSlippageTolerance","slippageTolerance","useUserDeadline","_s7","userDeadline","setUserDeadline","deadline","useAddUserToken","_s8","useRemoveUserAddedToken","_s9","useUserAddedTokens","_s10","serializedTokensMap","_ref3","tokens","_serializedTokensMap","Object","values","map","serializePair","pair","token0","token1","usePairAdder","_s11","serializedPair","toV2LiquidityToken","_ref4","tokenA","tokenB","getAddress","useTrackedTokenPairs","_s12","pinnedPairs","_PINNED_PAIRS$chainId","generatedPairs","keys","tokenAddress","_BASES_TO_TRACK_LIQUI","base","filter","p","savedSerializedPairs","_ref5","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","_ref6","sorted","sortsBefore","key"],"sources":["C:/projects/panther-frontend-dex1/src/state/user/hooks.tsx"],"sourcesContent":["import { ChainId, Pair, Token } from '@pantherswap-libs/sdk'\r\nimport flatMap from 'lodash.flatmap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\n// eslint-disable-next-line import/no-cycle\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserDarkMode,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  muteAudio,\r\n  unmuteAudio,\r\n} from './actions'\r\nimport { setThemeCache } from '../../utils/theme'\r\n\r\nfunction serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n  }\r\n}\r\n\r\nfunction deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name\r\n  )\r\n}\r\n\r\nexport function useIsDarkMode(): boolean {\r\n  const { userDarkMode, matchesDarkMode } = useSelector<\r\n    AppState,\r\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\r\n  >(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\r\n      userDarkMode,\r\n      matchesDarkMode,\r\n    }),\r\n    shallowEqual\r\n  )\r\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\r\n}\r\n\r\nexport function useDarkModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { userDarkMode } = useSelector<AppState, { userDarkMode: boolean | null }>(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { userDarkMode } }) => ({\r\n      userDarkMode,\r\n    }),\r\n    shallowEqual\r\n  )\r\n  const darkMode = useIsDarkMode()\r\n\r\n  const toggleSetDarkMode = useCallback(() => {\r\n    setThemeCache(!userDarkMode)\r\n    dispatch(updateUserDarkMode({ userDarkMode: !userDarkMode }))\r\n  }, [userDarkMode, dispatch])\r\n\r\n  return [darkMode, toggleSetDarkMode]\r\n}\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippageTolerance: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippageTolerance }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserDeadline(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\nexport function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Sirens-LP', 'SirensTreasure LPs')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress]\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null\r\n                  }\r\n                  return [base, token]\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            )\r\n          })\r\n        : [],\r\n    [tokens, chainId]\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [\r\n    generatedPairs,\r\n    pinnedPairs,\r\n    userPairs,\r\n  ])\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}