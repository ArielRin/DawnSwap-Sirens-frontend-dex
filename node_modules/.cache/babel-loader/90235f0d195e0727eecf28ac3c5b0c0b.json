{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\panther-frontend-dex1\\\\src\\\\components\\\\ConnectWalletButton\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { Button, useWalletModal } from '@pantherswap-libs/uikit';\nimport { injected, walletconnect } from 'connectors';\nimport useI18n from 'hooks/useI18n';\n\nconst UnlockButton = props => {\n  _s();\n\n  const TranslateString = useI18n();\n  const {\n    account,\n    activate,\n    deactivate\n  } = useWeb3React();\n\n  const handleLogin = connectorId => {\n    if (connectorId === 'walletconnect') {\n      return activate(walletconnect);\n    }\n\n    return activate(injected);\n  };\n\n  const {\n    onPresentConnectModal\n  } = useWalletModal(handleLogin, deactivate, account);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: onPresentConnectModal,\n    ...props,\n    children: TranslateString(292, 'Unlock Wallet')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UnlockButton, \"+03MW4BaMsLQsQM1I5ci5VVMMfc=\", false, function () {\n  return [useI18n, useWeb3React, useWalletModal];\n});\n\n_c = UnlockButton;\nexport default UnlockButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnlockButton\");","map":{"version":3,"sources":["C:/projects/panther-frontend-dex1/src/components/ConnectWalletButton/index.tsx"],"names":["React","useWeb3React","Button","useWalletModal","injected","walletconnect","useI18n","UnlockButton","props","TranslateString","account","activate","deactivate","handleLogin","connectorId","onPresentConnectModal"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,MAAT,EAA2CC,cAA3C,QAAiE,yBAAjE;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,YAAxC;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,YAAmC,GAAGC,KAAK,IAAI;AAAA;;AACnD,QAAMC,eAAe,GAAGH,OAAO,EAA/B;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAoCX,YAAY,EAAtD;;AAEA,QAAMY,WAAW,GAAIC,WAAD,IAA8B;AAChD,QAAIA,WAAW,KAAK,eAApB,EAAqC;AACnC,aAAOH,QAAQ,CAACN,aAAD,CAAf;AACD;;AACD,WAAOM,QAAQ,CAACP,QAAD,CAAf;AACD,GALD;;AAOA,QAAM;AAAEW,IAAAA;AAAF,MAA4BZ,cAAc,CAACU,WAAD,EAAcD,UAAd,EAA0BF,OAA1B,CAAhD;AAEA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,qBAAjB;AAAA,OAA4CP,KAA5C;AAAA,cACGC,eAAe,CAAC,GAAD,EAAM,eAAN;AADlB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;GAAMF,Y;UACoBD,O,EACkBL,Y,EASRE,c;;;KAX9BI,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, ButtonProps, ConnectorId, useWalletModal } from '@pantherswap-libs/uikit'\r\nimport { injected, walletconnect } from 'connectors'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton: React.FC<ButtonProps> = props => {\r\n  const TranslateString = useI18n()\r\n  const { account, activate, deactivate } = useWeb3React()\r\n\r\n  const handleLogin = (connectorId: ConnectorId) => {\r\n    if (connectorId === 'walletconnect') {\r\n      return activate(walletconnect)\r\n    }\r\n    return activate(injected)\r\n  }\r\n\r\n  const { onPresentConnectModal } = useWalletModal(handleLogin, deactivate, account as string)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n"]},"metadata":{},"sourceType":"module"}