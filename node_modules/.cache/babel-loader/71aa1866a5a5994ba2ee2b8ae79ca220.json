{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OrganizationWebhooks = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Webhooks allow you to collect information about events that happen in your Crowdin account.\n *\n * You can select the request type, content type, and add a custom payload, which allows you to create integrations with other systems on your own.\n */\nclass OrganizationWebhooks extends core_1.CrowdinApi {\n  /**\n   * @param options optional pagination parameters for the request\n   * @see https://developer.crowdin.com/api/v2/#operation/api.webhooks.getMany\n   */\n  listWebhooks(options) {\n    const url = `${this.url}/webhooks`;\n    return this.getList(url, options === null || options === void 0 ? void 0 : options.limit, options === null || options === void 0 ? void 0 : options.offset);\n  }\n  /**\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.webhooks.post\n   */\n  addWebhook(request) {\n    const url = `${this.url}/webhooks`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param webhookId webhook identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.webhooks.get\n   */\n  getWebhook(webhookId) {\n    const url = `${this.url}/webhooks/${webhookId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param webhookId webhook identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.webhooks.delete\n   */\n  deleteWebhook(webhookId) {\n    const url = `${this.url}/webhooks/${webhookId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param webhookId webhook identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.webhooks.patch\n   */\n  editWebhook(webhookId, request) {\n    const url = `${this.url}/webhooks/${webhookId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n}\nexports.OrganizationWebhooks = OrganizationWebhooks;","map":{"version":3,"names":["Object","defineProperty","exports","value","OrganizationWebhooks","core_1","require","CrowdinApi","listWebhooks","options","url","getList","limit","offset","addWebhook","request","post","defaultConfig","getWebhook","webhookId","get","deleteWebhook","delete","editWebhook","patch"],"sources":["C:/projects/panther-frontend-dex1/node_modules/@crowdin/crowdin-api-client/out/organizationWebhooks/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OrganizationWebhooks = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Webhooks allow you to collect information about events that happen in your Crowdin account.\n *\n * You can select the request type, content type, and add a custom payload, which allows you to create integrations with other systems on your own.\n */\nclass OrganizationWebhooks extends core_1.CrowdinApi {\n    /**\n     * @param options optional pagination parameters for the request\n     * @see https://developer.crowdin.com/api/v2/#operation/api.webhooks.getMany\n     */\n    listWebhooks(options) {\n        const url = `${this.url}/webhooks`;\n        return this.getList(url, options === null || options === void 0 ? void 0 : options.limit, options === null || options === void 0 ? void 0 : options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.webhooks.post\n     */\n    addWebhook(request) {\n        const url = `${this.url}/webhooks`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param webhookId webhook identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.webhooks.get\n     */\n    getWebhook(webhookId) {\n        const url = `${this.url}/webhooks/${webhookId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param webhookId webhook identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.webhooks.delete\n     */\n    deleteWebhook(webhookId) {\n        const url = `${this.url}/webhooks/${webhookId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param webhookId webhook identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.webhooks.patch\n     */\n    editWebhook(webhookId, request) {\n        const url = `${this.url}/webhooks/${webhookId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.OrganizationWebhooks = OrganizationWebhooks;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrC,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA,MAAMF,oBAAoB,SAASC,MAAM,CAACE,UAAU,CAAC;EACjD;AACJ;AACA;AACA;EACIC,YAAYA,CAACC,OAAO,EAAE;IAClB,MAAMC,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,WAAU;IAClC,OAAO,IAAI,CAACC,OAAO,CAACD,GAAG,EAAED,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,KAAK,EAAEH,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,MAAM,CAAC;EAC/J;EACA;AACJ;AACA;AACA;EACIC,UAAUA,CAACC,OAAO,EAAE;IAChB,MAAML,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,WAAU;IAClC,OAAO,IAAI,CAACM,IAAI,CAACN,GAAG,EAAEK,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACxD;EACA;AACJ;AACA;AACA;EACIC,UAAUA,CAACC,SAAS,EAAE;IAClB,MAAMT,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYS,SAAU,EAAC;IAC/C,OAAO,IAAI,CAACC,GAAG,CAACV,GAAG,EAAE,IAAI,CAACO,aAAa,CAAC,CAAC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;EACII,aAAaA,CAACF,SAAS,EAAE;IACrB,MAAMT,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYS,SAAU,EAAC;IAC/C,OAAO,IAAI,CAACG,MAAM,CAACZ,GAAG,EAAE,IAAI,CAACO,aAAa,CAAC,CAAC,CAAC;EACjD;EACA;AACJ;AACA;AACA;AACA;EACIM,WAAWA,CAACJ,SAAS,EAAEJ,OAAO,EAAE;IAC5B,MAAML,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYS,SAAU,EAAC;IAC/C,OAAO,IAAI,CAACK,KAAK,CAACd,GAAG,EAAEK,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACzD;AACJ;AACAf,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB"},"metadata":{},"sourceType":"script"}