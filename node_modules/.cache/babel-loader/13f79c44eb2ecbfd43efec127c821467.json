{"ast":null,"code":"var _s = $RefreshSig$();\nimport { getVersionUpgrade, minVersionBump, VersionUpgrade } from '@uniswap/token-lists';\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback';\nimport useInterval from '../../hooks/useInterval';\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible';\nimport { addPopup } from '../application/actions';\nimport { acceptListUpdate } from './actions';\nexport default function Updater() {\n  _s();\n  const {\n    library\n  } = useActiveWeb3React();\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists.byUrl);\n  const isWindowVisible = useIsWindowVisible();\n  const fetchList = useFetchListCallback();\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return;\n    Object.keys(lists).forEach(url => fetchList(url).catch(error => console.error('interval list fetching error', error)));\n  }, [fetchList, isWindowVisible, lists]);\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null);\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach(listUrl => {\n      const list = lists[listUrl];\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch(error => console.error('list added fetching error', error));\n      }\n    });\n  }, [dispatch, fetchList, library, lists]);\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach(listUrl => {\n      const list = lists[listUrl];\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version);\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump');\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n            const min = minVersionBump(list.current.tokens, list.pendingUpdate.tokens);\n            // automatically update minor/patch as long as bump matches the min update\n            if (bump >= min) {\n              dispatch(acceptListUpdate(listUrl));\n              dispatch(addPopup({\n                key: listUrl,\n                content: {\n                  listUpdate: {\n                    listUrl,\n                    oldList: list.current,\n                    newList: list.pendingUpdate,\n                    auto: true\n                  }\n                }\n              }));\n            } else {\n              console.error(`List at url ${listUrl} could not automatically update because the version bump was only PATCH/MINOR while the update had breaking changes and should have been MAJOR`);\n            }\n            break;\n          case VersionUpgrade.MAJOR:\n            dispatch(addPopup({\n              key: listUrl,\n              content: {\n                listUpdate: {\n                  listUrl,\n                  auto: false,\n                  oldList: list.current,\n                  newList: list.pendingUpdate\n                }\n              },\n              removeAfterMs: null\n            }));\n        }\n      }\n    });\n  }, [dispatch, lists]);\n  return null;\n}\n_s(Updater, \"igoRxB83c/UenJzv1nZA8K+H65M=\", false, function () {\n  return [useActiveWeb3React, useDispatch, useSelector, useIsWindowVisible, useFetchListCallback, useInterval];\n});\n_c = Updater;\nvar _c;\n$RefreshReg$(_c, \"Updater\");","map":{"version":3,"names":["getVersionUpgrade","minVersionBump","VersionUpgrade","useCallback","useEffect","useDispatch","useSelector","useActiveWeb3React","useFetchListCallback","useInterval","useIsWindowVisible","addPopup","acceptListUpdate","Updater","_s","library","dispatch","lists","state","byUrl","isWindowVisible","fetchList","fetchAllListsCallback","Object","keys","forEach","url","catch","error","console","listUrl","list","current","loadingRequestId","pendingUpdate","bump","version","NONE","Error","PATCH","MINOR","min","tokens","key","content","listUpdate","oldList","newList","auto","MAJOR","removeAfterMs","_c","$RefreshReg$"],"sources":["C:/projects/panther-frontend-dex1/src/state/lists/updater.ts"],"sourcesContent":["import { getVersionUpgrade, minVersionBump, VersionUpgrade } from '@uniswap/token-lists'\r\nimport { useCallback, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\r\nimport useInterval from '../../hooks/useInterval'\r\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\r\nimport { addPopup } from '../application/actions'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { acceptListUpdate } from './actions'\r\n\r\nexport default function Updater(): null {\r\n  const { library } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n\r\n  const isWindowVisible = useIsWindowVisible()\r\n\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const fetchAllListsCallback = useCallback(() => {\r\n    if (!isWindowVisible) return\r\n    Object.keys(lists).forEach((url) =>\r\n      fetchList(url).catch((error) => console.error('interval list fetching error', error))\r\n    )\r\n  }, [fetchList, isWindowVisible, lists])\r\n\r\n  // fetch all lists every 10 minutes, but only after we initialize library\r\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\r\n\r\n  // whenever a list is not loaded and not loading, try again to load it\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n\r\n      if (!list.current && !list.loadingRequestId && !list.error) {\r\n        fetchList(listUrl).catch((error) => console.error('list added fetching error', error))\r\n      }\r\n    })\r\n  }, [dispatch, fetchList, library, lists])\r\n\r\n  // automatically update lists if versions are minor/patch\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (list.current && list.pendingUpdate) {\r\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\r\n        switch (bump) {\r\n          case VersionUpgrade.NONE:\r\n            throw new Error('unexpected no version bump')\r\n          case VersionUpgrade.PATCH:\r\n          case VersionUpgrade.MINOR:\r\n            const min = minVersionBump(list.current.tokens, list.pendingUpdate.tokens)\r\n            // automatically update minor/patch as long as bump matches the min update\r\n            if (bump >= min) {\r\n              dispatch(acceptListUpdate(listUrl))\r\n              dispatch(\r\n                addPopup({\r\n                  key: listUrl,\r\n                  content: {\r\n                    listUpdate: {\r\n                      listUrl,\r\n                      oldList: list.current,\r\n                      newList: list.pendingUpdate,\r\n                      auto: true,\r\n                    },\r\n                  },\r\n                })\r\n              )\r\n            } else {\r\n              console.error(\r\n                `List at url ${listUrl} could not automatically update because the version bump was only PATCH/MINOR while the update had breaking changes and should have been MAJOR`\r\n              )\r\n            }\r\n            break\r\n\r\n          case VersionUpgrade.MAJOR:\r\n            dispatch(\r\n              addPopup({\r\n                key: listUrl,\r\n                content: {\r\n                  listUpdate: {\r\n                    listUrl,\r\n                    auto: false,\r\n                    oldList: list.current,\r\n                    newList: list.pendingUpdate,\r\n                  },\r\n                },\r\n                removeAfterMs: null,\r\n              })\r\n            )\r\n        }\r\n      }\r\n    })\r\n  }, [dispatch, lists])\r\n\r\n  return null\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}