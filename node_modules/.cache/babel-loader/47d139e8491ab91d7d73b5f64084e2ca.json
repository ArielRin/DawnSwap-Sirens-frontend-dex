{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\panther-frontend-dex1\\\\src\\\\pages\\\\Swap\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { JSBI, Token } from '@pantherswap-libs/sdk';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { ArrowDown } from 'react-feather';\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text } from '@pantherswap-libs/uikit';\nimport { ThemeContext } from 'styled-components';\nimport AddressInputPanel from 'components/AddressInputPanel';\nimport Card, { GreyCard } from 'components/Card';\nimport { AutoColumn } from 'components/Column';\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal';\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\nimport CardNav from 'components/CardNav';\nimport { AutoRow, RowBetween } from 'components/Row';\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown';\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee';\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds';\nimport TradePrice from 'components/swap/TradePrice';\nimport TokenWarningModal from 'components/TokenWarningModal';\nimport SyrupWarningModal from 'components/SyrupWarningModal';\nimport ProgressSteps from 'components/ProgressSteps';\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index';\nimport { useActiveWeb3React } from 'hooks';\nimport { useCurrency } from 'hooks/Tokens';\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback';\nimport { useSwapCallback } from 'hooks/useSwapCallback';\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback';\nimport { Field } from 'state/swap/actions';\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks';\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks';\nimport { LinkStyledButton, TYPE } from 'components/Shared';\nimport { maxAmountSpend } from 'utils/maxAmountSpend';\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices';\nimport Loader from 'components/Loader';\nimport { TranslateString } from 'utils/translateTextHelpers';\nimport PageHeader from 'components/PageHeader';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport AppBody from '../AppBody';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  main: Main\n} = TYPE;\nconst Swap = () => {\n  _s();\n  var _parsedAmounts$indepe, _parsedAmounts$indepe2, _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$indepe3, _parsedAmounts$Field$, _currencies$Field$INP;\n  const loadedUrlParams = useDefaultsFromURLSearch();\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId)];\n  const [dismissTokenWarning, setDismissTokenWarning] = useState(false);\n  const [isSyrup, setIsSyrup] = useState(false);\n  const [syrupTransactionType, setSyrupTransactionType] = useState('');\n  const urlLoadedTokens = useMemo(() => {\n    var _filter, _ref;\n    return (_filter = (_ref = [loadedInputCurrency, loadedOutputCurrency]) === null || _ref === void 0 ? void 0 : _ref.filter(c => c instanceof Token)) !== null && _filter !== void 0 ? _filter : [];\n  }, [loadedInputCurrency, loadedOutputCurrency]);\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true);\n  }, []);\n  const handleConfirmSyrupWarning = useCallback(() => {\n    setIsSyrup(false);\n    setSyrupTransactionType('');\n  }, []);\n  const {\n    account\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const [isExpertMode] = useExpertModeManager();\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline();\n  const [allowedSlippage] = useUserSlippageTolerance();\n\n  // swap state\n  const {\n    independentField,\n    typedValue,\n    recipient\n  } = useSwapState();\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\n  const showWrap = wrapType !== WrapType.NOT_APPLICABLE;\n  const trade = v2Trade;\n  const parsedAmounts = showWrap ? {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount\n  } : {\n    [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount,\n    [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount\n  };\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const isValid = !swapInputError;\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const handleTypeInput = useCallback(value => {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  const handleTypeOutput = useCallback(value => {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]);\n\n  // modal and loading\n  const [{\n    showConfirm,\n    tradeToConfirm,\n    swapErrorMessage,\n    attemptingTxn,\n    txHash\n  }, setSwapState] = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  });\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n  const route = trade === null || trade === void 0 ? void 0 : trade.route;\n  const userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n  const noRoute = !route;\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage);\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n  const maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT]);\n  const atMaxAmountInput = Boolean(maxAmountInput && ((_parsedAmounts$Field$ = parsedAmounts[Field.INPUT]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.equalTo(maxAmountInput)));\n\n  // the callback to execute the swap\n  const {\n    callback: swapCallback,\n    error: swapCallbackError\n  } = useSwapCallback(trade, allowedSlippage, deadline, recipient);\n  const {\n    priceImpactWithoutFee\n  } = computeTradePriceBreakdown(trade);\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return;\n    }\n    if (!swapCallback) {\n      return;\n    }\n    setSwapState(prevState => ({\n      ...prevState,\n      attemptingTxn: true,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    }));\n    swapCallback().then(hash => {\n      setSwapState(prevState => ({\n        ...prevState,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        txHash: hash\n      }));\n    }).catch(error => {\n      setSwapState(prevState => ({\n        ...prevState,\n        attemptingTxn: false,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      }));\n    });\n  }, [priceImpactWithoutFee, swapCallback, setSwapState]);\n\n  // errors\n  const [showInverted, setShowInverted] = useState(false);\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow = !swapInputError && (approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING || approvalSubmitted && approval === ApprovalState.APPROVED) && !(priceImpactSeverity > 3 && !isExpertMode);\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState(prevState => ({\n      ...prevState,\n      showConfirm: false\n    }));\n\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [onUserInput, txHash, setSwapState]);\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState(prevState => ({\n      ...prevState,\n      tradeToConfirm: trade\n    }));\n  }, [trade]);\n\n  // This will check to see if the user has selected Syrup to either buy or sell.\n  // If so, they will be alerted with a warning message.\n  const checkForSyrup = useCallback((selected, purchaseType) => {\n    if (selected === 'syrup') {\n      setIsSyrup(true);\n      setSyrupTransactionType(purchaseType);\n    }\n  }, [setIsSyrup, setSyrupTransactionType]);\n  const handleInputSelect = useCallback(inputCurrency => {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n    onCurrencySelection(Field.INPUT, inputCurrency);\n    if (inputCurrency.symbol.toLowerCase() === 'syrup') {\n      checkForSyrup(inputCurrency.symbol.toLowerCase(), 'Selling');\n    }\n  }, [onCurrencySelection, setApprovalSubmitted, checkForSyrup]);\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact());\n    }\n  }, [maxAmountInput, onUserInput]);\n  const handleOutputSelect = useCallback(outputCurrency => {\n    onCurrencySelection(Field.OUTPUT, outputCurrency);\n    if (outputCurrency.symbol.toLowerCase() === 'syrup') {\n      checkForSyrup(outputCurrency.symbol.toLowerCase(), 'Buying');\n    }\n  }, [onCurrencySelection, checkForSyrup]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TokenWarningModal, {\n      isOpen: urlLoadedTokens.length > 0 && !dismissTokenWarning,\n      tokens: urlLoadedTokens,\n      onConfirm: handleConfirmTokenWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SyrupWarningModal, {\n      isOpen: isSyrup,\n      transactionType: syrupTransactionType,\n      onConfirm: handleConfirmSyrupWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        id: \"swap-page\",\n        children: [/*#__PURE__*/_jsxDEV(ConfirmSwapModal, {\n          isOpen: showConfirm,\n          trade: trade,\n          originalTrade: tradeToConfirm,\n          onAcceptChanges: handleAcceptChanges,\n          attemptingTxn: attemptingTxn,\n          txHash: txHash,\n          recipient: recipient,\n          allowedSlippage: allowedSlippage,\n          onConfirm: handleSwap,\n          swapErrorMessage: swapErrorMessage,\n          onDismiss: handleConfirmDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PageHeader, {\n          title: \"Exchange\",\n          description: \"Trade tokens in an instant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              label: independentField === Field.OUTPUT && !showWrap && trade ? 'From (estimated)' : TranslateString(76, 'From'),\n              value: formattedAmounts[Field.INPUT],\n              showMaxButton: !atMaxAmountInput,\n              currency: currencies[Field.INPUT],\n              onUserInput: handleTypeInput,\n              onMax: handleMaxInput,\n              onCurrencySelect: handleInputSelect,\n              otherCurrency: currencies[Field.OUTPUT],\n              id: \"swap-currency-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n              justify: \"space-between\",\n              children: /*#__PURE__*/_jsxDEV(AutoRow, {\n                justify: isExpertMode ? 'space-between' : 'center',\n                style: {\n                  padding: '0 1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                  clickable: true,\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    variant: \"tertiary\",\n                    onClick: () => {\n                      setApprovalSubmitted(false); // reset 2 step UI for approvals\n                      onSwitchTokens();\n                    },\n                    style: {\n                      borderRadius: '50%'\n                    },\n                    size: \"sm\",\n                    children: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n                      color: \"primary\",\n                      width: \"24px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this), recipient === null && !showWrap && isExpertMode ? /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                  id: \"add-recipient-button\",\n                  onClick: () => onChangeRecipient(''),\n                  children: \"+ Add a send (optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              value: formattedAmounts[Field.OUTPUT],\n              onUserInput: handleTypeOutput,\n              label: independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : TranslateString(80, 'To'),\n              showMaxButton: false,\n              currency: currencies[Field.OUTPUT],\n              onCurrencySelect: handleOutputSelect,\n              otherCurrency: currencies[Field.INPUT],\n              id: \"swap-currency-output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), recipient !== null && !showWrap ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                justify: \"space-between\",\n                style: {\n                  padding: '0 1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                  clickable: false,\n                  children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                    size: \"16\",\n                    color: theme.colors.textSubtle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                  id: \"remove-recipient-button\",\n                  onClick: () => onChangeRecipient(null),\n                  children: \"- Remove send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n                id: \"recipient\",\n                value: recipient,\n                onChange: onChangeRecipient\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : null, showWrap ? null : /*#__PURE__*/_jsxDEV(Card, {\n              padding: \".25rem .75rem 0 .75rem\",\n              borderRadius: \"20px\",\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"4px\",\n                children: [Boolean(trade) && /*#__PURE__*/_jsxDEV(RowBetween, {\n                  align: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"14px\",\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TradePrice, {\n                    price: trade === null || trade === void 0 ? void 0 : trade.executionPrice,\n                    showInverted: showInverted,\n                    setShowInverted: setShowInverted\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 23\n                }, this), allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && /*#__PURE__*/_jsxDEV(RowBetween, {\n                  align: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"14px\",\n                    children: \"Slippage Tolerance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"14px\",\n                    children: [allowedSlippage / 100, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BottomGrouping, {\n            children: [!account ? /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this) : showWrap ? /*#__PURE__*/_jsxDEV(Button, {\n              disabled: Boolean(wrapInputError),\n              onClick: onWrap,\n              fullWidth: true,\n              children: wrapInputError !== null && wrapInputError !== void 0 ? wrapInputError : wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this) : noRoute && userHasSpecifiedInputOutput ? /*#__PURE__*/_jsxDEV(GreyCard, {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Main, {\n                mb: \"4px\",\n                children: \"Insufficient liquidity for this trade.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this) : showApproveFlow ? /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: approveCallback,\n                disabled: approval !== ApprovalState.NOT_APPROVED || approvalSubmitted,\n                style: {\n                  width: '48%'\n                },\n                variant: approval === ApprovalState.APPROVED ? 'success' : 'primary',\n                children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(AutoRow, {\n                  gap: \"6px\",\n                  justify: \"center\",\n                  children: [\"Approving \", /*#__PURE__*/_jsxDEV(Loader, {\n                    stroke: \"white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this) : approvalSubmitted && approval === ApprovalState.APPROVED ? 'Approved' : `Approve ${(_currencies$Field$INP = currencies[Field.INPUT]) === null || _currencies$Field$INP === void 0 ? void 0 : _currencies$Field$INP.symbol}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  if (isExpertMode) {\n                    handleSwap();\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined\n                    });\n                  }\n                },\n                style: {\n                  width: '48%'\n                },\n                id: \"swap-button\",\n                disabled: !isValid || approval !== ApprovalState.APPROVED || priceImpactSeverity > 3 && !isExpertMode,\n                variant: isValid && priceImpactSeverity > 2 ? 'danger' : 'primary',\n                children: priceImpactSeverity > 3 && !isExpertMode ? `Price Impact High` : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                if (isExpertMode) {\n                  handleSwap();\n                } else {\n                  setSwapState({\n                    tradeToConfirm: trade,\n                    attemptingTxn: false,\n                    swapErrorMessage: undefined,\n                    showConfirm: true,\n                    txHash: undefined\n                  });\n                }\n              },\n              id: \"swap-button\",\n              disabled: !isValid || priceImpactSeverity > 3 && !isExpertMode || !!swapCallbackError,\n              variant: isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary',\n              fullWidth: true,\n              children: swapInputError || (priceImpactSeverity > 3 && !isExpertMode ? `Price Impact Too High` : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), showApproveFlow && /*#__PURE__*/_jsxDEV(ProgressSteps, {\n              steps: [approval === ApprovalState.APPROVED]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 35\n            }, this), isExpertMode && swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n              error: swapErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 51\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AdvancedSwapDetailsDropdown, {\n      trade: trade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Swap, \"nMS02cok+eIc+usco+AzRbXXs64=\", false, function () {\n  return [useDefaultsFromURLSearch, useCurrency, useCurrency, useActiveWeb3React, useExpertModeManager, useUserDeadline, useUserSlippageTolerance, useSwapState, useDerivedSwapInfo, useWrapCallback, useSwapActionHandlers, useApproveCallbackFromTrade, useSwapCallback];\n});\n_c = Swap;\nexport default Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["JSBI","Token","React","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","CardBody","ArrowDownIcon","Button","IconButton","Text","ThemeContext","AddressInputPanel","Card","GreyCard","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","CardNav","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","TokenWarningModal","SyrupWarningModal","ProgressSteps","INITIAL_ALLOWED_SLIPPAGE","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useWrapCallback","WrapType","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserDeadline","useUserSlippageTolerance","LinkStyledButton","TYPE","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","Loader","TranslateString","PageHeader","ConnectWalletButton","AppBody","jsxDEV","_jsxDEV","Fragment","_Fragment","main","Main","Swap","_s","_parsedAmounts$indepe","_parsedAmounts$indepe2","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$indepe3","_parsedAmounts$Field$","_currencies$Field$INP","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","inputCurrencyId","outputCurrencyId","dismissTokenWarning","setDismissTokenWarning","isSyrup","setIsSyrup","syrupTransactionType","setSyrupTransactionType","urlLoadedTokens","_filter","_ref","filter","c","handleConfirmTokenWarning","handleConfirmSyrupWarning","account","theme","isExpertMode","deadline","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","inputError","swapInputError","wrapType","execute","onWrap","wrapInputError","INPUT","OUTPUT","showWrap","NOT_APPLICABLE","trade","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","undefined","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","callback","swapCallback","error","swapCallbackError","priceImpactWithoutFee","handleSwap","prevState","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","checkForSyrup","selected","purchaseType","handleInputSelect","inputCurrency","symbol","toLowerCase","handleMaxInput","handleOutputSelect","outputCurrency","children","isOpen","length","tokens","onConfirm","fileName","_jsxFileName","lineNumber","columnNumber","transactionType","id","originalTrade","onAcceptChanges","onDismiss","title","description","gap","label","showMaxButton","currency","onMax","onCurrencySelect","otherCurrency","justify","style","padding","clickable","variant","onClick","borderRadius","size","color","width","colors","textSubtle","onChange","align","fontSize","price","executionPrice","fullWidth","disabled","WRAP","UNWRAP","textAlign","mb","stroke","steps","_c","$RefreshReg$"],"sources":["C:/projects/panther-frontend-dex1/src/pages/Swap/index.tsx"],"sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from '@pantherswap-libs/sdk'\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\r\nimport { ArrowDown } from 'react-feather'\r\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text } from '@pantherswap-libs/uikit'\r\nimport { ThemeContext } from 'styled-components'\r\nimport AddressInputPanel from 'components/AddressInputPanel'\r\nimport Card, { GreyCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport CardNav from 'components/CardNav'\r\nimport { AutoRow, RowBetween } from 'components/Row'\r\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\r\nimport TradePrice from 'components/swap/TradePrice'\r\nimport TokenWarningModal from 'components/TokenWarningModal'\r\nimport SyrupWarningModal from 'components/SyrupWarningModal'\r\nimport ProgressSteps from 'components/ProgressSteps'\r\n\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\r\nimport { useSwapCallback } from 'hooks/useSwapCallback'\r\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\r\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { LinkStyledButton, TYPE } from 'components/Shared'\r\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\r\nimport Loader from 'components/Loader'\r\nimport { TranslateString } from 'utils/translateTextHelpers'\r\nimport PageHeader from 'components/PageHeader'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport AppBody from '../AppBody'\r\n\r\nconst { main: Main } = TYPE\r\n\r\nconst Swap = () => {\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\r\n  const [isSyrup, setIsSyrup] = useState<boolean>(false)\r\n  const [syrupTransactionType, setSyrupTransactionType] = useState<string>('')\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency]\r\n  )\r\n  const handleConfirmTokenWarning = useCallback(() => {\r\n    setDismissTokenWarning(true)\r\n  }, [])\r\n\r\n  const handleConfirmSyrupWarning = useCallback(() => {\r\n    setIsSyrup(false)\r\n    setSyrupTransactionType('')\r\n  }, [])\r\n\r\n  const { account } = useActiveWeb3React()\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [deadline] = useUserDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\r\n    currencies[Field.INPUT],\r\n    currencies[Field.OUTPUT],\r\n    typedValue\r\n  )\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = v2Trade\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput]\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput]\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    showConfirm: boolean\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    showConfirm: false,\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\r\n  )\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\r\n    trade,\r\n    allowedSlippage,\r\n    deadline,\r\n    recipient\r\n  )\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState((prevState) => ({\r\n          ...prevState,\r\n          attemptingTxn: false,\r\n          swapErrorMessage: undefined,\r\n          txHash: hash,\r\n        }))\r\n      })\r\n      .catch((error) => {\r\n        setSwapState((prevState) => ({\r\n          ...prevState,\r\n          attemptingTxn: false,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        }))\r\n      })\r\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\r\n\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [onUserInput, txHash, setSwapState])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\r\n  }, [trade])\r\n\r\n  // This will check to see if the user has selected Syrup to either buy or sell.\r\n  // If so, they will be alerted with a warning message.\r\n  const checkForSyrup = useCallback(\r\n    (selected: string, purchaseType: string) => {\r\n      if (selected === 'syrup') {\r\n        setIsSyrup(true)\r\n        setSyrupTransactionType(purchaseType)\r\n      }\r\n    },\r\n    [setIsSyrup, setSyrupTransactionType]\r\n  )\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n      if (inputCurrency.symbol.toLowerCase() === 'syrup') {\r\n        checkForSyrup(inputCurrency.symbol.toLowerCase(), 'Selling')\r\n      }\r\n    },\r\n    [onCurrencySelection, setApprovalSubmitted, checkForSyrup]\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    if (maxAmountInput) {\r\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n    }\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => {\r\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\r\n      if (outputCurrency.symbol.toLowerCase() === 'syrup') {\r\n        checkForSyrup(outputCurrency.symbol.toLowerCase(), 'Buying')\r\n      }\r\n    },\r\n    [onCurrencySelection, checkForSyrup]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <TokenWarningModal\r\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\r\n        tokens={urlLoadedTokens}\r\n        onConfirm={handleConfirmTokenWarning}\r\n      />\r\n      <SyrupWarningModal\r\n        isOpen={isSyrup}\r\n        transactionType={syrupTransactionType}\r\n        onConfirm={handleConfirmSyrupWarning}\r\n      />\r\n      <CardNav />\r\n      <AppBody>\r\n        <Wrapper id=\"swap-page\">\r\n          <ConfirmSwapModal\r\n            isOpen={showConfirm}\r\n            trade={trade}\r\n            originalTrade={tradeToConfirm}\r\n            onAcceptChanges={handleAcceptChanges}\r\n            attemptingTxn={attemptingTxn}\r\n            txHash={txHash}\r\n            recipient={recipient}\r\n            allowedSlippage={allowedSlippage}\r\n            onConfirm={handleSwap}\r\n            swapErrorMessage={swapErrorMessage}\r\n            onDismiss={handleConfirmDismiss}\r\n          />\r\n          <PageHeader title=\"Exchange\" description=\"Trade tokens in an instant\" />\r\n          <CardBody>\r\n            <AutoColumn gap=\"md\">\r\n              <CurrencyInputPanel\r\n                label={\r\n                  independentField === Field.OUTPUT && !showWrap && trade\r\n                    ? 'From (estimated)'\r\n                    : TranslateString(76, 'From')\r\n                }\r\n                value={formattedAmounts[Field.INPUT]}\r\n                showMaxButton={!atMaxAmountInput}\r\n                currency={currencies[Field.INPUT]}\r\n                onUserInput={handleTypeInput}\r\n                onMax={handleMaxInput}\r\n                onCurrencySelect={handleInputSelect}\r\n                otherCurrency={currencies[Field.OUTPUT]}\r\n                id=\"swap-currency-input\"\r\n              />\r\n              <AutoColumn justify=\"space-between\">\r\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                  <ArrowWrapper clickable>\r\n                    <IconButton\r\n                      variant=\"tertiary\"\r\n                      onClick={() => {\r\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                        onSwitchTokens()\r\n                      }}\r\n                      style={{ borderRadius: '50%' }}\r\n                      size=\"sm\"\r\n                    >\r\n                      <ArrowDownIcon color=\"primary\" width=\"24px\" />\r\n                    </IconButton>\r\n                  </ArrowWrapper>\r\n                  {recipient === null && !showWrap && isExpertMode ? (\r\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                      + Add a send (optional)\r\n                    </LinkStyledButton>\r\n                  ) : null}\r\n                </AutoRow>\r\n              </AutoColumn>\r\n              <CurrencyInputPanel\r\n                value={formattedAmounts[Field.OUTPUT]}\r\n                onUserInput={handleTypeOutput}\r\n                label={\r\n                  independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : TranslateString(80, 'To')\r\n                }\r\n                showMaxButton={false}\r\n                currency={currencies[Field.OUTPUT]}\r\n                onCurrencySelect={handleOutputSelect}\r\n                otherCurrency={currencies[Field.INPUT]}\r\n                id=\"swap-currency-output\"\r\n              />\r\n\r\n              {recipient !== null && !showWrap ? (\r\n                <>\r\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                    <ArrowWrapper clickable={false}>\r\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\r\n                    </ArrowWrapper>\r\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                      - Remove send\r\n                    </LinkStyledButton>\r\n                  </AutoRow>\r\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n                </>\r\n              ) : null}\r\n\r\n              {showWrap ? null : (\r\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\r\n                  <AutoColumn gap=\"4px\">\r\n                    {Boolean(trade) && (\r\n                      <RowBetween align=\"center\">\r\n                        <Text fontSize=\"14px\">Price</Text>\r\n                        <TradePrice\r\n                          price={trade?.executionPrice}\r\n                          showInverted={showInverted}\r\n                          setShowInverted={setShowInverted}\r\n                        />\r\n                      </RowBetween>\r\n                    )}\r\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\r\n                      <RowBetween align=\"center\">\r\n                        <Text fontSize=\"14px\">Slippage Tolerance</Text>\r\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\r\n                      </RowBetween>\r\n                    )}\r\n                  </AutoColumn>\r\n                </Card>\r\n              )}\r\n            </AutoColumn>\r\n            <BottomGrouping>\r\n              {!account ? (\r\n                <ConnectWalletButton fullWidth />\r\n              ) : showWrap ? (\r\n                <Button disabled={Boolean(wrapInputError)} onClick={onWrap} fullWidth>\r\n                  {wrapInputError ??\r\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n                </Button>\r\n              ) : noRoute && userHasSpecifiedInputOutput ? (\r\n                <GreyCard style={{ textAlign: 'center' }}>\r\n                  <Main mb=\"4px\">Insufficient liquidity for this trade.</Main>\r\n                </GreyCard>\r\n              ) : showApproveFlow ? (\r\n                <RowBetween>\r\n                  <Button\r\n                    onClick={approveCallback}\r\n                    disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                    style={{ width: '48%' }}\r\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\r\n                  >\r\n                    {approval === ApprovalState.PENDING ? (\r\n                      <AutoRow gap=\"6px\" justify=\"center\">\r\n                        Approving <Loader stroke=\"white\" />\r\n                      </AutoRow>\r\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                      'Approved'\r\n                    ) : (\r\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => {\r\n                      if (isExpertMode) {\r\n                        handleSwap()\r\n                      } else {\r\n                        setSwapState({\r\n                          tradeToConfirm: trade,\r\n                          attemptingTxn: false,\r\n                          swapErrorMessage: undefined,\r\n                          showConfirm: true,\r\n                          txHash: undefined,\r\n                        })\r\n                      }\r\n                    }}\r\n                    style={{ width: '48%' }}\r\n                    id=\"swap-button\"\r\n                    disabled={\r\n                      !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                    }\r\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\r\n                  >\r\n                    {priceImpactSeverity > 3 && !isExpertMode\r\n                      ? `Price Impact High`\r\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\r\n                  </Button>\r\n                </RowBetween>\r\n              ) : (\r\n                <Button\r\n                  onClick={() => {\r\n                    if (isExpertMode) {\r\n                      handleSwap()\r\n                    } else {\r\n                      setSwapState({\r\n                        tradeToConfirm: trade,\r\n                        attemptingTxn: false,\r\n                        swapErrorMessage: undefined,\r\n                        showConfirm: true,\r\n                        txHash: undefined,\r\n                      })\r\n                    }\r\n                  }}\r\n                  id=\"swap-button\"\r\n                  disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\r\n                  fullWidth\r\n                >\r\n                  {swapInputError ||\r\n                    (priceImpactSeverity > 3 && !isExpertMode\r\n                      ? `Price Impact Too High`\r\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)}\r\n                </Button>\r\n              )}\r\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\r\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n            </BottomGrouping>\r\n          </CardBody>\r\n        </Wrapper>\r\n      </AppBody>\r\n      <AdvancedSwapDetailsDropdown trade={trade} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Swap\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}