{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RetryService = void 0;\n/**\n * @internal\n */\nclass RetryService {\n  constructor(config) {\n    this.config = config;\n  }\n  /**\n   * @param func function to execute\n   */\n  async executeAsyncFunc(func) {\n    for (let i = 0; i <= this.config.retries; i++) {\n      try {\n        const result = await func();\n        return result;\n      } catch (error) {\n        const skip = this.config.conditions.map(condition => condition.test(error)).find(skip => skip === true);\n        if (skip || i === this.config.retries) {\n          throw error;\n        }\n        await this.wait();\n      }\n    }\n    throw new Error('Wrong retry configuration. Failed to retrieve value.');\n  }\n  /**\n   * @param func function to execute\n   */\n  async executeSyncFunc(func) {\n    for (let i = 0; i <= this.config.retries; i++) {\n      try {\n        const result = func();\n        return result;\n      } catch (error) {\n        const skip = this.config.conditions.map(condition => condition.test(error)).find(skip => skip === true);\n        if (skip || i === this.config.retries) {\n          throw error;\n        }\n        await this.wait();\n      }\n    }\n    throw new Error('Wrong retry configuration. Failed to retrieve value.');\n  }\n  wait() {\n    return new Promise(res => {\n      setTimeout(() => res(), this.config.waitInterval);\n    });\n  }\n}\nexports.RetryService = RetryService;","map":{"version":3,"names":["Object","defineProperty","exports","value","RetryService","constructor","config","executeAsyncFunc","func","i","retries","result","error","skip","conditions","map","condition","test","find","wait","Error","executeSyncFunc","Promise","res","setTimeout","waitInterval"],"sources":["C:/projects/panther-frontend-dex1/node_modules/@crowdin/crowdin-api-client/out/core/internal/retry/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RetryService = void 0;\n/**\n * @internal\n */\nclass RetryService {\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * @param func function to execute\n     */\n    async executeAsyncFunc(func) {\n        for (let i = 0; i <= this.config.retries; i++) {\n            try {\n                const result = await func();\n                return result;\n            }\n            catch (error) {\n                const skip = this.config.conditions.map(condition => condition.test(error)).find(skip => skip === true);\n                if (skip || i === this.config.retries) {\n                    throw error;\n                }\n                await this.wait();\n            }\n        }\n        throw new Error('Wrong retry configuration. Failed to retrieve value.');\n    }\n    /**\n     * @param func function to execute\n     */\n    async executeSyncFunc(func) {\n        for (let i = 0; i <= this.config.retries; i++) {\n            try {\n                const result = func();\n                return result;\n            }\n            catch (error) {\n                const skip = this.config.conditions.map(condition => condition.test(error)).find(skip => skip === true);\n                if (skip || i === this.config.retries) {\n                    throw error;\n                }\n                await this.wait();\n            }\n        }\n        throw new Error('Wrong retry configuration. Failed to retrieve value.');\n    }\n    wait() {\n        return new Promise((res) => {\n            setTimeout(() => res(), this.config.waitInterval);\n        });\n    }\n}\nexports.RetryService = RetryService;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B;AACA;AACA;AACA,MAAMA,YAAY,CAAC;EACfC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EACA;AACJ;AACA;EACI,MAAMC,gBAAgBA,CAACC,IAAI,EAAE;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACH,MAAM,CAACI,OAAO,EAAED,CAAC,EAAE,EAAE;MAC3C,IAAI;QACA,MAAME,MAAM,GAAG,MAAMH,IAAI,CAAC,CAAC;QAC3B,OAAOG,MAAM;MACjB,CAAC,CACD,OAAOC,KAAK,EAAE;QACV,MAAMC,IAAI,GAAG,IAAI,CAACP,MAAM,CAACQ,UAAU,CAACC,GAAG,CAACC,SAAS,IAAIA,SAAS,CAACC,IAAI,CAACL,KAAK,CAAC,CAAC,CAACM,IAAI,CAACL,IAAI,IAAIA,IAAI,KAAK,IAAI,CAAC;QACvG,IAAIA,IAAI,IAAIJ,CAAC,KAAK,IAAI,CAACH,MAAM,CAACI,OAAO,EAAE;UACnC,MAAME,KAAK;QACf;QACA,MAAM,IAAI,CAACO,IAAI,CAAC,CAAC;MACrB;IACJ;IACA,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EAC3E;EACA;AACJ;AACA;EACI,MAAMC,eAAeA,CAACb,IAAI,EAAE;IACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACH,MAAM,CAACI,OAAO,EAAED,CAAC,EAAE,EAAE;MAC3C,IAAI;QACA,MAAME,MAAM,GAAGH,IAAI,CAAC,CAAC;QACrB,OAAOG,MAAM;MACjB,CAAC,CACD,OAAOC,KAAK,EAAE;QACV,MAAMC,IAAI,GAAG,IAAI,CAACP,MAAM,CAACQ,UAAU,CAACC,GAAG,CAACC,SAAS,IAAIA,SAAS,CAACC,IAAI,CAACL,KAAK,CAAC,CAAC,CAACM,IAAI,CAACL,IAAI,IAAIA,IAAI,KAAK,IAAI,CAAC;QACvG,IAAIA,IAAI,IAAIJ,CAAC,KAAK,IAAI,CAACH,MAAM,CAACI,OAAO,EAAE;UACnC,MAAME,KAAK;QACf;QACA,MAAM,IAAI,CAACO,IAAI,CAAC,CAAC;MACrB;IACJ;IACA,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EAC3E;EACAD,IAAIA,CAAA,EAAG;IACH,OAAO,IAAIG,OAAO,CAAEC,GAAG,IAAK;MACxBC,UAAU,CAAC,MAAMD,GAAG,CAAC,CAAC,EAAE,IAAI,CAACjB,MAAM,CAACmB,YAAY,CAAC;IACrD,CAAC,CAAC;EACN;AACJ;AACAvB,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script"}