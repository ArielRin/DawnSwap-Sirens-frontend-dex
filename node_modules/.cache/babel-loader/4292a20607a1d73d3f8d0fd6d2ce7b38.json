{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\panther-frontend-dex1\\\\src\\\\components\\\\Logo\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { HelpCircle } from 'react-feather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BAD_SRCS = {};\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\nexport default function Logo(_ref) {\n  _s();\n  let {\n    srcs,\n    alt,\n    ...rest\n  } = _ref;\n  const [, refresh] = useState(0);\n  const src = srcs.find(s => !BAD_SRCS[s]);\n  if (src) {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      ...rest,\n      alt: alt,\n      src: src,\n      onError: () => {\n        if (src) BAD_SRCS[src] = true;\n        refresh(i => i + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(HelpCircle, {\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n_s(Logo, \"VLDml+8XeLo3hOVKOq0/NvPcJAE=\");\n_c = Logo;\nvar _c;\n$RefreshReg$(_c, \"Logo\");","map":{"version":3,"names":["React","useState","HelpCircle","jsxDEV","_jsxDEV","BAD_SRCS","Logo","_ref","_s","srcs","alt","rest","refresh","src","find","s","onError","i","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/panther-frontend-dex1/src/components/Logo/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { HelpCircle } from 'react-feather'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps {\r\n  alt?: string\r\n  style?: any\r\n  className?: string\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nexport default function Logo({ srcs, alt, ...rest }: LogoProps) {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpCircle {...rest} />\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAA0C,GAAG,CAAC,CAAC;AASrD;AACA;AACA;AACA,eAAe,SAASC,IAAIA,CAAAC,IAAA,EAAoC;EAAAC,EAAA;EAAA,IAAnC;IAAEC,IAAI;IAAEC,GAAG;IAAE,GAAGC;EAAgB,CAAC,GAAAJ,IAAA;EAC5D,MAAM,GAAGK,OAAO,CAAC,GAAGX,QAAQ,CAAS,CAAC,CAAC;EAEvC,MAAMY,GAAuB,GAAGJ,IAAI,CAACK,IAAI,CAAEC,CAAC,IAAK,CAACV,QAAQ,CAACU,CAAC,CAAC,CAAC;EAE9D,IAAIF,GAAG,EAAE;IACP,oBACET,OAAA;MAAA,GACMO,IAAI;MACRD,GAAG,EAAEA,GAAI;MACTG,GAAG,EAAEA,GAAI;MACTG,OAAO,EAAEA,CAAA,KAAM;QACb,IAAIH,GAAG,EAAER,QAAQ,CAACQ,GAAG,CAAC,GAAG,IAAI;QAC7BD,OAAO,CAAEK,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC;MACvB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEN;EAEA,oBAAOjB,OAAA,CAACF,UAAU;IAAA,GAAKS;EAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACjC;AAACb,EAAA,CApBuBF,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}