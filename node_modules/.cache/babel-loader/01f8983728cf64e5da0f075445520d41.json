{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Screenshots = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Screenshots provide translators with additional context for the source strings.\n * Screenshot tags allow specifying which source strings are displayed on each screenshot.\n *\n * Use API to manage screenshots and their tags.\n */\nclass Screenshots extends core_1.CrowdinApi {\n  listScreenshots(projectId, options, deprecatedOffset) {\n    if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n      options = {\n        limit: options,\n        offset: deprecatedOffset\n      };\n    }\n    const url = `${this.url}/projects/${projectId}/screenshots`;\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.post\n   */\n  addScreenshot(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/screenshots`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param screenshotId screenshot identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.get\n   */\n  getScreenshot(projectId, screenshotId) {\n    const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param screenshotId screenshot identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.put\n   */\n  updateScreenshot(projectId, screenshotId, request) {\n    const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n    return this.put(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param screenshotId screenshot identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.delete\n   */\n  deleteScreenshot(projectId, screenshotId) {\n    const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param screenshotId screenshot identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.patch\n   */\n  editScreenshot(projectId, screenshotId, request) {\n    const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  listScreenshotTags(projectId, screenshotId, options, deprecatedOffset) {\n    if ((0, core_1.isOptionalNumber)(options, '2' in arguments)) {\n      options = {\n        limit: options,\n        offset: deprecatedOffset\n      };\n    }\n    const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param screenshotId screenshot identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.putMany\n   */\n  replaceTags(projectId, screenshotId, request) {\n    const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n    return this.put(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param screenshotId screenshot identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.post\n   */\n  addTag(projectId, screenshotId, request) {\n    const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param screenshotId screenshot identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.deleteMany\n   */\n  clearTags(projectId, screenshotId) {\n    const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param screenshotId screenshot identifier\n   * @param tagId tag identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.get\n   */\n  getTag(projectId, screenshotId, tagId) {\n    const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags/${tagId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param screenshotId screenshot identifier\n   * @param tagId tag identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.delete\n   */\n  deleteTag(projectId, screenshotId, tagId) {\n    const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags/${tagId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param screenshotId screenshot identifier\n   * @param tagId tag identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.patch\n   */\n  updateTag(projectId, screenshotId, tagId, request) {\n    const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags/${tagId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n}\nexports.Screenshots = Screenshots;","map":{"version":3,"names":["Object","defineProperty","exports","value","Screenshots","core_1","require","CrowdinApi","listScreenshots","projectId","options","deprecatedOffset","isOptionalNumber","arguments","limit","offset","url","getList","addScreenshot","request","post","defaultConfig","getScreenshot","screenshotId","get","updateScreenshot","put","deleteScreenshot","delete","editScreenshot","patch","listScreenshotTags","replaceTags","addTag","clearTags","getTag","tagId","deleteTag","updateTag"],"sources":["C:/projects/panther-frontend-dex1/node_modules/@crowdin/crowdin-api-client/out/screenshots/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Screenshots = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Screenshots provide translators with additional context for the source strings.\n * Screenshot tags allow specifying which source strings are displayed on each screenshot.\n *\n * Use API to manage screenshots and their tags.\n */\nclass Screenshots extends core_1.CrowdinApi {\n    listScreenshots(projectId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '1' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/screenshots`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.post\n     */\n    addScreenshot(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.get\n     */\n    getScreenshot(projectId, screenshotId) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.put\n     */\n    updateScreenshot(projectId, screenshotId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n        return this.put(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.delete\n     */\n    deleteScreenshot(projectId, screenshotId) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.patch\n     */\n    editScreenshot(projectId, screenshotId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    listScreenshotTags(projectId, screenshotId, options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '2' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.putMany\n     */\n    replaceTags(projectId, screenshotId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n        return this.put(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.post\n     */\n    addTag(projectId, screenshotId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.deleteMany\n     */\n    clearTags(projectId, screenshotId) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param tagId tag identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.get\n     */\n    getTag(projectId, screenshotId, tagId) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags/${tagId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param tagId tag identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.delete\n     */\n    deleteTag(projectId, screenshotId, tagId) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags/${tagId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param screenshotId screenshot identifier\n     * @param tagId tag identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.screenshots.tags.patch\n     */\n    updateTag(projectId, screenshotId, tagId, request) {\n        const url = `${this.url}/projects/${projectId}/screenshots/${screenshotId}/tags/${tagId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Screenshots = Screenshots;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAC5B,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,WAAW,SAASC,MAAM,CAACE,UAAU,CAAC;EACxCC,eAAeA,CAACC,SAAS,EAAEC,OAAO,EAAEC,gBAAgB,EAAE;IAClD,IAAI,CAAC,CAAC,EAAEN,MAAM,CAACO,gBAAgB,EAAEF,OAAO,EAAE,GAAG,IAAIG,SAAS,CAAC,EAAE;MACzDH,OAAO,GAAG;QAAEI,KAAK,EAAEJ,OAAO;QAAEK,MAAM,EAAEJ;MAAiB,CAAC;IAC1D;IACA,MAAMK,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,cAAa;IAC3D,OAAO,IAAI,CAACQ,OAAO,CAACD,GAAG,EAAEN,OAAO,CAACI,KAAK,EAAEJ,OAAO,CAACK,MAAM,CAAC;EAC3D;EACA;AACJ;AACA;AACA;AACA;EACIG,aAAaA,CAACT,SAAS,EAAEU,OAAO,EAAE;IAC9B,MAAMH,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,cAAa;IAC3D,OAAO,IAAI,CAACW,IAAI,CAACJ,GAAG,EAAEG,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACxD;EACA;AACJ;AACA;AACA;AACA;EACIC,aAAaA,CAACb,SAAS,EAAEc,YAAY,EAAE;IACnC,MAAMP,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,gBAAec,YAAa,EAAC;IAC3E,OAAO,IAAI,CAACC,GAAG,CAACR,GAAG,EAAE,IAAI,CAACK,aAAa,CAAC,CAAC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;AACA;AACA;EACII,gBAAgBA,CAAChB,SAAS,EAAEc,YAAY,EAAEJ,OAAO,EAAE;IAC/C,MAAMH,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,gBAAec,YAAa,EAAC;IAC3E,OAAO,IAAI,CAACG,GAAG,CAACV,GAAG,EAAEG,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACvD;EACA;AACJ;AACA;AACA;AACA;EACIM,gBAAgBA,CAAClB,SAAS,EAAEc,YAAY,EAAE;IACtC,MAAMP,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,gBAAec,YAAa,EAAC;IAC3E,OAAO,IAAI,CAACK,MAAM,CAACZ,GAAG,EAAE,IAAI,CAACK,aAAa,CAAC,CAAC,CAAC;EACjD;EACA;AACJ;AACA;AACA;AACA;AACA;EACIQ,cAAcA,CAACpB,SAAS,EAAEc,YAAY,EAAEJ,OAAO,EAAE;IAC7C,MAAMH,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,gBAAec,YAAa,EAAC;IAC3E,OAAO,IAAI,CAACO,KAAK,CAACd,GAAG,EAAEG,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACzD;EACAU,kBAAkBA,CAACtB,SAAS,EAAEc,YAAY,EAAEb,OAAO,EAAEC,gBAAgB,EAAE;IACnE,IAAI,CAAC,CAAC,EAAEN,MAAM,CAACO,gBAAgB,EAAEF,OAAO,EAAE,GAAG,IAAIG,SAAS,CAAC,EAAE;MACzDH,OAAO,GAAG;QAAEI,KAAK,EAAEJ,OAAO;QAAEK,MAAM,EAAEJ;MAAiB,CAAC;IAC1D;IACA,MAAMK,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,gBAAec,YAAa,OAAM;IAChF,OAAO,IAAI,CAACN,OAAO,CAACD,GAAG,EAAEN,OAAO,CAACI,KAAK,EAAEJ,OAAO,CAACK,MAAM,CAAC;EAC3D;EACA;AACJ;AACA;AACA;AACA;AACA;EACIiB,WAAWA,CAACvB,SAAS,EAAEc,YAAY,EAAEJ,OAAO,EAAE;IAC1C,MAAMH,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,gBAAec,YAAa,OAAM;IAChF,OAAO,IAAI,CAACG,GAAG,CAACV,GAAG,EAAEG,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACvD;EACA;AACJ;AACA;AACA;AACA;AACA;EACIY,MAAMA,CAACxB,SAAS,EAAEc,YAAY,EAAEJ,OAAO,EAAE;IACrC,MAAMH,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,gBAAec,YAAa,OAAM;IAChF,OAAO,IAAI,CAACH,IAAI,CAACJ,GAAG,EAAEG,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACxD;EACA;AACJ;AACA;AACA;AACA;EACIa,SAASA,CAACzB,SAAS,EAAEc,YAAY,EAAE;IAC/B,MAAMP,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,gBAAec,YAAa,OAAM;IAChF,OAAO,IAAI,CAACK,MAAM,CAACZ,GAAG,EAAE,IAAI,CAACK,aAAa,CAAC,CAAC,CAAC;EACjD;EACA;AACJ;AACA;AACA;AACA;AACA;EACIc,MAAMA,CAAC1B,SAAS,EAAEc,YAAY,EAAEa,KAAK,EAAE;IACnC,MAAMpB,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,gBAAec,YAAa,SAAQa,KAAM,EAAC;IACzF,OAAO,IAAI,CAACZ,GAAG,CAACR,GAAG,EAAE,IAAI,CAACK,aAAa,CAAC,CAAC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;AACA;AACA;EACIgB,SAASA,CAAC5B,SAAS,EAAEc,YAAY,EAAEa,KAAK,EAAE;IACtC,MAAMpB,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,gBAAec,YAAa,SAAQa,KAAM,EAAC;IACzF,OAAO,IAAI,CAACR,MAAM,CAACZ,GAAG,EAAE,IAAI,CAACK,aAAa,CAAC,CAAC,CAAC;EACjD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIiB,SAASA,CAAC7B,SAAS,EAAEc,YAAY,EAAEa,KAAK,EAAEjB,OAAO,EAAE;IAC/C,MAAMH,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYP,SAAU,gBAAec,YAAa,SAAQa,KAAM,EAAC;IACzF,OAAO,IAAI,CAACN,KAAK,CAACd,GAAG,EAAEG,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACzD;AACJ;AACAnB,OAAO,CAACE,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script"}