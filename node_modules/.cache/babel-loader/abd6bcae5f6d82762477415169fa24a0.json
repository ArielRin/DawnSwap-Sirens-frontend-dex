{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$();\n\nimport { ChainId, WETH } from '@pantherswap-libs/sdk';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { useMemo } from 'react';\nimport ENS_ABI from '../constants/abis/ens-registrar.json';\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\nimport ERC20_ABI from '../constants/abis/erc20.json';\nimport UNISOCKS_ABI from '../constants/abis/unisocks.json';\nimport WETH_ABI from '../constants/abis/weth.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall';\nimport { getContract } from '../utils';\nimport { useActiveWeb3React } from './index'; // returns null on errors\n\nfunction useContract(address, ABI, withSignerIfPossible = true) {\n  _s();\n\n  const {\n    library,\n    account\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\n_s(useContract, \"bS5GtDgwY2raBDSgRZeif67r/2o=\", false, function () {\n  return [useActiveWeb3React];\n});\n\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  _s2();\n\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\n\n_s2(useTokenContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useWETHContract(withSignerIfPossible) {\n  _s3();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible);\n}\n\n_s3(useWETHContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useENSRegistrarContract(withSignerIfPossible) {\n  _s4();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  let address;\n\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.BSCTESTNET:\n    }\n  }\n\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\n\n_s4(useENSRegistrarContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  _s5();\n\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\n\n_s5(useENSResolverContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  _s6();\n\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\n\n_s6(useBytes32TokenContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function usePairContract(pairAddress, withSignerIfPossible) {\n  _s7();\n\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\n\n_s7(usePairContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useMulticallContract() {\n  _s8();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\n\n_s8(useMulticallContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useSocksController() {\n  _s9();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId === ChainId.MAINNET ? '0x65770b5283117639760beA3F867b69b3697a91dd' : undefined, UNISOCKS_ABI, false);\n}\n\n_s9(useSocksController, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});","map":{"version":3,"sources":["C:/projects/panther-frontend-dex1/src/hooks/useContract.ts"],"names":["ChainId","WETH","abi","IUniswapV2PairABI","useMemo","ENS_ABI","ENS_PUBLIC_RESOLVER_ABI","ERC20_BYTES32_ABI","ERC20_ABI","UNISOCKS_ABI","WETH_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","getContract","useActiveWeb3React","useContract","address","ABI","withSignerIfPossible","library","account","undefined","error","console","useTokenContract","tokenAddress","useWETHContract","chainId","useENSRegistrarContract","MAINNET","BSCTESTNET","useENSResolverContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract","useSocksController"],"mappings":"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","sourcesContent":["import { Contract } from '@ethersproject/contracts'\r\nimport { ChainId, WETH } from '@pantherswap-libs/sdk'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { useMemo } from 'react'\r\nimport ENS_ABI from '../constants/abis/ens-registrar.json'\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\r\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\r\nimport ERC20_ABI from '../constants/abis/erc20.json'\r\nimport UNISOCKS_ABI from '../constants/abis/unisocks.json'\r\nimport WETH_ABI from '../constants/abis/weth.json'\r\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\r\nimport { getContract } from '../utils'\r\nimport { useActiveWeb3React } from './index'\r\n\r\n// returns null on errors\r\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  let address: string | undefined\r\n  if (chainId) {\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n      case ChainId.BSCTESTNET:\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\r\n}\r\n\r\nexport function useSocksController(): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(\r\n    chainId === ChainId.MAINNET ? '0x65770b5283117639760beA3F867b69b3697a91dd' : undefined,\r\n    UNISOCKS_ABI,\r\n    false\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}