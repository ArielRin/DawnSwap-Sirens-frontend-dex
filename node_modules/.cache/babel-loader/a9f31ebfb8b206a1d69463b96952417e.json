{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nvar CHAIN_ID = 1;\nvar WalletLinkConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(WalletLinkConnector, _AbstractConnector);\n  function WalletLinkConnector(_ref) {\n    var _this;\n    var url = _ref.url,\n      appName = _ref.appName,\n      appLogoUrl = _ref.appLogoUrl,\n      darkMode = _ref.darkMode,\n      supportedChainIds = _ref.supportedChainIds;\n    _this = _AbstractConnector.call(this, {\n      supportedChainIds: supportedChainIds\n    }) || this;\n    _this.url = url;\n    _this.appName = appName;\n    _this.appLogoUrl = appLogoUrl;\n    _this.darkMode = darkMode || false;\n    _this.handleChainChanged = _this.handleChainChanged.bind(_assertThisInitialized(_this));\n    _this.handleAccountsChanged = _this.handleAccountsChanged.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  var _proto = WalletLinkConnector.prototype;\n  _proto.activate = function activate() {\n    try {\n      var _this3 = this;\n      var _temp4 = function _temp4() {\n        return Promise.resolve(_this3.provider.request({\n          method: 'eth_requestAccounts'\n        })).then(function (accounts) {\n          var account = accounts[0];\n          _this3.provider.on('chainChanged', _this3.handleChainChanged);\n          _this3.provider.on('accountsChanged', _this3.handleAccountsChanged);\n          return {\n            provider: _this3.provider,\n            account: account\n          };\n        });\n      };\n      var _temp5 = function () {\n        if (window.ethereum && window.ethereum.isCoinbaseWallet === true) {\n          // user is in the dapp browser on Coinbase Wallet\n          _this3.provider = window.ethereum;\n        } else {\n          var _temp6 = function () {\n            if (!_this3.walletLink) {\n              return Promise.resolve(import('@coinbase/wallet-sdk').then(function (m) {\n                var _m$default;\n                return (_m$default = m == null ? void 0 : m[\"default\"]) != null ? _m$default : m;\n              })).then(function (CoinbaseWalletSDK) {\n                _this3.walletLink = new CoinbaseWalletSDK(_extends({\n                  appName: _this3.appName,\n                  darkMode: _this3.darkMode\n                }, _this3.appLogoUrl ? {\n                  appLogoUrl: _this3.appLogoUrl\n                } : {}));\n                _this3.provider = _this3.walletLink.makeWeb3Provider(_this3.url, CHAIN_ID);\n              });\n            }\n          }();\n          if (_temp6 && _temp6.then) return _temp6.then(function () {});\n        }\n      }();\n\n      // @ts-ignore\n      return Promise.resolve(_temp5 && _temp5.then ? _temp5.then(_temp4) : _temp4(_temp5));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this5 = this;\n      return Promise.resolve(_this5.provider);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this7 = this;\n      return Promise.resolve(_this7.provider.chainId);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this9 = this;\n      return Promise.resolve(_this9.provider.request({\n        method: 'eth_requestAccounts'\n      })).then(function (accounts) {\n        return accounts[0];\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.deactivate = function deactivate() {\n    this.provider.removeListener('chainChanged', this.handleChainChanged);\n    this.provider.removeListener('accountsChanged', this.handleAccountsChanged);\n  };\n  _proto.close = function close() {\n    try {\n      var _this11 = this;\n      _this11.provider.close();\n      _this11.emitDeactivate();\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.handleChainChanged = function handleChainChanged(chainId) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n    this.emitUpdate({\n      chainId: chainId\n    });\n  };\n  _proto.handleAccountsChanged = function handleAccountsChanged(accounts) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n    this.emitUpdate({\n      account: accounts[0]\n    });\n  };\n  return WalletLinkConnector;\n}(AbstractConnector);\nexport { WalletLinkConnector };","map":{"version":3,"sources":["../src/index.ts"],"names":["CHAIN_ID","WalletLinkConnector","AbstractConnector","url","appName","appLogoUrl","darkMode","supportedChainIds","handleChainChanged","bind","handleAccountsChanged","activate","window","ethereum","isCoinbaseWallet","provider","walletLink","CoinbaseWalletSDK","then","m","makeWeb3Provider","accounts","request","method","account","on","getProvider","getChainId","chainId","getAccount","deactivate","removeListener","close","emitDeactivate","console","log","emitUpdate"],"mappings":"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","sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nconst CHAIN_ID = 1\n\ninterface WalletLinkConnectorArguments {\n  url: string\n  appName: string\n  appLogoUrl?: string\n  darkMode?: boolean\n  supportedChainIds?: number[]\n}\n\nexport class WalletLinkConnector extends AbstractConnector {\n  private readonly url: string\n  private readonly appName: string\n  private readonly appLogoUrl?: string\n  private readonly darkMode: boolean\n\n  public walletLink: any\n  private provider: any\n\n  constructor({ url, appName, appLogoUrl, darkMode, supportedChainIds }: WalletLinkConnectorArguments) {\n    super({ supportedChainIds: supportedChainIds })\n\n    this.url = url\n    this.appName = appName\n    this.appLogoUrl = appLogoUrl\n    this.darkMode = darkMode || false\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    // @ts-ignore\n    if (window.ethereum && window.ethereum.isCoinbaseWallet === true) {\n      // user is in the dapp browser on Coinbase Wallet\n      this.provider = window.ethereum\n    } else if (!this.walletLink) {\n      const CoinbaseWalletSDK = await import('@coinbase/wallet-sdk').then(m => m?.default ?? m)\n      this.walletLink = new CoinbaseWalletSDK({\n        appName: this.appName,\n        darkMode: this.darkMode,\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\n      })\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\n    }\n\n    const accounts = await this.provider.request({\n      method: 'eth_requestAccounts'\n    })\n    const account = accounts[0]\n\n    this.provider.on('chainChanged', this.handleChainChanged)\n    this.provider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.provider, account: account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    const accounts = await this.provider.request({\n      method: 'eth_requestAccounts'\n    })\n    return accounts[0]\n  }\n\n  public deactivate() {\n    this.provider.removeListener('chainChanged', this.handleChainChanged)\n    this.provider.removeListener('accountsChanged', this.handleAccountsChanged)\n  }\n\n  public async close() {\n    this.provider.close()\n    this.emitDeactivate()\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId: chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}