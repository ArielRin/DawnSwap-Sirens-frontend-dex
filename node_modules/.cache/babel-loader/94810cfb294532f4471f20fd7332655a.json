{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Languages = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Crowdin supports more than 300 world languages and custom languages created in the system.\n *\n * Use API to get the list of all supported languages and retrieve additional details (e.g. text direction, internal code) on specific language.\n */\nclass Languages extends core_1.CrowdinApi {\n  listSupportedLanguages(options, deprecatedOffset) {\n    if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n      options = {\n        limit: options,\n        offset: deprecatedOffset\n      };\n    }\n    const url = `${this.url}/languages`;\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.languages.post\n   */\n  addCustomLanguage(request) {\n    const url = `${this.url}/languages`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param languageId language identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.languages.get\n   */\n  getLanguage(languageId) {\n    const url = `${this.url}/languages/${languageId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param languageId language identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.languages.delete\n   */\n  deleteCustomLanguage(languageId) {\n    const url = `${this.url}/languages/${languageId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param languageId language identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.languages.patch\n   */\n  editCustomLanguage(languageId, request) {\n    const url = `${this.url}/languages/${languageId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n}\nexports.Languages = Languages;","map":{"version":3,"names":["Object","defineProperty","exports","value","Languages","core_1","require","CrowdinApi","listSupportedLanguages","options","deprecatedOffset","isOptionalNumber","arguments","limit","offset","url","getList","addCustomLanguage","request","post","defaultConfig","getLanguage","languageId","get","deleteCustomLanguage","delete","editCustomLanguage","patch"],"sources":["C:/projects/panther-frontend-dex1/node_modules/@crowdin/crowdin-api-client/out/languages/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Languages = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Crowdin supports more than 300 world languages and custom languages created in the system.\n *\n * Use API to get the list of all supported languages and retrieve additional details (e.g. text direction, internal code) on specific language.\n */\nclass Languages extends core_1.CrowdinApi {\n    listSupportedLanguages(options, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = { limit: options, offset: deprecatedOffset };\n        }\n        const url = `${this.url}/languages`;\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.languages.post\n     */\n    addCustomLanguage(request) {\n        const url = `${this.url}/languages`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param languageId language identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.languages.get\n     */\n    getLanguage(languageId) {\n        const url = `${this.url}/languages/${languageId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param languageId language identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.languages.delete\n     */\n    deleteCustomLanguage(languageId) {\n        const url = `${this.url}/languages/${languageId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param languageId language identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.languages.patch\n     */\n    editCustomLanguage(languageId, request) {\n        const url = `${this.url}/languages/${languageId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Languages = Languages;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAC1B,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA,MAAMF,SAAS,SAASC,MAAM,CAACE,UAAU,CAAC;EACtCC,sBAAsBA,CAACC,OAAO,EAAEC,gBAAgB,EAAE;IAC9C,IAAI,CAAC,CAAC,EAAEL,MAAM,CAACM,gBAAgB,EAAEF,OAAO,EAAE,GAAG,IAAIG,SAAS,CAAC,EAAE;MACzDH,OAAO,GAAG;QAAEI,KAAK,EAAEJ,OAAO;QAAEK,MAAM,EAAEJ;MAAiB,CAAC;IAC1D;IACA,MAAMK,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,YAAW;IACnC,OAAO,IAAI,CAACC,OAAO,CAACD,GAAG,EAAEN,OAAO,CAACI,KAAK,EAAEJ,OAAO,CAACK,MAAM,CAAC;EAC3D;EACA;AACJ;AACA;AACA;EACIG,iBAAiBA,CAACC,OAAO,EAAE;IACvB,MAAMH,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,YAAW;IACnC,OAAO,IAAI,CAACI,IAAI,CAACJ,GAAG,EAAEG,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACxD;EACA;AACJ;AACA;AACA;EACIC,WAAWA,CAACC,UAAU,EAAE;IACpB,MAAMP,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,cAAaO,UAAW,EAAC;IACjD,OAAO,IAAI,CAACC,GAAG,CAACR,GAAG,EAAE,IAAI,CAACK,aAAa,CAAC,CAAC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;EACII,oBAAoBA,CAACF,UAAU,EAAE;IAC7B,MAAMP,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,cAAaO,UAAW,EAAC;IACjD,OAAO,IAAI,CAACG,MAAM,CAACV,GAAG,EAAE,IAAI,CAACK,aAAa,CAAC,CAAC,CAAC;EACjD;EACA;AACJ;AACA;AACA;AACA;EACIM,kBAAkBA,CAACJ,UAAU,EAAEJ,OAAO,EAAE;IACpC,MAAMH,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,cAAaO,UAAW,EAAC;IACjD,OAAO,IAAI,CAACK,KAAK,CAACZ,GAAG,EAAEG,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACzD;AACJ;AACAlB,OAAO,CAACE,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script"}