{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\panther-frontend-dex1\\\\src\\\\components\\\\Menu\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Menu as UikitMenu } from '@pantherswap-libs/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { allLanguages } from 'constants/localisation/languageCodes';\nimport { LanguageContext } from 'hooks/LanguageContext';\nimport useTheme from 'hooks/useTheme';\nimport useGetPriceData from 'hooks/useGetPriceData'; // import useGetLocalProfile from 'hooks/useGetLocalProfile'\n\nimport { injected, bsc, walletconnect } from 'connectors';\nimport links from './config';\n\nconst Menu = props => {\n  _s();\n\n  const {\n    account,\n    activate,\n    deactivate\n  } = useWeb3React();\n  const {\n    selectedLanguage,\n    setSelectedLanguage\n  } = useContext(LanguageContext);\n  const {\n    isDark,\n    toggleTheme\n  } = useTheme();\n  const priceData = useGetPriceData();\n  const pantherAddress = '0x93E7ae1eF759Ee2dBEf0F87424b08d7Af7E4BcA5';\n  const cakePriceUsd = priceData && priceData.data[pantherAddress] ? Number(priceData.data[pantherAddress].price) : Number(0); // const profile = useGetLocalProfile()\n\n  return /*#__PURE__*/_jsxDEV(UikitMenu, {\n    links: links,\n    account: account,\n    login: connectorId => {\n      if (connectorId === 'walletconnect') {\n        return activate(walletconnect);\n      }\n\n      if (connectorId === 'bsc') {\n        return activate(bsc);\n      }\n\n      return activate(injected);\n    },\n    logout: deactivate,\n    isDark: isDark,\n    toggleTheme: toggleTheme,\n    currentLang: (selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.code) || '',\n    langs: allLanguages,\n    setLang: setSelectedLanguage,\n    cakePriceUsd: cakePriceUsd,\n    cakePriceLink: `https://redlightscan.finance/token/${pantherAddress}`\n    /* profile={profile} */\n    ,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"YUCemOhq5qeMoTqGSpmN34QCmGo=\", false, function () {\n  return [useWeb3React, useTheme, useGetPriceData];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/projects/panther-frontend-dex1/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWeb3React","allLanguages","LanguageContext","useTheme","useGetPriceData","injected","bsc","walletconnect","links","props","account","activate","deactivate","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","priceData","pantherAddress","cakePriceUsd","data","Number","price","connectorId","code"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAI,IAAIC,SAAjB,QAA+C,yBAA/C;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,eAAP,MAA4B,uBAA5B,C,CACA;;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,aAAxB,QAA6C,YAA7C;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMV,IAAc,GAAIW,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAoCZ,YAAY,EAAtD;AACA,QAAM;AAAEa,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4CjB,UAAU,CAACK,eAAD,CAA5D;AACA,QAAM;AAAEa,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0Bb,QAAQ,EAAxC;AACA,QAAMc,SAAS,GAAGb,eAAe,EAAjC;AAEA,QAAMc,cAAc,GAAG,4CAAvB;AACA,QAAMC,YAAY,GAAGF,SAAS,IAAIA,SAAS,CAACG,IAAV,CAAeF,cAAf,CAAb,GAA8CG,MAAM,CAACJ,SAAS,CAACG,IAAV,CAAeF,cAAf,EAA+BI,KAAhC,CAApD,GAA6FD,MAAM,CAAC,CAAD,CAAxH,CAPgC,CAQhC;;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAEb,KADT;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,KAAK,EAAGa,WAAD,IAA8B;AACnC,UAAIA,WAAW,KAAK,eAApB,EAAqC;AACnC,eAAOZ,QAAQ,CAACJ,aAAD,CAAf;AACD;;AAED,UAAIgB,WAAW,KAAK,KAApB,EAA2B;AACzB,eAAOZ,QAAQ,CAACL,GAAD,CAAf;AACD;;AAED,aAAOK,QAAQ,CAACN,QAAD,CAAf;AACD,KAbH;AAcE,IAAA,MAAM,EAAEO,UAdV;AAeE,IAAA,MAAM,EAAEG,MAfV;AAgBE,IAAA,WAAW,EAAEC,WAhBf;AAiBE,IAAA,WAAW,EAAE,CAAAH,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEW,IAAlB,KAA0B,EAjBzC;AAkBE,IAAA,KAAK,EAAEvB,YAlBT;AAmBE,IAAA,OAAO,EAAEa,mBAnBX;AAoBE,IAAA,YAAY,EAAEK,YApBhB;AAqBE,IAAA,aAAa,EAAG,sCAAqCD,cAAe;AACpE;AAtBF;AAAA,OAuBMT;AAvBN;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CArCD;;GAAMX,I;UACsCE,Y,EAEVG,Q,EACdC,e;;;KAJdN,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Menu as UikitMenu, ConnectorId } from '@pantherswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { allLanguages } from 'constants/localisation/languageCodes'\r\nimport { LanguageContext } from 'hooks/LanguageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetPriceData from 'hooks/useGetPriceData'\r\n// import useGetLocalProfile from 'hooks/useGetLocalProfile'\r\nimport { injected, bsc, walletconnect } from 'connectors'\r\nimport links from './config'\r\n\r\nconst Menu: React.FC = (props) => {\r\n  const { account, activate, deactivate } = useWeb3React()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const priceData = useGetPriceData()\r\n\r\n  const pantherAddress = '0x93E7ae1eF759Ee2dBEf0F87424b08d7Af7E4BcA5'\r\n  const cakePriceUsd = priceData && priceData.data[pantherAddress] ? Number(priceData.data[pantherAddress].price) : Number(0)\r\n  // const profile = useGetLocalProfile()\r\n\r\n  return (\r\n    <UikitMenu\r\n      links={links}\r\n      account={account as string}\r\n      login={(connectorId: ConnectorId) => {\r\n        if (connectorId === 'walletconnect') {\r\n          return activate(walletconnect)\r\n        }\r\n\r\n        if (connectorId === 'bsc') {\r\n          return activate(bsc)\r\n        }\r\n\r\n        return activate(injected)\r\n      }}\r\n      logout={deactivate}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage?.code || ''}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd}\r\n      cakePriceLink={`https://redlightscan.finance/token/${pantherAddress}`}\r\n      /* profile={profile} */\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n"]},"metadata":{},"sourceType":"module"}