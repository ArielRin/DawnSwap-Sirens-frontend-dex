{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _taggedTemplateLiteral from\"C:/projects/panther-frontend-dex1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  flex-wrap: nowrap;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useContext}from'react';import{AlertCircle,CheckCircle}from'react-feather';import styled,{ThemeContext}from'styled-components';import{useActiveWeb3React}from'../../hooks';import{TYPE,ExternalLink}from'../Shared';import{getBscScanLink}from'../../utils';import{AutoColumn}from'../Column';import{AutoRow}from'../Row';var Body=TYPE.body;var RowNoFlex=styled(AutoRow)(_templateObject());export default function TransactionPopup(_ref){var hash=_ref.hash,success=_ref.success,summary=_ref.summary;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var theme=useContext(ThemeContext);return/*#__PURE__*/_jsxs(RowNoFlex,{children:[/*#__PURE__*/_jsx(\"div\",{style:{paddingRight:16},children:success?/*#__PURE__*/_jsx(CheckCircle,{color:theme.colors.success,size:24}):/*#__PURE__*/_jsx(AlertCircle,{color:theme.colors.failure,size:24})}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"8px\",children:[/*#__PURE__*/_jsx(Body,{fontWeight:500,children:summary!==null&&summary!==void 0?summary:\"Hash: \".concat(hash.slice(0,8),\"...\").concat(hash.slice(58,65))}),chainId&&/*#__PURE__*/_jsx(ExternalLink,{href:getBscScanLink(chainId,hash,'transaction'),children:\"View on RedlightScan\"})]})]});}","map":{"version":3,"sources":["C:/projects/panther-frontend-dex1/src/components/Popups/TransactionPopup.tsx"],"names":["React","useContext","AlertCircle","CheckCircle","styled","ThemeContext","useActiveWeb3React","TYPE","ExternalLink","getBscScanLink","AutoColumn","AutoRow","Body","body","RowNoFlex","TransactionPopup","hash","success","summary","chainId","theme","paddingRight","colors","failure","slice"],"mappings":"+ZAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,eAAzC,CACA,MAAOC,CAAAA,MAAP,EAAiBC,YAAjB,KAAqC,mBAArC,CACA,OAASC,kBAAT,KAAmC,aAAnC,CACA,OAASC,IAAT,CAAeC,YAAf,KAAmC,WAAnC,CACA,OAASC,cAAT,KAA+B,aAA/B,CACA,OAASC,UAAT,KAA2B,WAA3B,CACA,OAASC,OAAT,KAAwB,QAAxB,C,GAEcC,CAAAA,I,CAASL,I,CAAfM,I,CAER,GAAMC,CAAAA,SAAS,CAAGV,MAAM,CAACO,OAAD,CAAT,mBAAf,CAIA,cAAe,SAASI,CAAAA,gBAAT,MAQZ,IAPDC,CAAAA,IAOC,MAPDA,IAOC,CANDC,OAMC,MANDA,OAMC,CALDC,OAKC,MALDA,OAKC,yBACmBZ,kBAAkB,EADrC,CACOa,OADP,qBACOA,OADP,CAGD,GAAMC,CAAAA,KAAK,CAAGnB,UAAU,CAACI,YAAD,CAAxB,CAEA,mBACE,MAAC,SAAD,yBACE,YAAK,KAAK,CAAE,CAAEgB,YAAY,CAAE,EAAhB,CAAZ,UACGJ,OAAO,cACN,KAAC,WAAD,EAAa,KAAK,CAAEG,KAAK,CAACE,MAAN,CAAaL,OAAjC,CAA0C,IAAI,CAAE,EAAhD,EADM,cAGN,KAAC,WAAD,EAAa,KAAK,CAAEG,KAAK,CAACE,MAAN,CAAaC,OAAjC,CAA0C,IAAI,CAAE,EAAhD,EAJJ,EADF,cAQE,MAAC,UAAD,EAAY,GAAG,CAAC,KAAhB,wBACE,KAAC,IAAD,EAAM,UAAU,CAAE,GAAlB,UAAwBL,OAAxB,SAAwBA,OAAxB,UAAwBA,OAAxB,iBAA4CF,IAAI,CAACQ,KAAL,CAAW,CAAX,CAAc,CAAd,CAA5C,eAAkER,IAAI,CAACQ,KAAL,CAAW,EAAX,CAAe,EAAf,CAAlE,GADF,CAEGL,OAAO,eAAI,KAAC,YAAD,EAAc,IAAI,CAAEV,cAAc,CAACU,OAAD,CAAUH,IAAV,CAAgB,aAAhB,CAAlC,kCAFd,GARF,GADF,CAeD","sourcesContent":["import React, { useContext } from 'react'\r\nimport { AlertCircle, CheckCircle } from 'react-feather'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { TYPE, ExternalLink } from '../Shared'\r\nimport { getBscScanLink } from '../../utils'\r\nimport { AutoColumn } from '../Column'\r\nimport { AutoRow } from '../Row'\r\n\r\nconst { body: Body } = TYPE\r\n\r\nconst RowNoFlex = styled(AutoRow)`\r\n  flex-wrap: nowrap;\r\n`\r\n\r\nexport default function TransactionPopup({\r\n  hash,\r\n  success,\r\n  summary,\r\n}: {\r\n  hash: string\r\n  success?: boolean\r\n  summary?: string\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  return (\r\n    <RowNoFlex>\r\n      <div style={{ paddingRight: 16 }}>\r\n        {success ? (\r\n          <CheckCircle color={theme.colors.success} size={24} />\r\n        ) : (\r\n          <AlertCircle color={theme.colors.failure} size={24} />\r\n        )}\r\n      </div>\r\n      <AutoColumn gap=\"8px\">\r\n        <Body fontWeight={500}>{summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Body>\r\n        {chainId && <ExternalLink href={getBscScanLink(chainId, hash, 'transaction')}>View on RedlightScan</ExternalLink>}\r\n      </AutoColumn>\r\n    </RowNoFlex>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}