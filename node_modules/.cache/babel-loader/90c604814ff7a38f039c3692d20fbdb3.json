{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAddPopup, useBlockNumber } from '../application/hooks';\nimport { checkedTransaction, finalizeTransaction } from './actions';\nexport function shouldCheck(lastBlockNumber, tx) {\n  if (tx.receipt) return false;\n  if (!tx.lastCheckedBlockNumber) return true;\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber;\n  if (blocksSinceCheck < 1) return false;\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60;\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9;\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2;\n  }\n  // otherwise every block\n  return true;\n}\nexport default function Updater() {\n  _s();\n  var _state$chainId;\n  const {\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const lastBlockNumber = useBlockNumber();\n  const dispatch = useDispatch();\n  const state = useSelector(s => s.transactions);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const transactions = chainId ? (_state$chainId = state[chainId]) !== null && _state$chainId !== void 0 ? _state$chainId : {} : {};\n\n  // show popup on confirm\n  const addPopup = useAddPopup();\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return;\n    Object.keys(transactions).filter(hash => shouldCheck(lastBlockNumber, transactions[hash])).forEach(hash => {\n      library.getTransactionReceipt(hash).then(receipt => {\n        if (receipt) {\n          var _transactions$hash;\n          dispatch(finalizeTransaction({\n            chainId,\n            hash,\n            receipt: {\n              blockHash: receipt.blockHash,\n              blockNumber: receipt.blockNumber,\n              contractAddress: receipt.contractAddress,\n              from: receipt.from,\n              status: receipt.status,\n              to: receipt.to,\n              transactionHash: receipt.transactionHash,\n              transactionIndex: receipt.transactionIndex\n            }\n          }));\n          addPopup({\n            txn: {\n              hash,\n              success: receipt.status === 1,\n              summary: (_transactions$hash = transactions[hash]) === null || _transactions$hash === void 0 ? void 0 : _transactions$hash.summary\n            }\n          }, hash);\n        } else {\n          dispatch(checkedTransaction({\n            chainId,\n            hash,\n            blockNumber: lastBlockNumber\n          }));\n        }\n      }).catch(error => {\n        console.error(`failed to check transaction hash: ${hash}`, error);\n      });\n    });\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup]);\n  return null;\n}\n_s(Updater, \"H6IOjWBNbZ0ETCS0dEYz0IeAtQE=\", false, function () {\n  return [useActiveWeb3React, useBlockNumber, useDispatch, useSelector, useAddPopup];\n});\n_c = Updater;\nvar _c;\n$RefreshReg$(_c, \"Updater\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","useActiveWeb3React","useAddPopup","useBlockNumber","checkedTransaction","finalizeTransaction","shouldCheck","lastBlockNumber","tx","receipt","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","Date","getTime","addedTime","Updater","_s","_state$chainId","chainId","library","dispatch","state","s","transactions","addPopup","Object","keys","filter","hash","forEach","getTransactionReceipt","then","_transactions$hash","blockHash","blockNumber","contractAddress","from","status","to","transactionHash","transactionIndex","txn","success","summary","catch","error","console","_c","$RefreshReg$"],"sources":["C:/projects/panther-frontend-dex1/src/state/transactions/updater.tsx"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useAddPopup, useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { checkedTransaction, finalizeTransaction } from './actions'\r\n\r\nexport function shouldCheck(\r\n  lastBlockNumber: number,\r\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number }\r\n): boolean {\r\n  if (tx.receipt) return false\r\n  if (!tx.lastCheckedBlockNumber) return true\r\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\r\n  if (blocksSinceCheck < 1) return false\r\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\r\n  if (minutesPending > 60) {\r\n    // every 10 blocks if pending for longer than an hour\r\n    return blocksSinceCheck > 9\r\n  }\r\n  if (minutesPending > 5) {\r\n    // every 3 blocks if pending more than 5 minutes\r\n    return blocksSinceCheck > 2\r\n  }\r\n  // otherwise every block\r\n  return true\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const { chainId, library } = useActiveWeb3React()\r\n\r\n  const lastBlockNumber = useBlockNumber()\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const transactions = chainId ? state[chainId] ?? {} : {}\r\n\r\n  // show popup on confirm\r\n  const addPopup = useAddPopup()\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !library || !lastBlockNumber) return\r\n\r\n    Object.keys(transactions)\r\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\r\n      .forEach((hash) => {\r\n        library\r\n          .getTransactionReceipt(hash)\r\n          .then((receipt) => {\r\n            if (receipt) {\r\n              dispatch(\r\n                finalizeTransaction({\r\n                  chainId,\r\n                  hash,\r\n                  receipt: {\r\n                    blockHash: receipt.blockHash,\r\n                    blockNumber: receipt.blockNumber,\r\n                    contractAddress: receipt.contractAddress,\r\n                    from: receipt.from,\r\n                    status: receipt.status,\r\n                    to: receipt.to,\r\n                    transactionHash: receipt.transactionHash,\r\n                    transactionIndex: receipt.transactionIndex,\r\n                  },\r\n                })\r\n              )\r\n\r\n              addPopup(\r\n                {\r\n                  txn: {\r\n                    hash,\r\n                    success: receipt.status === 1,\r\n                    summary: transactions[hash]?.summary,\r\n                  },\r\n                },\r\n                hash\r\n              )\r\n            } else {\r\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(`failed to check transaction hash: ${hash}`, error)\r\n          })\r\n      })\r\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup])\r\n\r\n  return null\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}