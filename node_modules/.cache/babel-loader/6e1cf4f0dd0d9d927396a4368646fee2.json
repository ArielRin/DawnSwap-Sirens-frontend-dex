{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProjectsGroupsModel = exports.ProjectsGroups = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Using projects, you can keep your source files sorted.\n *\n * Use API to manage projects, change their settings, or remove them if required.\n *\n * Only Crowdin Enterprise: Groups allow you to organize your projects based on specific characteristics.\n * Using projects, you can keep your source files sorted.\n */\nclass ProjectsGroups extends core_1.CrowdinApi {\n  listGroups(options, deprecatedOffset, deprecatedUserId, deprecatedLimit) {\n    if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n      options = {\n        parentId: options,\n        offset: deprecatedOffset,\n        userId: deprecatedUserId,\n        limit: deprecatedLimit\n      };\n    }\n    let url = `${this.url}/groups`;\n    url = this.addQueryParam(url, 'parentId', options.parentId);\n    url = this.addQueryParam(url, 'userId', options.userId);\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param request request body\n   * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.post\n   */\n  addGroup(request) {\n    const url = `${this.url}/groups`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param group group identifier\n   * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.get\n   */\n  getGroup(groupId) {\n    const url = `${this.url}/groups/${groupId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param groupId group identifier\n   * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.delete\n   */\n  deleteGroup(groupId) {\n    const url = `${this.url}/groups/${groupId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param groupId group identifier\n   * @param request request body\n   * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.patch\n   */\n  editGroup(groupId, request) {\n    const url = `${this.url}/groups/${groupId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  listProjects(options, deprecatedHasManagerAccess, deprecatedLimit, deprecatedOffset) {\n    if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n      options = {\n        groupId: options,\n        hasManagerAccess: deprecatedHasManagerAccess,\n        limit: deprecatedLimit,\n        offset: deprecatedOffset\n      };\n    }\n    let url = `${this.url}/projects`;\n    url = this.addQueryParam(url, 'groupId', options.groupId);\n    url = this.addQueryParam(url, 'hasManagerAccess', options.hasManagerAccess);\n    return this.getList(url, options.limit, options.offset);\n  }\n  /**\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.post\n   */\n  addProject(request) {\n    const url = `${this.url}/projects`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.get\n   */\n  getProject(projectId) {\n    const url = `${this.url}/projects/${projectId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.delete\n   */\n  deleteProject(projectId) {\n    const url = `${this.url}/projects/${projectId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.patch\n   */\n  editProject(projectId, request) {\n    const url = `${this.url}/projects/${projectId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileFormatSettingsId file format settings identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.custom-segmentations.get\n   */\n  downloadProjectFileFormatSettingsCustomSegmentation(projectId, fileFormatSettingsId) {\n    const url = `${this.url}/projects/${projectId}/file-format-settings/${fileFormatSettingsId}/custom-segmentations`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileFormatSettingsId file format settings identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.custom-segmentations.delete\n   */\n  resetProjectFileFormatSettingsCustomSegmentation(projectId, fileFormatSettingsId) {\n    const url = `${this.url}/projects/${projectId}/file-format-settings/${fileFormatSettingsId}/custom-segmentations`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param options optional parameters for the request\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.getMany\n   */\n  listProjectFileFormatSettings(projectId, options) {\n    const url = `${this.url}/projects/${projectId}/file-format-settings`;\n    return this.getList(url, options === null || options === void 0 ? void 0 : options.limit, options === null || options === void 0 ? void 0 : options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.post\n   */\n  addProjectFileFormatSettings(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/file-format-settings`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileFormatSettingsId file format settings identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.get\n   */\n  getProjectFileFormatSettings(projectId, fileFormatSettingsId) {\n    const url = `${this.url}/projects/${projectId}/file-format-settings/${fileFormatSettingsId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileFormatSettingsId file format settings identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.delete\n   */\n  deleteProjectFileFormatSettings(projectId, fileFormatSettingsId) {\n    const url = `${this.url}/projects/${projectId}/file-format-settings/${fileFormatSettingsId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileFormatSettingsId file format settings identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.patch\n   */\n  editProjectFileFormatSettings(projectId, fileFormatSettingsId, request) {\n    const url = `${this.url}/projects/${projectId}/file-format-settings/${fileFormatSettingsId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n}\nexports.ProjectsGroups = ProjectsGroups;\nvar ProjectsGroupsModel;\n(function (ProjectsGroupsModel) {\n  let Type;\n  (function (Type) {\n    Type[Type[\"FILES_BASED\"] = 0] = \"FILES_BASED\";\n    Type[Type[\"STRINGS_BASED\"] = 1] = \"STRINGS_BASED\";\n  })(Type = ProjectsGroupsModel.Type || (ProjectsGroupsModel.Type = {}));\n  let TagDetection;\n  (function (TagDetection) {\n    TagDetection[TagDetection[\"AUTO\"] = 0] = \"AUTO\";\n    TagDetection[TagDetection[\"COUNT_TAGS\"] = 1] = \"COUNT_TAGS\";\n    TagDetection[TagDetection[\"SKIP_TAGS\"] = 2] = \"SKIP_TAGS\";\n  })(TagDetection = ProjectsGroupsModel.TagDetection || (ProjectsGroupsModel.TagDetection = {}));\n  let TranslateDuplicates;\n  (function (TranslateDuplicates) {\n    TranslateDuplicates[TranslateDuplicates[\"SHOW\"] = 0] = \"SHOW\";\n    TranslateDuplicates[TranslateDuplicates[\"HIDE_REGULAR_DETECTION\"] = 1] = \"HIDE_REGULAR_DETECTION\";\n    TranslateDuplicates[TranslateDuplicates[\"SHOW_AUTO_TRANSLATE\"] = 2] = \"SHOW_AUTO_TRANSLATE\";\n    TranslateDuplicates[TranslateDuplicates[\"SHOW_WITHIN_VERION_BRANCH_REGULAR_DETECTION\"] = 3] = \"SHOW_WITHIN_VERION_BRANCH_REGULAR_DETECTION\";\n    TranslateDuplicates[TranslateDuplicates[\"HIDE_STRICT_DETECTION\"] = 4] = \"HIDE_STRICT_DETECTION\";\n    TranslateDuplicates[TranslateDuplicates[\"SHOW_WITHIN_VERION_BRANCH_STRICT_DETECTION\"] = 5] = \"SHOW_WITHIN_VERION_BRANCH_STRICT_DETECTION\";\n  })(TranslateDuplicates = ProjectsGroupsModel.TranslateDuplicates || (ProjectsGroupsModel.TranslateDuplicates = {}));\n})(ProjectsGroupsModel = exports.ProjectsGroupsModel || (exports.ProjectsGroupsModel = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","ProjectsGroupsModel","ProjectsGroups","core_1","require","CrowdinApi","listGroups","options","deprecatedOffset","deprecatedUserId","deprecatedLimit","isOptionalNumber","arguments","parentId","offset","userId","limit","url","addQueryParam","getList","addGroup","request","post","defaultConfig","getGroup","groupId","get","deleteGroup","delete","editGroup","patch","listProjects","deprecatedHasManagerAccess","hasManagerAccess","addProject","getProject","projectId","deleteProject","editProject","downloadProjectFileFormatSettingsCustomSegmentation","fileFormatSettingsId","resetProjectFileFormatSettingsCustomSegmentation","listProjectFileFormatSettings","addProjectFileFormatSettings","getProjectFileFormatSettings","deleteProjectFileFormatSettings","editProjectFileFormatSettings","Type","TagDetection","TranslateDuplicates"],"sources":["C:/projects/panther-frontend-dex1/node_modules/@crowdin/crowdin-api-client/out/projectsGroups/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectsGroupsModel = exports.ProjectsGroups = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Using projects, you can keep your source files sorted.\n *\n * Use API to manage projects, change their settings, or remove them if required.\n *\n * Only Crowdin Enterprise: Groups allow you to organize your projects based on specific characteristics.\n * Using projects, you can keep your source files sorted.\n */\nclass ProjectsGroups extends core_1.CrowdinApi {\n    listGroups(options, deprecatedOffset, deprecatedUserId, deprecatedLimit) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = {\n                parentId: options,\n                offset: deprecatedOffset,\n                userId: deprecatedUserId,\n                limit: deprecatedLimit,\n            };\n        }\n        let url = `${this.url}/groups`;\n        url = this.addQueryParam(url, 'parentId', options.parentId);\n        url = this.addQueryParam(url, 'userId', options.userId);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.post\n     */\n    addGroup(request) {\n        const url = `${this.url}/groups`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param group group identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.get\n     */\n    getGroup(groupId) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.delete\n     */\n    deleteGroup(groupId) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.patch\n     */\n    editGroup(groupId, request) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    listProjects(options, deprecatedHasManagerAccess, deprecatedLimit, deprecatedOffset) {\n        if ((0, core_1.isOptionalNumber)(options, '0' in arguments)) {\n            options = {\n                groupId: options,\n                hasManagerAccess: deprecatedHasManagerAccess,\n                limit: deprecatedLimit,\n                offset: deprecatedOffset,\n            };\n        }\n        let url = `${this.url}/projects`;\n        url = this.addQueryParam(url, 'groupId', options.groupId);\n        url = this.addQueryParam(url, 'hasManagerAccess', options.hasManagerAccess);\n        return this.getList(url, options.limit, options.offset);\n    }\n    /**\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.post\n     */\n    addProject(request) {\n        const url = `${this.url}/projects`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.get\n     */\n    getProject(projectId) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.delete\n     */\n    deleteProject(projectId) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.patch\n     */\n    editProject(projectId, request) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileFormatSettingsId file format settings identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.custom-segmentations.get\n     */\n    downloadProjectFileFormatSettingsCustomSegmentation(projectId, fileFormatSettingsId) {\n        const url = `${this.url}/projects/${projectId}/file-format-settings/${fileFormatSettingsId}/custom-segmentations`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileFormatSettingsId file format settings identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.custom-segmentations.delete\n     */\n    resetProjectFileFormatSettingsCustomSegmentation(projectId, fileFormatSettingsId) {\n        const url = `${this.url}/projects/${projectId}/file-format-settings/${fileFormatSettingsId}/custom-segmentations`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param options optional parameters for the request\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.getMany\n     */\n    listProjectFileFormatSettings(projectId, options) {\n        const url = `${this.url}/projects/${projectId}/file-format-settings`;\n        return this.getList(url, options === null || options === void 0 ? void 0 : options.limit, options === null || options === void 0 ? void 0 : options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.post\n     */\n    addProjectFileFormatSettings(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/file-format-settings`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileFormatSettingsId file format settings identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.get\n     */\n    getProjectFileFormatSettings(projectId, fileFormatSettingsId) {\n        const url = `${this.url}/projects/${projectId}/file-format-settings/${fileFormatSettingsId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileFormatSettingsId file format settings identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.delete\n     */\n    deleteProjectFileFormatSettings(projectId, fileFormatSettingsId) {\n        const url = `${this.url}/projects/${projectId}/file-format-settings/${fileFormatSettingsId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileFormatSettingsId file format settings identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.file-format-settings.patch\n     */\n    editProjectFileFormatSettings(projectId, fileFormatSettingsId, request) {\n        const url = `${this.url}/projects/${projectId}/file-format-settings/${fileFormatSettingsId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.ProjectsGroups = ProjectsGroups;\nvar ProjectsGroupsModel;\n(function (ProjectsGroupsModel) {\n    let Type;\n    (function (Type) {\n        Type[Type[\"FILES_BASED\"] = 0] = \"FILES_BASED\";\n        Type[Type[\"STRINGS_BASED\"] = 1] = \"STRINGS_BASED\";\n    })(Type = ProjectsGroupsModel.Type || (ProjectsGroupsModel.Type = {}));\n    let TagDetection;\n    (function (TagDetection) {\n        TagDetection[TagDetection[\"AUTO\"] = 0] = \"AUTO\";\n        TagDetection[TagDetection[\"COUNT_TAGS\"] = 1] = \"COUNT_TAGS\";\n        TagDetection[TagDetection[\"SKIP_TAGS\"] = 2] = \"SKIP_TAGS\";\n    })(TagDetection = ProjectsGroupsModel.TagDetection || (ProjectsGroupsModel.TagDetection = {}));\n    let TranslateDuplicates;\n    (function (TranslateDuplicates) {\n        TranslateDuplicates[TranslateDuplicates[\"SHOW\"] = 0] = \"SHOW\";\n        TranslateDuplicates[TranslateDuplicates[\"HIDE_REGULAR_DETECTION\"] = 1] = \"HIDE_REGULAR_DETECTION\";\n        TranslateDuplicates[TranslateDuplicates[\"SHOW_AUTO_TRANSLATE\"] = 2] = \"SHOW_AUTO_TRANSLATE\";\n        TranslateDuplicates[TranslateDuplicates[\"SHOW_WITHIN_VERION_BRANCH_REGULAR_DETECTION\"] = 3] = \"SHOW_WITHIN_VERION_BRANCH_REGULAR_DETECTION\";\n        TranslateDuplicates[TranslateDuplicates[\"HIDE_STRICT_DETECTION\"] = 4] = \"HIDE_STRICT_DETECTION\";\n        TranslateDuplicates[TranslateDuplicates[\"SHOW_WITHIN_VERION_BRANCH_STRICT_DETECTION\"] = 5] = \"SHOW_WITHIN_VERION_BRANCH_STRICT_DETECTION\";\n    })(TranslateDuplicates = ProjectsGroupsModel.TranslateDuplicates || (ProjectsGroupsModel.TranslateDuplicates = {}));\n})(ProjectsGroupsModel = exports.ProjectsGroupsModel || (exports.ProjectsGroupsModel = {}));\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAGF,OAAO,CAACG,cAAc,GAAG,KAAK,CAAC;AAC7D,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,cAAc,SAASC,MAAM,CAACE,UAAU,CAAC;EAC3CC,UAAUA,CAACC,OAAO,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,eAAe,EAAE;IACrE,IAAI,CAAC,CAAC,EAAEP,MAAM,CAACQ,gBAAgB,EAAEJ,OAAO,EAAE,GAAG,IAAIK,SAAS,CAAC,EAAE;MACzDL,OAAO,GAAG;QACNM,QAAQ,EAAEN,OAAO;QACjBO,MAAM,EAAEN,gBAAgB;QACxBO,MAAM,EAAEN,gBAAgB;QACxBO,KAAK,EAAEN;MACX,CAAC;IACL;IACA,IAAIO,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,SAAQ;IAC9BA,GAAG,GAAG,IAAI,CAACC,aAAa,CAACD,GAAG,EAAE,UAAU,EAAEV,OAAO,CAACM,QAAQ,CAAC;IAC3DI,GAAG,GAAG,IAAI,CAACC,aAAa,CAACD,GAAG,EAAE,QAAQ,EAAEV,OAAO,CAACQ,MAAM,CAAC;IACvD,OAAO,IAAI,CAACI,OAAO,CAACF,GAAG,EAAEV,OAAO,CAACS,KAAK,EAAET,OAAO,CAACO,MAAM,CAAC;EAC3D;EACA;AACJ;AACA;AACA;EACIM,QAAQA,CAACC,OAAO,EAAE;IACd,MAAMJ,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,SAAQ;IAChC,OAAO,IAAI,CAACK,IAAI,CAACL,GAAG,EAAEI,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACxD;EACA;AACJ;AACA;AACA;EACIC,QAAQA,CAACC,OAAO,EAAE;IACd,MAAMR,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,WAAUQ,OAAQ,EAAC;IAC3C,OAAO,IAAI,CAACC,GAAG,CAACT,GAAG,EAAE,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;EACII,WAAWA,CAACF,OAAO,EAAE;IACjB,MAAMR,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,WAAUQ,OAAQ,EAAC;IAC3C,OAAO,IAAI,CAACG,MAAM,CAACX,GAAG,EAAE,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC;EACjD;EACA;AACJ;AACA;AACA;AACA;EACIM,SAASA,CAACJ,OAAO,EAAEJ,OAAO,EAAE;IACxB,MAAMJ,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,WAAUQ,OAAQ,EAAC;IAC3C,OAAO,IAAI,CAACK,KAAK,CAACb,GAAG,EAAEI,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACzD;EACAQ,YAAYA,CAACxB,OAAO,EAAEyB,0BAA0B,EAAEtB,eAAe,EAAEF,gBAAgB,EAAE;IACjF,IAAI,CAAC,CAAC,EAAEL,MAAM,CAACQ,gBAAgB,EAAEJ,OAAO,EAAE,GAAG,IAAIK,SAAS,CAAC,EAAE;MACzDL,OAAO,GAAG;QACNkB,OAAO,EAAElB,OAAO;QAChB0B,gBAAgB,EAAED,0BAA0B;QAC5ChB,KAAK,EAAEN,eAAe;QACtBI,MAAM,EAAEN;MACZ,CAAC;IACL;IACA,IAAIS,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,WAAU;IAChCA,GAAG,GAAG,IAAI,CAACC,aAAa,CAACD,GAAG,EAAE,SAAS,EAAEV,OAAO,CAACkB,OAAO,CAAC;IACzDR,GAAG,GAAG,IAAI,CAACC,aAAa,CAACD,GAAG,EAAE,kBAAkB,EAAEV,OAAO,CAAC0B,gBAAgB,CAAC;IAC3E,OAAO,IAAI,CAACd,OAAO,CAACF,GAAG,EAAEV,OAAO,CAACS,KAAK,EAAET,OAAO,CAACO,MAAM,CAAC;EAC3D;EACA;AACJ;AACA;AACA;EACIoB,UAAUA,CAACb,OAAO,EAAE;IAChB,MAAMJ,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,WAAU;IAClC,OAAO,IAAI,CAACK,IAAI,CAACL,GAAG,EAAEI,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACxD;EACA;AACJ;AACA;AACA;EACIY,UAAUA,CAACC,SAAS,EAAE;IAClB,MAAMnB,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYmB,SAAU,EAAC;IAC/C,OAAO,IAAI,CAACV,GAAG,CAACT,GAAG,EAAE,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;EACIc,aAAaA,CAACD,SAAS,EAAE;IACrB,MAAMnB,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYmB,SAAU,EAAC;IAC/C,OAAO,IAAI,CAACR,MAAM,CAACX,GAAG,EAAE,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC;EACjD;EACA;AACJ;AACA;AACA;AACA;EACIe,WAAWA,CAACF,SAAS,EAAEf,OAAO,EAAE;IAC5B,MAAMJ,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYmB,SAAU,EAAC;IAC/C,OAAO,IAAI,CAACN,KAAK,CAACb,GAAG,EAAEI,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACzD;EACA;AACJ;AACA;AACA;AACA;EACIgB,mDAAmDA,CAACH,SAAS,EAAEI,oBAAoB,EAAE;IACjF,MAAMvB,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYmB,SAAU,yBAAwBI,oBAAqB,uBAAsB;IACjH,OAAO,IAAI,CAACd,GAAG,CAACT,GAAG,EAAE,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;AACA;EACIkB,gDAAgDA,CAACL,SAAS,EAAEI,oBAAoB,EAAE;IAC9E,MAAMvB,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYmB,SAAU,yBAAwBI,oBAAqB,uBAAsB;IACjH,OAAO,IAAI,CAACZ,MAAM,CAACX,GAAG,EAAE,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC;EACjD;EACA;AACJ;AACA;AACA;AACA;EACImB,6BAA6BA,CAACN,SAAS,EAAE7B,OAAO,EAAE;IAC9C,MAAMU,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYmB,SAAU,uBAAsB;IACpE,OAAO,IAAI,CAACjB,OAAO,CAACF,GAAG,EAAEV,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACS,KAAK,EAAET,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACO,MAAM,CAAC;EAC/J;EACA;AACJ;AACA;AACA;AACA;EACI6B,4BAA4BA,CAACP,SAAS,EAAEf,OAAO,EAAE;IAC7C,MAAMJ,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYmB,SAAU,uBAAsB;IACpE,OAAO,IAAI,CAACd,IAAI,CAACL,GAAG,EAAEI,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACxD;EACA;AACJ;AACA;AACA;AACA;EACIqB,4BAA4BA,CAACR,SAAS,EAAEI,oBAAoB,EAAE;IAC1D,MAAMvB,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYmB,SAAU,yBAAwBI,oBAAqB,EAAC;IAC5F,OAAO,IAAI,CAACd,GAAG,CAACT,GAAG,EAAE,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;AACA;EACIsB,+BAA+BA,CAACT,SAAS,EAAEI,oBAAoB,EAAE;IAC7D,MAAMvB,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYmB,SAAU,yBAAwBI,oBAAqB,EAAC;IAC5F,OAAO,IAAI,CAACZ,MAAM,CAACX,GAAG,EAAE,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC;EACjD;EACA;AACJ;AACA;AACA;AACA;AACA;EACIuB,6BAA6BA,CAACV,SAAS,EAAEI,oBAAoB,EAAEnB,OAAO,EAAE;IACpE,MAAMJ,GAAG,GAAI,GAAE,IAAI,CAACA,GAAI,aAAYmB,SAAU,yBAAwBI,oBAAqB,EAAC;IAC5F,OAAO,IAAI,CAACV,KAAK,CAACb,GAAG,EAAEI,OAAO,EAAE,IAAI,CAACE,aAAa,CAAC,CAAC,CAAC;EACzD;AACJ;AACAxB,OAAO,CAACG,cAAc,GAAGA,cAAc;AACvC,IAAID,mBAAmB;AACvB,CAAC,UAAUA,mBAAmB,EAAE;EAC5B,IAAI8C,IAAI;EACR,CAAC,UAAUA,IAAI,EAAE;IACbA,IAAI,CAACA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa;IAC7CA,IAAI,CAACA,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe;EACrD,CAAC,EAAEA,IAAI,GAAG9C,mBAAmB,CAAC8C,IAAI,KAAK9C,mBAAmB,CAAC8C,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;EACtE,IAAIC,YAAY;EAChB,CAAC,UAAUA,YAAY,EAAE;IACrBA,YAAY,CAACA,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;IAC/CA,YAAY,CAACA,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY;IAC3DA,YAAY,CAACA,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW;EAC7D,CAAC,EAAEA,YAAY,GAAG/C,mBAAmB,CAAC+C,YAAY,KAAK/C,mBAAmB,CAAC+C,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;EAC9F,IAAIC,mBAAmB;EACvB,CAAC,UAAUA,mBAAmB,EAAE;IAC5BA,mBAAmB,CAACA,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;IAC7DA,mBAAmB,CAACA,mBAAmB,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,wBAAwB;IACjGA,mBAAmB,CAACA,mBAAmB,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,GAAG,qBAAqB;IAC3FA,mBAAmB,CAACA,mBAAmB,CAAC,6CAA6C,CAAC,GAAG,CAAC,CAAC,GAAG,6CAA6C;IAC3IA,mBAAmB,CAACA,mBAAmB,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,GAAG,uBAAuB;IAC/FA,mBAAmB,CAACA,mBAAmB,CAAC,4CAA4C,CAAC,GAAG,CAAC,CAAC,GAAG,4CAA4C;EAC7I,CAAC,EAAEA,mBAAmB,GAAGhD,mBAAmB,CAACgD,mBAAmB,KAAKhD,mBAAmB,CAACgD,mBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC;AACvH,CAAC,EAAEhD,mBAAmB,GAAGF,OAAO,CAACE,mBAAmB,KAAKF,OAAO,CAACE,mBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"script"}