{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _objectSpread from\"C:/projects/panther-frontend-dex1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:/projects/panther-frontend-dex1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:/projects/panther-frontend-dex1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{JSBI,Token}from'@pantherswap-libs/sdk';import React,{useCallback,useContext,useEffect,useMemo,useState}from'react';import{ArrowDown}from'react-feather';import{CardBody,ArrowDownIcon,Button,IconButton,Text}from'@pantherswap-libs/uikit';import{ThemeContext}from'styled-components';import AddressInputPanel from'components/AddressInputPanel';import Card,{GreyCard}from'components/Card';import{AutoColumn}from'components/Column';import ConfirmSwapModal from'components/swap/ConfirmSwapModal';import CurrencyInputPanel from'components/CurrencyInputPanel';import CardNav from'components/CardNav';import{AutoRow,RowBetween}from'components/Row';import AdvancedSwapDetailsDropdown from'components/swap/AdvancedSwapDetailsDropdown';import confirmPriceImpactWithoutFee from'components/swap/confirmPriceImpactWithoutFee';import{ArrowWrapper,BottomGrouping,SwapCallbackError,Wrapper}from'components/swap/styleds';import TradePrice from'components/swap/TradePrice';import TokenWarningModal from'components/TokenWarningModal';import SyrupWarningModal from'components/SyrupWarningModal';import ProgressSteps from'components/ProgressSteps';import{INITIAL_ALLOWED_SLIPPAGE}from'constants/index';import{useActiveWeb3React}from'hooks';import{useCurrency}from'hooks/Tokens';import{ApprovalState,useApproveCallbackFromTrade}from'hooks/useApproveCallback';import{useSwapCallback}from'hooks/useSwapCallback';import useWrapCallback,{WrapType}from'hooks/useWrapCallback';import{Field}from'state/swap/actions';import{useDefaultsFromURLSearch,useDerivedSwapInfo,useSwapActionHandlers,useSwapState}from'state/swap/hooks';import{useExpertModeManager,useUserDeadline,useUserSlippageTolerance}from'state/user/hooks';import{LinkStyledButton,TYPE}from'components/Shared';import{maxAmountSpend}from'utils/maxAmountSpend';import{computeTradePriceBreakdown,warningSeverity}from'utils/prices';import Loader from'components/Loader';import{TranslateString}from'utils/translateTextHelpers';import PageHeader from'components/PageHeader';import ConnectWalletButton from'components/ConnectWalletButton';import AppBody from'../AppBody';var Main=TYPE.main;var Swap=function Swap(){var _ref3,_ref4,_parsedAmounts$indepe,_parsedAmounts$indepe2,_parsedAmounts$depend,_parsedAmounts$depend2,_formattedAmounts,_parsedAmounts$indepe3,_parsedAmounts$Field$,_currencies$Field$INP;var loadedUrlParams=useDefaultsFromURLSearch();// token warning stuff\nvar _ref=[useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.inputCurrencyId),useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.outputCurrencyId)],loadedInputCurrency=_ref[0],loadedOutputCurrency=_ref[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dismissTokenWarning=_useState2[0],setDismissTokenWarning=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isSyrup=_useState4[0],setIsSyrup=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),syrupTransactionType=_useState6[0],setSyrupTransactionType=_useState6[1];var urlLoadedTokens=useMemo(function(){var _filter,_ref2;return(_filter=(_ref2=[loadedInputCurrency,loadedOutputCurrency])===null||_ref2===void 0?void 0:_ref2.filter(function(c){return c instanceof Token;}))!==null&&_filter!==void 0?_filter:[];},[loadedInputCurrency,loadedOutputCurrency]);var handleConfirmTokenWarning=useCallback(function(){setDismissTokenWarning(true);},[]);var handleConfirmSyrupWarning=useCallback(function(){setIsSyrup(false);setSyrupTransactionType('');},[]);var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var theme=useContext(ThemeContext);var _useExpertModeManager=useExpertModeManager(),_useExpertModeManager2=_slicedToArray(_useExpertModeManager,1),isExpertMode=_useExpertModeManager2[0];// get custom setting values for user\nvar _useUserDeadline=useUserDeadline(),_useUserDeadline2=_slicedToArray(_useUserDeadline,1),deadline=_useUserDeadline2[0];var _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];// swap state\nvar _useSwapState=useSwapState(),independentField=_useSwapState.independentField,typedValue=_useSwapState.typedValue,recipient=_useSwapState.recipient;var _useDerivedSwapInfo=useDerivedSwapInfo(),v2Trade=_useDerivedSwapInfo.v2Trade,currencyBalances=_useDerivedSwapInfo.currencyBalances,parsedAmount=_useDerivedSwapInfo.parsedAmount,currencies=_useDerivedSwapInfo.currencies,swapInputError=_useDerivedSwapInfo.inputError;var _useWrapCallback=useWrapCallback(currencies[Field.INPUT],currencies[Field.OUTPUT],typedValue),wrapType=_useWrapCallback.wrapType,onWrap=_useWrapCallback.execute,wrapInputError=_useWrapCallback.inputError;var showWrap=wrapType!==WrapType.NOT_APPLICABLE;var trade=v2Trade;var parsedAmounts=showWrap?(_ref3={},_defineProperty(_ref3,Field.INPUT,parsedAmount),_defineProperty(_ref3,Field.OUTPUT,parsedAmount),_ref3):(_ref4={},_defineProperty(_ref4,Field.INPUT,independentField===Field.INPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.inputAmount),_defineProperty(_ref4,Field.OUTPUT,independentField===Field.OUTPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.outputAmount),_ref4);var _useSwapActionHandler=useSwapActionHandlers(),onSwitchTokens=_useSwapActionHandler.onSwitchTokens,onCurrencySelection=_useSwapActionHandler.onCurrencySelection,onUserInput=_useSwapActionHandler.onUserInput,onChangeRecipient=_useSwapActionHandler.onChangeRecipient;var isValid=!swapInputError;var dependentField=independentField===Field.INPUT?Field.OUTPUT:Field.INPUT;var handleTypeInput=useCallback(function(value){onUserInput(Field.INPUT,value);},[onUserInput]);var handleTypeOutput=useCallback(function(value){onUserInput(Field.OUTPUT,value);},[onUserInput]);// modal and loading\nvar _useState7=useState({showConfirm:false,tradeToConfirm:undefined,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined}),_useState8=_slicedToArray(_useState7,2),_useState8$=_useState8[0],showConfirm=_useState8$.showConfirm,tradeToConfirm=_useState8$.tradeToConfirm,swapErrorMessage=_useState8$.swapErrorMessage,attemptingTxn=_useState8$.attemptingTxn,txHash=_useState8$.txHash,setSwapState=_useState8[1];var formattedAmounts=(_formattedAmounts={},_defineProperty(_formattedAmounts,independentField,typedValue),_defineProperty(_formattedAmounts,dependentField,showWrap?(_parsedAmounts$indepe=(_parsedAmounts$indepe2=parsedAmounts[independentField])===null||_parsedAmounts$indepe2===void 0?void 0:_parsedAmounts$indepe2.toExact())!==null&&_parsedAmounts$indepe!==void 0?_parsedAmounts$indepe:'':(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''),_formattedAmounts);var route=trade===null||trade===void 0?void 0:trade.route;var userHasSpecifiedInputOutput=Boolean(currencies[Field.INPUT]&&currencies[Field.OUTPUT]&&((_parsedAmounts$indepe3=parsedAmounts[independentField])===null||_parsedAmounts$indepe3===void 0?void 0:_parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));var noRoute=!route;// check whether the user has approved the router on the input token\nvar _useApproveCallbackFr=useApproveCallbackFromTrade(trade,allowedSlippage),_useApproveCallbackFr2=_slicedToArray(_useApproveCallbackFr,2),approval=_useApproveCallbackFr2[0],approveCallback=_useApproveCallbackFr2[1];// check if user has gone through approval process, used to show two step buttons, reset on token change\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),approvalSubmitted=_useState10[0],setApprovalSubmitted=_useState10[1];// mark when a user has submitted an approval, reset onTokenSelection for input field\nuseEffect(function(){if(approval===ApprovalState.PENDING){setApprovalSubmitted(true);}},[approval,approvalSubmitted]);var maxAmountInput=maxAmountSpend(currencyBalances[Field.INPUT]);var atMaxAmountInput=Boolean(maxAmountInput&&((_parsedAmounts$Field$=parsedAmounts[Field.INPUT])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.equalTo(maxAmountInput)));// the callback to execute the swap\nvar _useSwapCallback=useSwapCallback(trade,allowedSlippage,deadline,recipient),swapCallback=_useSwapCallback.callback,swapCallbackError=_useSwapCallback.error;var _computeTradePriceBre=computeTradePriceBreakdown(trade),priceImpactWithoutFee=_computeTradePriceBre.priceImpactWithoutFee;var handleSwap=useCallback(function(){if(priceImpactWithoutFee&&!confirmPriceImpactWithoutFee(priceImpactWithoutFee)){return;}if(!swapCallback){return;}setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{attemptingTxn:true,swapErrorMessage:undefined,txHash:undefined});});swapCallback().then(function(hash){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{attemptingTxn:false,swapErrorMessage:undefined,txHash:hash});});}).catch(function(error){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{attemptingTxn:false,swapErrorMessage:error.message,txHash:undefined});});});},[priceImpactWithoutFee,swapCallback,setSwapState]);// errors\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showInverted=_useState12[0],setShowInverted=_useState12[1];// warnings on slippage\nvar priceImpactSeverity=warningSeverity(priceImpactWithoutFee);// show approve flow when: no error on inputs, not approved or pending, or approved in current session\n// never show if price impact is above threshold in non expert mode\nvar showApproveFlow=!swapInputError&&(approval===ApprovalState.NOT_APPROVED||approval===ApprovalState.PENDING||approvalSubmitted&&approval===ApprovalState.APPROVED)&&!(priceImpactSeverity>3&&!isExpertMode);var handleConfirmDismiss=useCallback(function(){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{showConfirm:false});});// if there was a tx hash, we want to clear the input\nif(txHash){onUserInput(Field.INPUT,'');}},[onUserInput,txHash,setSwapState]);var handleAcceptChanges=useCallback(function(){setSwapState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{tradeToConfirm:trade});});},[trade]);// This will check to see if the user has selected Syrup to either buy or sell.\n// If so, they will be alerted with a warning message.\nvar checkForSyrup=useCallback(function(selected,purchaseType){if(selected==='syrup'){setIsSyrup(true);setSyrupTransactionType(purchaseType);}},[setIsSyrup,setSyrupTransactionType]);var handleInputSelect=useCallback(function(inputCurrency){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonCurrencySelection(Field.INPUT,inputCurrency);if(inputCurrency.symbol.toLowerCase()==='syrup'){checkForSyrup(inputCurrency.symbol.toLowerCase(),'Selling');}},[onCurrencySelection,setApprovalSubmitted,checkForSyrup]);var handleMaxInput=useCallback(function(){if(maxAmountInput){onUserInput(Field.INPUT,maxAmountInput.toExact());}},[maxAmountInput,onUserInput]);var handleOutputSelect=useCallback(function(outputCurrency){onCurrencySelection(Field.OUTPUT,outputCurrency);if(outputCurrency.symbol.toLowerCase()==='syrup'){checkForSyrup(outputCurrency.symbol.toLowerCase(),'Buying');}},[onCurrencySelection,checkForSyrup]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TokenWarningModal,{isOpen:urlLoadedTokens.length>0&&!dismissTokenWarning,tokens:urlLoadedTokens,onConfirm:handleConfirmTokenWarning}),/*#__PURE__*/_jsx(SyrupWarningModal,{isOpen:isSyrup,transactionType:syrupTransactionType,onConfirm:handleConfirmSyrupWarning}),/*#__PURE__*/_jsx(CardNav,{}),/*#__PURE__*/_jsx(AppBody,{children:/*#__PURE__*/_jsxs(Wrapper,{id:\"swap-page\",children:[/*#__PURE__*/_jsx(ConfirmSwapModal,{isOpen:showConfirm,trade:trade,originalTrade:tradeToConfirm,onAcceptChanges:handleAcceptChanges,attemptingTxn:attemptingTxn,txHash:txHash,recipient:recipient,allowedSlippage:allowedSlippage,onConfirm:handleSwap,swapErrorMessage:swapErrorMessage,onDismiss:handleConfirmDismiss}),/*#__PURE__*/_jsx(PageHeader,{title:\"Exchange\",description:\"Trade tokens in an instant\"}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",children:[/*#__PURE__*/_jsx(CurrencyInputPanel,{label:independentField===Field.OUTPUT&&!showWrap&&trade?'From (estimated)':TranslateString(76,'From'),value:formattedAmounts[Field.INPUT],showMaxButton:!atMaxAmountInput,currency:currencies[Field.INPUT],onUserInput:handleTypeInput,onMax:handleMaxInput,onCurrencySelect:handleInputSelect,otherCurrency:currencies[Field.OUTPUT],id:\"swap-currency-input\"}),/*#__PURE__*/_jsx(AutoColumn,{justify:\"space-between\",children:/*#__PURE__*/_jsxs(AutoRow,{justify:isExpertMode?'space-between':'center',style:{padding:'0 1rem'},children:[/*#__PURE__*/_jsx(ArrowWrapper,{clickable:true,children:/*#__PURE__*/_jsx(IconButton,{variant:\"tertiary\",onClick:function onClick(){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonSwitchTokens();},style:{borderRadius:'50%'},size:\"sm\",children:/*#__PURE__*/_jsx(ArrowDownIcon,{color:\"primary\",width:\"24px\"})})}),recipient===null&&!showWrap&&isExpertMode?/*#__PURE__*/_jsx(LinkStyledButton,{id:\"add-recipient-button\",onClick:function onClick(){return onChangeRecipient('');},children:\"+ Add a send (optional)\"}):null]})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.OUTPUT],onUserInput:handleTypeOutput,label:independentField===Field.INPUT&&!showWrap&&trade?'To (estimated)':TranslateString(80,'To'),showMaxButton:false,currency:currencies[Field.OUTPUT],onCurrencySelect:handleOutputSelect,otherCurrency:currencies[Field.INPUT],id:\"swap-currency-output\"}),recipient!==null&&!showWrap?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(AutoRow,{justify:\"space-between\",style:{padding:'0 1rem'},children:[/*#__PURE__*/_jsx(ArrowWrapper,{clickable:false,children:/*#__PURE__*/_jsx(ArrowDown,{size:\"16\",color:theme.colors.textSubtle})}),/*#__PURE__*/_jsx(LinkStyledButton,{id:\"remove-recipient-button\",onClick:function onClick(){return onChangeRecipient(null);},children:\"- Remove send\"})]}),/*#__PURE__*/_jsx(AddressInputPanel,{id:\"recipient\",value:recipient,onChange:onChangeRecipient})]}):null,showWrap?null:/*#__PURE__*/_jsx(Card,{padding:\".25rem .75rem 0 .75rem\",borderRadius:\"20px\",children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"4px\",children:[Boolean(trade)&&/*#__PURE__*/_jsxs(RowBetween,{align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Price\"}),/*#__PURE__*/_jsx(TradePrice,{price:trade===null||trade===void 0?void 0:trade.executionPrice,showInverted:showInverted,setShowInverted:setShowInverted})]}),allowedSlippage!==INITIAL_ALLOWED_SLIPPAGE&&/*#__PURE__*/_jsxs(RowBetween,{align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Slippage Tolerance\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",children:[allowedSlippage/100,\"%\"]})]})]})})]}),/*#__PURE__*/_jsxs(BottomGrouping,{children:[!account?/*#__PURE__*/_jsx(ConnectWalletButton,{fullWidth:true}):showWrap?/*#__PURE__*/_jsx(Button,{disabled:Boolean(wrapInputError),onClick:onWrap,fullWidth:true,children:wrapInputError!==null&&wrapInputError!==void 0?wrapInputError:wrapType===WrapType.WRAP?'Wrap':wrapType===WrapType.UNWRAP?'Unwrap':null}):noRoute&&userHasSpecifiedInputOutput?/*#__PURE__*/_jsx(GreyCard,{style:{textAlign:'center'},children:/*#__PURE__*/_jsx(Main,{mb:\"4px\",children:\"Insufficient liquidity for this trade.\"})}):showApproveFlow?/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(Button,{onClick:approveCallback,disabled:approval!==ApprovalState.NOT_APPROVED||approvalSubmitted,style:{width:'48%'},variant:approval===ApprovalState.APPROVED?'success':'primary',children:approval===ApprovalState.PENDING?/*#__PURE__*/_jsxs(AutoRow,{gap:\"6px\",justify:\"center\",children:[\"Approving \",/*#__PURE__*/_jsx(Loader,{stroke:\"white\"})]}):approvalSubmitted&&approval===ApprovalState.APPROVED?'Approved':\"Approve \".concat((_currencies$Field$INP=currencies[Field.INPUT])===null||_currencies$Field$INP===void 0?void 0:_currencies$Field$INP.symbol)}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},style:{width:'48%'},id:\"swap-button\",disabled:!isValid||approval!==ApprovalState.APPROVED||priceImpactSeverity>3&&!isExpertMode,variant:isValid&&priceImpactSeverity>2?'danger':'primary',children:priceImpactSeverity>3&&!isExpertMode?\"Price Impact High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':'')})]}):/*#__PURE__*/_jsx(Button,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},id:\"swap-button\",disabled:!isValid||priceImpactSeverity>3&&!isExpertMode||!!swapCallbackError,variant:isValid&&priceImpactSeverity>2&&!swapCallbackError?'danger':'primary',fullWidth:true,children:swapInputError||(priceImpactSeverity>3&&!isExpertMode?\"Price Impact Too High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':''))}),showApproveFlow&&/*#__PURE__*/_jsx(ProgressSteps,{steps:[approval===ApprovalState.APPROVED]}),isExpertMode&&swapErrorMessage?/*#__PURE__*/_jsx(SwapCallbackError,{error:swapErrorMessage}):null]})]})]})}),/*#__PURE__*/_jsx(AdvancedSwapDetailsDropdown,{trade:trade})]});};export default Swap;","map":{"version":3,"sources":["C:/projects/panther-frontend-dex1/src/pages/Swap/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","CardBody","ArrowDownIcon","Button","IconButton","Text","ThemeContext","AddressInputPanel","Card","GreyCard","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","CardNav","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","TokenWarningModal","SyrupWarningModal","ProgressSteps","INITIAL_ALLOWED_SLIPPAGE","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useWrapCallback","WrapType","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserDeadline","useUserSlippageTolerance","LinkStyledButton","TYPE","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","Loader","TranslateString","PageHeader","ConnectWalletButton","AppBody","Main","main","Swap","loadedUrlParams","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","isSyrup","setIsSyrup","syrupTransactionType","setSyrupTransactionType","urlLoadedTokens","filter","c","handleConfirmTokenWarning","handleConfirmSyrupWarning","account","theme","isExpertMode","deadline","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","INPUT","OUTPUT","wrapType","onWrap","execute","wrapInputError","showWrap","NOT_APPLICABLE","trade","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","undefined","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","swapCallback","callback","swapCallbackError","error","priceImpactWithoutFee","handleSwap","prevState","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","checkForSyrup","selected","purchaseType","handleInputSelect","inputCurrency","symbol","toLowerCase","handleMaxInput","handleOutputSelect","outputCurrency","length","padding","borderRadius","colors","textSubtle","executionPrice","WRAP","UNWRAP","textAlign","width"],"mappings":"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","sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from '@pantherswap-libs/sdk'\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\r\nimport { ArrowDown } from 'react-feather'\r\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text } from '@pantherswap-libs/uikit'\r\nimport { ThemeContext } from 'styled-components'\r\nimport AddressInputPanel from 'components/AddressInputPanel'\r\nimport Card, { GreyCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport CardNav from 'components/CardNav'\r\nimport { AutoRow, RowBetween } from 'components/Row'\r\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\r\nimport TradePrice from 'components/swap/TradePrice'\r\nimport TokenWarningModal from 'components/TokenWarningModal'\r\nimport SyrupWarningModal from 'components/SyrupWarningModal'\r\nimport ProgressSteps from 'components/ProgressSteps'\r\n\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\r\nimport { useSwapCallback } from 'hooks/useSwapCallback'\r\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\r\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { LinkStyledButton, TYPE } from 'components/Shared'\r\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\r\nimport Loader from 'components/Loader'\r\nimport { TranslateString } from 'utils/translateTextHelpers'\r\nimport PageHeader from 'components/PageHeader'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport AppBody from '../AppBody'\r\n\r\nconst { main: Main } = TYPE\r\n\r\nconst Swap = () => {\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\r\n  const [isSyrup, setIsSyrup] = useState<boolean>(false)\r\n  const [syrupTransactionType, setSyrupTransactionType] = useState<string>('')\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency]\r\n  )\r\n  const handleConfirmTokenWarning = useCallback(() => {\r\n    setDismissTokenWarning(true)\r\n  }, [])\r\n\r\n  const handleConfirmSyrupWarning = useCallback(() => {\r\n    setIsSyrup(false)\r\n    setSyrupTransactionType('')\r\n  }, [])\r\n\r\n  const { account } = useActiveWeb3React()\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [deadline] = useUserDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\r\n    currencies[Field.INPUT],\r\n    currencies[Field.OUTPUT],\r\n    typedValue\r\n  )\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = v2Trade\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput]\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput]\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    showConfirm: boolean\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    showConfirm: false,\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\r\n  )\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\r\n    trade,\r\n    allowedSlippage,\r\n    deadline,\r\n    recipient\r\n  )\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState((prevState) => ({\r\n          ...prevState,\r\n          attemptingTxn: false,\r\n          swapErrorMessage: undefined,\r\n          txHash: hash,\r\n        }))\r\n      })\r\n      .catch((error) => {\r\n        setSwapState((prevState) => ({\r\n          ...prevState,\r\n          attemptingTxn: false,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        }))\r\n      })\r\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\r\n\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [onUserInput, txHash, setSwapState])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\r\n  }, [trade])\r\n\r\n  // This will check to see if the user has selected Syrup to either buy or sell.\r\n  // If so, they will be alerted with a warning message.\r\n  const checkForSyrup = useCallback(\r\n    (selected: string, purchaseType: string) => {\r\n      if (selected === 'syrup') {\r\n        setIsSyrup(true)\r\n        setSyrupTransactionType(purchaseType)\r\n      }\r\n    },\r\n    [setIsSyrup, setSyrupTransactionType]\r\n  )\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n      if (inputCurrency.symbol.toLowerCase() === 'syrup') {\r\n        checkForSyrup(inputCurrency.symbol.toLowerCase(), 'Selling')\r\n      }\r\n    },\r\n    [onCurrencySelection, setApprovalSubmitted, checkForSyrup]\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    if (maxAmountInput) {\r\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n    }\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => {\r\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\r\n      if (outputCurrency.symbol.toLowerCase() === 'syrup') {\r\n        checkForSyrup(outputCurrency.symbol.toLowerCase(), 'Buying')\r\n      }\r\n    },\r\n    [onCurrencySelection, checkForSyrup]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <TokenWarningModal\r\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\r\n        tokens={urlLoadedTokens}\r\n        onConfirm={handleConfirmTokenWarning}\r\n      />\r\n      <SyrupWarningModal\r\n        isOpen={isSyrup}\r\n        transactionType={syrupTransactionType}\r\n        onConfirm={handleConfirmSyrupWarning}\r\n      />\r\n      <CardNav />\r\n      <AppBody>\r\n        <Wrapper id=\"swap-page\">\r\n          <ConfirmSwapModal\r\n            isOpen={showConfirm}\r\n            trade={trade}\r\n            originalTrade={tradeToConfirm}\r\n            onAcceptChanges={handleAcceptChanges}\r\n            attemptingTxn={attemptingTxn}\r\n            txHash={txHash}\r\n            recipient={recipient}\r\n            allowedSlippage={allowedSlippage}\r\n            onConfirm={handleSwap}\r\n            swapErrorMessage={swapErrorMessage}\r\n            onDismiss={handleConfirmDismiss}\r\n          />\r\n          <PageHeader title=\"Exchange\" description=\"Trade tokens in an instant\" />\r\n          <CardBody>\r\n            <AutoColumn gap=\"md\">\r\n              <CurrencyInputPanel\r\n                label={\r\n                  independentField === Field.OUTPUT && !showWrap && trade\r\n                    ? 'From (estimated)'\r\n                    : TranslateString(76, 'From')\r\n                }\r\n                value={formattedAmounts[Field.INPUT]}\r\n                showMaxButton={!atMaxAmountInput}\r\n                currency={currencies[Field.INPUT]}\r\n                onUserInput={handleTypeInput}\r\n                onMax={handleMaxInput}\r\n                onCurrencySelect={handleInputSelect}\r\n                otherCurrency={currencies[Field.OUTPUT]}\r\n                id=\"swap-currency-input\"\r\n              />\r\n              <AutoColumn justify=\"space-between\">\r\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                  <ArrowWrapper clickable>\r\n                    <IconButton\r\n                      variant=\"tertiary\"\r\n                      onClick={() => {\r\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                        onSwitchTokens()\r\n                      }}\r\n                      style={{ borderRadius: '50%' }}\r\n                      size=\"sm\"\r\n                    >\r\n                      <ArrowDownIcon color=\"primary\" width=\"24px\" />\r\n                    </IconButton>\r\n                  </ArrowWrapper>\r\n                  {recipient === null && !showWrap && isExpertMode ? (\r\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                      + Add a send (optional)\r\n                    </LinkStyledButton>\r\n                  ) : null}\r\n                </AutoRow>\r\n              </AutoColumn>\r\n              <CurrencyInputPanel\r\n                value={formattedAmounts[Field.OUTPUT]}\r\n                onUserInput={handleTypeOutput}\r\n                label={\r\n                  independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : TranslateString(80, 'To')\r\n                }\r\n                showMaxButton={false}\r\n                currency={currencies[Field.OUTPUT]}\r\n                onCurrencySelect={handleOutputSelect}\r\n                otherCurrency={currencies[Field.INPUT]}\r\n                id=\"swap-currency-output\"\r\n              />\r\n\r\n              {recipient !== null && !showWrap ? (\r\n                <>\r\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                    <ArrowWrapper clickable={false}>\r\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\r\n                    </ArrowWrapper>\r\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                      - Remove send\r\n                    </LinkStyledButton>\r\n                  </AutoRow>\r\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n                </>\r\n              ) : null}\r\n\r\n              {showWrap ? null : (\r\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\r\n                  <AutoColumn gap=\"4px\">\r\n                    {Boolean(trade) && (\r\n                      <RowBetween align=\"center\">\r\n                        <Text fontSize=\"14px\">Price</Text>\r\n                        <TradePrice\r\n                          price={trade?.executionPrice}\r\n                          showInverted={showInverted}\r\n                          setShowInverted={setShowInverted}\r\n                        />\r\n                      </RowBetween>\r\n                    )}\r\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\r\n                      <RowBetween align=\"center\">\r\n                        <Text fontSize=\"14px\">Slippage Tolerance</Text>\r\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\r\n                      </RowBetween>\r\n                    )}\r\n                  </AutoColumn>\r\n                </Card>\r\n              )}\r\n            </AutoColumn>\r\n            <BottomGrouping>\r\n              {!account ? (\r\n                <ConnectWalletButton fullWidth />\r\n              ) : showWrap ? (\r\n                <Button disabled={Boolean(wrapInputError)} onClick={onWrap} fullWidth>\r\n                  {wrapInputError ??\r\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n                </Button>\r\n              ) : noRoute && userHasSpecifiedInputOutput ? (\r\n                <GreyCard style={{ textAlign: 'center' }}>\r\n                  <Main mb=\"4px\">Insufficient liquidity for this trade.</Main>\r\n                </GreyCard>\r\n              ) : showApproveFlow ? (\r\n                <RowBetween>\r\n                  <Button\r\n                    onClick={approveCallback}\r\n                    disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                    style={{ width: '48%' }}\r\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\r\n                  >\r\n                    {approval === ApprovalState.PENDING ? (\r\n                      <AutoRow gap=\"6px\" justify=\"center\">\r\n                        Approving <Loader stroke=\"white\" />\r\n                      </AutoRow>\r\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                      'Approved'\r\n                    ) : (\r\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => {\r\n                      if (isExpertMode) {\r\n                        handleSwap()\r\n                      } else {\r\n                        setSwapState({\r\n                          tradeToConfirm: trade,\r\n                          attemptingTxn: false,\r\n                          swapErrorMessage: undefined,\r\n                          showConfirm: true,\r\n                          txHash: undefined,\r\n                        })\r\n                      }\r\n                    }}\r\n                    style={{ width: '48%' }}\r\n                    id=\"swap-button\"\r\n                    disabled={\r\n                      !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                    }\r\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\r\n                  >\r\n                    {priceImpactSeverity > 3 && !isExpertMode\r\n                      ? `Price Impact High`\r\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\r\n                  </Button>\r\n                </RowBetween>\r\n              ) : (\r\n                <Button\r\n                  onClick={() => {\r\n                    if (isExpertMode) {\r\n                      handleSwap()\r\n                    } else {\r\n                      setSwapState({\r\n                        tradeToConfirm: trade,\r\n                        attemptingTxn: false,\r\n                        swapErrorMessage: undefined,\r\n                        showConfirm: true,\r\n                        txHash: undefined,\r\n                      })\r\n                    }\r\n                  }}\r\n                  id=\"swap-button\"\r\n                  disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\r\n                  fullWidth\r\n                >\r\n                  {swapInputError ||\r\n                    (priceImpactSeverity > 3 && !isExpertMode\r\n                      ? `Price Impact Too High`\r\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)}\r\n                </Button>\r\n              )}\r\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\r\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n            </BottomGrouping>\r\n          </CardBody>\r\n        </Wrapper>\r\n      </AppBody>\r\n      <AdvancedSwapDetailsDropdown trade={trade} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Swap\r\n"]},"metadata":{},"sourceType":"module"}