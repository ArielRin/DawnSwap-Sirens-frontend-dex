{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\nimport warning from 'tiny-warning';\nfunction parseSendReturn(sendReturn) {\n  // eslint-disable-next-line no-prototype-builtins\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn;\n}\nexport class NoBscProviderError extends Error {\n  constructor() {\n    super();\n    this.name = this.constructor.name;\n    this.message = 'No BSC provider was found on window.BinanceChain.';\n  }\n}\nexport class UserRejectedRequestError extends Error {\n  constructor() {\n    super();\n    this.name = this.constructor.name;\n    this.message = 'The user rejected the request.';\n  }\n}\nexport class BscConnector extends AbstractConnector {\n  constructor(kwargs) {\n    super(kwargs);\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n  handleChainChanged(chainId) {\n    this.emitUpdate({\n      chainId,\n      provider: window.BinanceChain\n    });\n  }\n  handleAccountsChanged(accounts) {\n    if (accounts.length === 0) {\n      this.emitDeactivate();\n    } else {\n      this.emitUpdate({\n        account: accounts[0]\n      });\n    }\n  }\n  handleClose() {\n    this.emitDeactivate();\n  }\n  handleNetworkChanged(networkId) {\n    this.emitUpdate({\n      chainId: networkId,\n      provider: window.BinanceChain\n    });\n  }\n  async activate() {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError();\n    }\n    if (window.BinanceChain.on) {\n      window.BinanceChain.on('chainChanged', this.handleChainChanged);\n      window.BinanceChain.on('accountsChanged', this.handleAccountsChanged);\n      window.BinanceChain.on('close', this.handleClose);\n      window.BinanceChain.on('networkChanged', this.handleNetworkChanged);\n    }\n    if (window.BinanceChain.isMetaMask) {\n      window.BinanceChain.autoRefreshOnNetworkChange = false;\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account;\n    try {\n      account = await window.BinanceChain.send('eth_requestAccounts').then(sendReturn => parseSendReturn(sendReturn)[0]);\n    } catch (error) {\n      if (error.code === 4001) {\n        throw new UserRejectedRequestError();\n      }\n      warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable');\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await window.BinanceChain.enable().then(sendReturn => sendReturn && parseSendReturn(sendReturn)[0]);\n    }\n    return {\n      provider: window.BinanceChain,\n      ...(account ? {\n        account\n      } : {})\n    };\n  }\n  async getProvider() {\n    return window.BinanceChain;\n  }\n  async getChainId() {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError();\n    }\n    let chainId;\n    try {\n      chainId = await window.BinanceChain.send('eth_chainId').then(parseSendReturn);\n    } catch {\n      warning(false, 'eth_chainId was unsuccessful, falling back to net_version');\n    }\n    if (!chainId) {\n      try {\n        chainId = await window.BinanceChain.send('net_version').then(parseSendReturn);\n      } catch {\n        warning(false, 'net_version was unsuccessful, falling back to net version v2');\n      }\n    }\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn(window.BinanceChain.send({\n          method: 'net_version'\n        }));\n      } catch {\n        warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties');\n      }\n    }\n    if (!chainId) {\n      if (window.BinanceChain.isDapper) {\n        chainId = parseSendReturn(window.BinanceChain.cachedResults.net_version);\n      } else {\n        chainId = window.BinanceChain.chainId || window.BinanceChain.netVersion || window.BinanceChain.networkVersion || window.BinanceChain._chainId;\n      }\n    }\n    return chainId;\n  }\n  async getAccount() {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError();\n    }\n    let account;\n    try {\n      account = await window.BinanceChain.send('eth_accounts').then(sendReturn => parseSendReturn(sendReturn)[0]);\n    } catch {\n      warning(false, 'eth_accounts was unsuccessful, falling back to enable');\n    }\n    if (!account) {\n      try {\n        account = await window.BinanceChain.enable().then(sendReturn => parseSendReturn(sendReturn)[0]);\n      } catch {\n        warning(false, 'enable was unsuccessful, falling back to eth_accounts v2');\n      }\n    }\n    if (!account) {\n      account = parseSendReturn(window.BinanceChain.send({\n        method: 'eth_accounts'\n      }))[0];\n    }\n    return account;\n  }\n  deactivate() {\n    if (window.BinanceChain && window.BinanceChain.removeListener) {\n      window.BinanceChain.removeListener('chainChanged', this.handleChainChanged);\n      window.BinanceChain.removeListener('accountsChanged', this.handleAccountsChanged);\n      window.BinanceChain.removeListener('close', this.handleClose);\n      window.BinanceChain.removeListener('networkChanged', this.handleNetworkChanged);\n    }\n  }\n  async isAuthorized() {\n    if (!window.BinanceChain) {\n      return false;\n    }\n    try {\n      return await window.BinanceChain.send('eth_accounts').then(sendReturn => {\n        if (parseSendReturn(sendReturn).length > 0) {\n          return true;\n        }\n        return false;\n      });\n    } catch {\n      return false;\n    }\n  }\n}","map":{"version":3,"names":["AbstractConnector","warning","parseSendReturn","sendReturn","hasOwnProperty","result","NoBscProviderError","Error","constructor","name","message","UserRejectedRequestError","BscConnector","kwargs","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","chainId","emitUpdate","provider","window","BinanceChain","accounts","length","emitDeactivate","account","networkId","activate","on","isMetaMask","autoRefreshOnNetworkChange","send","then","error","code","enable","getProvider","getChainId","method","isDapper","cachedResults","net_version","netVersion","networkVersion","_chainId","getAccount","deactivate","removeListener","isAuthorized"],"sources":["C:/projects/panther-frontend-dex1/src/connectors/bsc/bscConnector.ts"],"sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport warning from 'tiny-warning'\r\n\r\nimport { SendReturnResult, SendReturn, Send, SendOld } from './types'\r\n\r\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\r\n  // eslint-disable-next-line no-prototype-builtins\r\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn\r\n}\r\n\r\nexport class NoBscProviderError extends Error {\r\n  public constructor() {\r\n    super()\r\n    this.name = this.constructor.name\r\n    this.message = 'No BSC provider was found on window.BinanceChain.'\r\n  }\r\n}\r\n\r\nexport class UserRejectedRequestError extends Error {\r\n  public constructor() {\r\n    super()\r\n    this.name = this.constructor.name\r\n    this.message = 'The user rejected the request.'\r\n  }\r\n}\r\n\r\nexport class BscConnector extends AbstractConnector {\r\n  constructor(kwargs: AbstractConnectorArguments) {\r\n    super(kwargs)\r\n\r\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\r\n    this.handleChainChanged = this.handleChainChanged.bind(this)\r\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\r\n    this.handleClose = this.handleClose.bind(this)\r\n  }\r\n\r\n  private handleChainChanged(chainId: string | number): void {\r\n    this.emitUpdate({ chainId, provider: window.BinanceChain })\r\n  }\r\n\r\n  private handleAccountsChanged(accounts: string[]): void {\r\n    if (accounts.length === 0) {\r\n      this.emitDeactivate()\r\n    } else {\r\n      this.emitUpdate({ account: accounts[0] })\r\n    }\r\n  }\r\n\r\n  private handleClose(): void {\r\n    this.emitDeactivate()\r\n  }\r\n\r\n  private handleNetworkChanged(networkId: string | number): void {\r\n    this.emitUpdate({ chainId: networkId, provider: window.BinanceChain })\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    if (!window.BinanceChain) {\r\n      throw new NoBscProviderError()\r\n    }\r\n\r\n    if (window.BinanceChain.on) {\r\n      window.BinanceChain.on('chainChanged', this.handleChainChanged)\r\n      window.BinanceChain.on('accountsChanged', this.handleAccountsChanged)\r\n      window.BinanceChain.on('close', this.handleClose)\r\n      window.BinanceChain.on('networkChanged', this.handleNetworkChanged)\r\n    }\r\n\r\n    if ((window.BinanceChain as any).isMetaMask) {\r\n      (window.BinanceChain as any).autoRefreshOnNetworkChange = false\r\n    }\r\n\r\n    // try to activate + get account via eth_requestAccounts\r\n    let account\r\n    try {\r\n      account = await (window.BinanceChain.send as Send)('eth_requestAccounts').then(\r\n        (sendReturn) => parseSendReturn(sendReturn)[0]\r\n      )\r\n    } catch (error) {\r\n      if ((error as any).code === 4001) {\r\n        throw new UserRejectedRequestError()\r\n      }\r\n      warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable')\r\n    }\r\n\r\n    // if unsuccessful, try enable\r\n    if (!account) {\r\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\r\n      account = await window.BinanceChain.enable().then((sendReturn) => sendReturn && parseSendReturn(sendReturn)[0])\r\n    }\r\n\r\n    return { provider: window.BinanceChain, ...(account ? { account } : {}) }\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return window.BinanceChain\r\n  }\r\n\r\n  public async getChainId(): Promise<number | string> {\r\n    if (!window.BinanceChain) {\r\n      throw new NoBscProviderError()\r\n    }\r\n\r\n    let chainId\r\n    try {\r\n      chainId = await (window.BinanceChain.send as Send)('eth_chainId').then(parseSendReturn)\r\n    } catch {\r\n      warning(false, 'eth_chainId was unsuccessful, falling back to net_version')\r\n    }\r\n\r\n    if (!chainId) {\r\n      try {\r\n        chainId = await (window.BinanceChain.send as Send)('net_version').then(parseSendReturn)\r\n      } catch {\r\n        warning(false, 'net_version was unsuccessful, falling back to net version v2')\r\n      }\r\n    }\r\n\r\n    if (!chainId) {\r\n      try {\r\n        chainId = parseSendReturn((window.BinanceChain.send as SendOld)({ method: 'net_version' }))\r\n      } catch {\r\n        warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties')\r\n      }\r\n    }\r\n\r\n    if (!chainId) {\r\n      if ((window.BinanceChain as any).isDapper) {\r\n        chainId = parseSendReturn((window.BinanceChain as any).cachedResults.net_version)\r\n      } else {\r\n        chainId =\r\n          (window.BinanceChain as any).chainId ||\r\n          (window.BinanceChain as any).netVersion ||\r\n          (window.BinanceChain as any).networkVersion ||\r\n          (window.BinanceChain as any)._chainId\r\n      }\r\n    }\r\n\r\n    return chainId\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    if (!window.BinanceChain) {\r\n      throw new NoBscProviderError()\r\n    }\r\n\r\n    let account\r\n    try {\r\n      account = await (window.BinanceChain.send as Send)('eth_accounts').then(\r\n        (sendReturn) => parseSendReturn(sendReturn)[0]\r\n      )\r\n    } catch {\r\n      warning(false, 'eth_accounts was unsuccessful, falling back to enable')\r\n    }\r\n\r\n    if (!account) {\r\n      try {\r\n        account = await window.BinanceChain.enable().then((sendReturn) => parseSendReturn(sendReturn)[0])\r\n      } catch {\r\n        warning(false, 'enable was unsuccessful, falling back to eth_accounts v2')\r\n      }\r\n    }\r\n\r\n    if (!account) {\r\n      account = parseSendReturn((window.BinanceChain.send as SendOld)({ method: 'eth_accounts' }))[0]\r\n    }\r\n\r\n    return account\r\n  }\r\n\r\n  public deactivate() {\r\n    if (window.BinanceChain && window.BinanceChain.removeListener) {\r\n      window.BinanceChain.removeListener('chainChanged', this.handleChainChanged)\r\n      window.BinanceChain.removeListener('accountsChanged', this.handleAccountsChanged)\r\n      window.BinanceChain.removeListener('close', this.handleClose)\r\n      window.BinanceChain.removeListener('networkChanged', this.handleNetworkChanged)\r\n    }\r\n  }\r\n\r\n  public async isAuthorized(): Promise<boolean> {\r\n    if (!window.BinanceChain) {\r\n      return false\r\n    }\r\n\r\n    try {\r\n      return await (window.BinanceChain.send as Send)('eth_accounts').then((sendReturn) => {\r\n        if (parseSendReturn(sendReturn).length > 0) {\r\n          return true\r\n        }\r\n        return false\r\n      })\r\n    } catch {\r\n      return false\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}