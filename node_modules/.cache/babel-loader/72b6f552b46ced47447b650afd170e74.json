{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\panther-frontend-dex1\\\\src\\\\components\\\\SearchModal\\\\CurrencySearchModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useLast from '../../hooks/useLast';\nimport { useSelectedListUrl } from '../../state/lists/hooks';\nimport Modal from '../Modal';\nimport { CurrencySearch } from './CurrencySearch';\nimport { ListSelect } from './ListSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrencySearchModal(_ref) {\n  _s();\n  let {\n    isOpen,\n    onDismiss,\n    onCurrencySelect,\n    selectedCurrency,\n    otherSelectedCurrency\n  } = _ref;\n  const [listView, setListView] = useState(false);\n  const lastOpen = useLast(isOpen);\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setListView(false);\n    }\n  }, [isOpen, lastOpen]);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]);\n  const handleClickChangeList = useCallback(() => {\n    setListView(true);\n  }, []);\n  const handleClickBack = useCallback(() => {\n    setListView(false);\n  }, []);\n  const selectedListUrl = useSelectedListUrl();\n  const noListSelected = !selectedListUrl;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    maxHeight: 90,\n    minHeight: listView ? 40 : noListSelected ? 0 : 80,\n    children: listView ? /*#__PURE__*/_jsxDEV(ListSelect, {\n      onDismiss: onDismiss,\n      onBack: handleClickBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : noListSelected ? /*#__PURE__*/_jsxDEV(CurrencySearch, {\n      isOpen: isOpen,\n      onDismiss: onDismiss,\n      onCurrencySelect: handleCurrencySelect,\n      onChangeList: handleClickChangeList,\n      selectedCurrency: selectedCurrency,\n      otherSelectedCurrency: otherSelectedCurrency,\n      showCommonBases: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CurrencySearch, {\n      isOpen: isOpen,\n      onDismiss: onDismiss,\n      onCurrencySelect: handleCurrencySelect,\n      onChangeList: handleClickChangeList,\n      selectedCurrency: selectedCurrency,\n      otherSelectedCurrency: otherSelectedCurrency,\n      showCommonBases: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(CurrencySearchModal, \"49pngoo6sZT9IgMEc08jsavO524=\", false, function () {\n  return [useLast, useSelectedListUrl];\n});\n_c = CurrencySearchModal;\nvar _c;\n$RefreshReg$(_c, \"CurrencySearchModal\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useLast","useSelectedListUrl","Modal","CurrencySearch","ListSelect","jsxDEV","_jsxDEV","CurrencySearchModal","_ref","_s","isOpen","onDismiss","onCurrencySelect","selectedCurrency","otherSelectedCurrency","listView","setListView","lastOpen","handleCurrencySelect","currency","handleClickChangeList","handleClickBack","selectedListUrl","noListSelected","maxHeight","minHeight","children","onBack","fileName","_jsxFileName","lineNumber","columnNumber","onChangeList","showCommonBases","_c","$RefreshReg$"],"sources":["C:/projects/panther-frontend-dex1/src/components/SearchModal/CurrencySearchModal.tsx"],"sourcesContent":["import { Currency } from '@pantherswap-libs/sdk'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport useLast from '../../hooks/useLast'\r\nimport { useSelectedListUrl } from '../../state/lists/hooks'\r\nimport Modal from '../Modal'\r\nimport { CurrencySearch } from './CurrencySearch'\r\nimport { ListSelect } from './ListSelect'\r\n\r\ninterface CurrencySearchModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  // eslint-disable-next-line react/no-unused-prop-types\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencySearchModal({\r\n  isOpen,\r\n  onDismiss,\r\n  onCurrencySelect,\r\n  selectedCurrency,\r\n  otherSelectedCurrency,\r\n}: CurrencySearchModalProps) {\r\n  const [listView, setListView] = useState<boolean>(false)\r\n  const lastOpen = useLast(isOpen)\r\n\r\n  useEffect(() => {\r\n    if (isOpen && !lastOpen) {\r\n      setListView(false)\r\n    }\r\n  }, [isOpen, lastOpen])\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      onDismiss()\r\n    },\r\n    [onDismiss, onCurrencySelect]\r\n  )\r\n\r\n  const handleClickChangeList = useCallback(() => {\r\n    setListView(true)\r\n  }, [])\r\n  const handleClickBack = useCallback(() => {\r\n    setListView(false)\r\n  }, [])\r\n\r\n  const selectedListUrl = useSelectedListUrl()\r\n  const noListSelected = !selectedListUrl\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90} minHeight={listView ? 40 : noListSelected ? 0 : 80}>\r\n      {listView ? (\r\n        <ListSelect onDismiss={onDismiss} onBack={handleClickBack} />\r\n      ) : noListSelected ? (\r\n        <CurrencySearch\r\n          isOpen={isOpen}\r\n          onDismiss={onDismiss}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onChangeList={handleClickChangeList}\r\n          selectedCurrency={selectedCurrency}\r\n          otherSelectedCurrency={otherSelectedCurrency}\r\n          showCommonBases={false}\r\n        />\r\n      ) : (\r\n        <CurrencySearch\r\n          isOpen={isOpen}\r\n          onDismiss={onDismiss}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onChangeList={handleClickChangeList}\r\n          selectedCurrency={selectedCurrency}\r\n          otherSelectedCurrency={otherSelectedCurrency}\r\n          showCommonBases={false}\r\n        />\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,OAAOC,KAAK,MAAM,UAAU;AAC5B,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,UAAU,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAYzC,eAAe,SAASC,mBAAmBA,CAAAC,IAAA,EAMd;EAAAC,EAAA;EAAA,IANe;IAC1CC,MAAM;IACNC,SAAS;IACTC,gBAAgB;IAChBC,gBAAgB;IAChBC;EACwB,CAAC,GAAAN,IAAA;EACzB,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAU,KAAK,CAAC;EACxD,MAAMkB,QAAQ,GAAGjB,OAAO,CAACU,MAAM,CAAC;EAEhCZ,SAAS,CAAC,MAAM;IACd,IAAIY,MAAM,IAAI,CAACO,QAAQ,EAAE;MACvBD,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC,EAAE,CAACN,MAAM,EAAEO,QAAQ,CAAC,CAAC;EAEtB,MAAMC,oBAAoB,GAAGrB,WAAW,CACrCsB,QAAkB,IAAK;IACtBP,gBAAgB,CAACO,QAAQ,CAAC;IAC1BR,SAAS,CAAC,CAAC;EACb,CAAC,EACD,CAACA,SAAS,EAAEC,gBAAgB,CAC9B,CAAC;EAED,MAAMQ,qBAAqB,GAAGvB,WAAW,CAAC,MAAM;IAC9CmB,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMK,eAAe,GAAGxB,WAAW,CAAC,MAAM;IACxCmB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,eAAe,GAAGrB,kBAAkB,CAAC,CAAC;EAC5C,MAAMsB,cAAc,GAAG,CAACD,eAAe;EAEvC,oBACEhB,OAAA,CAACJ,KAAK;IAACQ,MAAM,EAAEA,MAAO;IAACC,SAAS,EAAEA,SAAU;IAACa,SAAS,EAAE,EAAG;IAACC,SAAS,EAAEV,QAAQ,GAAG,EAAE,GAAGQ,cAAc,GAAG,CAAC,GAAG,EAAG;IAAAG,QAAA,EAC5GX,QAAQ,gBACPT,OAAA,CAACF,UAAU;MAACO,SAAS,EAAEA,SAAU;MAACgB,MAAM,EAAEN;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAC3DR,cAAc,gBAChBjB,OAAA,CAACH,cAAc;MACbO,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBC,gBAAgB,EAAEM,oBAAqB;MACvCc,YAAY,EAAEZ,qBAAsB;MACpCP,gBAAgB,EAAEA,gBAAiB;MACnCC,qBAAqB,EAAEA,qBAAsB;MAC7CmB,eAAe,EAAE;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,gBAEFzB,OAAA,CAACH,cAAc;MACbO,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBC,gBAAgB,EAAEM,oBAAqB;MACvCc,YAAY,EAAEZ,qBAAsB;MACpCP,gBAAgB,EAAEA,gBAAiB;MACnCC,qBAAqB,EAAEA,qBAAsB;MAC7CmB,eAAe,EAAE;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEZ;AAACtB,EAAA,CA7DuBF,mBAAmB;EAAA,QAQxBP,OAAO,EAuBAC,kBAAkB;AAAA;AAAAiC,EAAA,GA/BpB3B,mBAAmB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}