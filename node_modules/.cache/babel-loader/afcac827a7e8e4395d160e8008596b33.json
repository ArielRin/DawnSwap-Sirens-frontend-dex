{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { TranslationsContext } from 'hooks/TranslationsContext';\nimport { getTranslation } from 'utils/translateTextHelpers';\nconst useI18n = () => {\n  _s();\n  const {\n    translations\n  } = useContext(TranslationsContext);\n  return (translationId, fallback) => {\n    if (translations[0] === 'error') {\n      return fallback;\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback);\n    }\n    return fallback;\n  };\n};\n_s(useI18n, \"hOCbFljQBxvGM0d3yrZWVY+RT6k=\");\nexport default useI18n;","map":{"version":3,"names":["useContext","TranslationsContext","getTranslation","useI18n","_s","translations","translationId","fallback","length"],"sources":["C:/projects/panther-frontend-dex1/src/hooks/useI18n.ts"],"sourcesContent":["import { useContext } from 'react'\r\nimport { TranslationsContext } from 'hooks/TranslationsContext'\r\nimport { getTranslation } from 'utils/translateTextHelpers'\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string) => {\r\n    if (translations[0] === 'error') {\r\n      return fallback\r\n    }\r\n    if (translations.length > 0) {\r\n      return getTranslation(translations, translationId, fallback)\r\n    }\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,SAASC,cAAc,QAAQ,4BAA4B;AAE3D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAa,CAAC,GAAGL,UAAU,CAACC,mBAAmB,CAAC;EAExD,OAAO,CAACK,aAAqB,EAAEC,QAAgB,KAAK;IAClD,IAAIF,YAAY,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;MAC/B,OAAOE,QAAQ;IACjB;IACA,IAAIF,YAAY,CAACG,MAAM,GAAG,CAAC,EAAE;MAC3B,OAAON,cAAc,CAACG,YAAY,EAAEC,aAAa,EAAEC,QAAQ,CAAC;IAC9D;IACA,OAAOA,QAAQ;EACjB,CAAC;AACH,CAAC;AAAAH,EAAA,CAZKD,OAAO;AAcb,eAAeA,OAAO"},"metadata":{},"sourceType":"module"}