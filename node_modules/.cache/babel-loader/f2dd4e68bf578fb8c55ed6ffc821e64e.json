{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\nimport invariant from 'tiny-invariant';\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nvar chainIdToNetwork = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan',\n  100: 'xdai',\n  30: 'orchid',\n  31: 'orchidTestnet',\n  99: 'core',\n  77: 'sokol',\n  61: 'classic',\n  8: 'ubiq',\n  108: 'thundercore',\n  18: 'thundercoreTestnet',\n  163: 'lightstreams',\n  122: 'fuse',\n  1337: 'devChain',\n  31337: 'hardhat',\n  137: 'matic',\n  80001: 'maticMumbai'\n};\nvar PortisConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(PortisConnector, _AbstractConnector);\n  function PortisConnector(_ref) {\n    var _this;\n    var dAppId = _ref.dAppId,\n      networks = _ref.networks,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config;\n    var chainIds = networks.map(function (n) {\n      return typeof n === 'number' ? n : Number(n.chainId);\n    });\n    !chainIds.every(function (c) {\n      return !!chainIdToNetwork[c];\n    }) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"One or more unsupported networks \" + networks) : invariant(false) : void 0;\n    _this = _AbstractConnector.call(this, {\n      supportedChainIds: chainIds\n    }) || this;\n    _this.dAppId = dAppId;\n    _this.networks = networks;\n    _this.config = config;\n    _this.handleOnLogout = _this.handleOnLogout.bind(_assertThisInitialized(_this));\n    _this.handleOnActiveWalletChanged = _this.handleOnActiveWalletChanged.bind(_assertThisInitialized(_this));\n    _this.handleOnError = _this.handleOnError.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  var _proto = PortisConnector.prototype;\n  _proto.handleOnLogout = function handleOnLogout() {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'onLogout' event\");\n    }\n    this.emitDeactivate();\n  };\n  _proto.handleOnActiveWalletChanged = function handleOnActiveWalletChanged(account) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'onActiveWalletChanged' event with payload\", account);\n    }\n    this.emitUpdate({\n      account: account\n    });\n  };\n  _proto.handleOnError = function handleOnError(error) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'onError' event\");\n    }\n    this.emitError(error);\n  };\n  _proto.activate = function activate() {\n    try {\n      var _this3 = this;\n      var _temp3 = function _temp3() {\n        _this3.portis.onLogout(_this3.handleOnLogout);\n        _this3.portis.onActiveWalletChanged(_this3.handleOnActiveWalletChanged);\n        _this3.portis.onError(_this3.handleOnError);\n        return Promise.resolve(_this3.portis.provider.enable().then(function (accounts) {\n          return accounts[0];\n        })).then(function (account) {\n          return {\n            provider: _this3.portis.provider,\n            account: account\n          };\n        });\n      };\n      var _temp4 = function () {\n        if (!_this3.portis) {\n          return Promise.resolve(import('@portis/web3').then(function (m) {\n            var _m$default;\n            return (_m$default = m == null ? void 0 : m[\"default\"]) != null ? _m$default : m;\n          })).then(function (Portis) {\n            _this3.portis = new Portis(_this3.dAppId, typeof _this3.networks[0] === 'number' ? chainIdToNetwork[_this3.networks[0]] : _this3.networks[0], _this3.config);\n          });\n        }\n      }();\n      return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this5 = this;\n      return Promise.resolve(_this5.portis.provider);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this7 = this;\n      return Promise.resolve(_this7.portis.provider.send('eth_chainId'));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this9 = this;\n      return Promise.resolve(_this9.portis.provider.send('eth_accounts').then(function (accounts) {\n        return accounts[0];\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.deactivate = function deactivate() {\n    this.portis.onLogout(function () {});\n    this.portis.onActiveWalletChanged(function () {});\n    this.portis.onError(function () {});\n  };\n  _proto.changeNetwork = function changeNetwork(newNetwork, isGasRelayEnabled) {\n    try {\n      var _this11 = this;\n      if (typeof newNetwork === 'number') {\n        !!!chainIdToNetwork[newNetwork] ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Invalid chainId \" + newNetwork) : invariant(false) : void 0;\n        _this11.portis.changeNetwork(chainIdToNetwork[newNetwork], isGasRelayEnabled);\n        _this11.emitUpdate({\n          chainId: newNetwork\n        });\n      } else {\n        _this11.portis.changeNetwork(newNetwork, isGasRelayEnabled);\n        _this11.emitUpdate({\n          chainId: Number(newNetwork.chainId)\n        });\n      }\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.close = function close() {\n    try {\n      var _this13 = this;\n      return Promise.resolve(_this13.portis.logout()).then(function () {\n        _this13.emitDeactivate();\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  return PortisConnector;\n}(AbstractConnector);\nexport { PortisConnector };","map":{"version":3,"sources":["../src/index.ts"],"names":["chainIdToNetwork","PortisConnector","AbstractConnector","dAppId","networks","config","chainIds","map","n","Number","chainId","every","c","supportedChainIds","handleOnLogout","bind","handleOnActiveWalletChanged","handleOnError","console","log","emitDeactivate","account","emitUpdate","error","emitError","activate","portis","Portis","then","m","onLogout","onActiveWalletChanged","onError","provider","enable","accounts","getProvider","getChainId","send","getAccount","deactivate","changeNetwork","newNetwork","isGasRelayEnabled","close","logout"],"mappings":";;;;;;;;;;;;;;;;;;;;AAIA,IAAMA,gBAAgB,GAAkC;EACtD,CAAA,EAAG,SADmD;EAEtD,CAAA,EAAG,SAFmD;EAGtD,CAAA,EAAG,SAHmD;EAItD,CAAA,EAAG,QAJmD;EAKtD,EAAA,EAAI,OALkD;EAMtD,GAAA,EAAK,MANiD;EAOtD,EAAA,EAAI,QAPkD;EAQtD,EAAA,EAAI,eARkD;EAStD,EAAA,EAAI,MATkD;EAUtD,EAAA,EAAI,OAVkD;EAWtD,EAAA,EAAI,SAXkD;EAYtD,CAAA,EAAG,MAZmD;EAatD,GAAA,EAAK,aAbiD;EActD,EAAA,EAAI,oBAdkD;EAetD,GAAA,EAAK,cAfiD;EAgBtD,GAAA,EAAK,MAhBiD;EAiBtD,IAAA,EAAM,UAjBgD;EAkBtD,KAAA,EAAO,SAlB+C;EAmBtD,GAAA,EAAK,OAnBiD;EAoBtD,KAAA,EAAO;AApB+C,CAAxD;IA+BaC,eAAb,GAAA,aAAA,UAAA,kBAAA,EAAA;EAAA,cAAA,CAAA,eAAA,EAAA,kBAAA,CAAA;EAOE,SAAA,eAAA,CAAA,IAAA,EAAA;;QAAcE,MAAAA,GAAAA,IAAAA,CAAAA,MAAAA;MAAQC,QAAAA,GAAAA,IAAAA,CAAAA,QAAAA;yBAAUC,MAAAA;MAAAA,MAAAA,GAAAA,WAAAA,KAAAA,KAAAA,CAAAA,GAAS,CAAA,CAAA,GAAA,WAAA;IACvC,IAAMC,QAAQ,GAAG,QAAQ,CAACC,GAAT,CAAa,UAACC,CAAD,EAAA;MAAA,OAAgB,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAxB,GAA4BC,MAAM,CAACD,CAAC,CAACE,OAAH,CAAlD;IAAA,CAAb,CAAjB;IACA,CACEJ,QAAQ,CAACK,KAATL,CAAe,UAACM,CAAD,EAAA;MAAA,OAAgB,CAAC,CAACZ,gBAAgB,CAACY,CAAD,CAAlC;IAAA,CAAfN,CADF,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,SAAS,CAAA,KAAA,EAAA,mCAAA,GAE6BF,QAF7B,CAAT,GAAA,SAAS,CAAA,KAAA,CAAT,GAAA,KAAA,CAAA;IAIA,KAAA,GAAA,kBAAA,CAAA,IAAA,CAAA,IAAA,EAAM;MAAES,iBAAiB,EAAEP;IAArB,CAAN,CAAA,IAAA,IAAA;IAEA,KAAA,CAAKH,MAAL,GAAcA,MAAd;IACA,KAAA,CAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAA,CAAKC,MAAL,GAAcA,MAAd;IAEA,KAAA,CAAKS,cAAL,GAAsB,KAAA,CAAKA,cAAL,CAAoBC,IAApB,CAAA,sBAAA,CAAA,KAAA,CAAA,CAAtB;IACA,KAAA,CAAKC,2BAAL,GAAmC,KAAA,CAAKA,2BAAL,CAAiCD,IAAjC,CAAA,sBAAA,CAAA,KAAA,CAAA,CAAnC;IACA,KAAA,CAAKE,aAAL,GAAqB,KAAA,CAAKA,aAAL,CAAmBF,IAAnB,CAAA,sBAAA,CAAA,KAAA,CAAA,CAArB;;EACD;EAtBH,IAAA,MAAA,GAAA,eAAA,CAAA,SAAA;EAAA,MAAA,CAwBUD,cAxBV,GAwBUA,SAAAA,cAAAA,CAAAA,EAAAA;IACN,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;MACXI,OAAO,CAACC,GAARD,CAAY,2BAAZA,CAAAA;IACD;IACD,IAAA,CAAKE,cAAL,CAAA,CAAA;EACD,CA7BH;EAAA,MAAA,CA+BUJ,2BA/BV,GA+BUA,SAAAA,2BAAAA,CAA4BK,OAA5BL,EAAAA;IACN,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;MACXE,OAAO,CAACC,GAARD,CAAY,qDAAZA,EAAmEG,OAAnEH,CAAAA;IACD;IACD,IAAA,CAAKI,UAAL,CAAgB;MAAED,OAAO,EAAPA;IAAF,CAAhB,CAAA;EACD,CApCH;EAAA,MAAA,CAsCUJ,aAtCV,GAsCUA,SAAAA,aAAAA,CAAcM,KAAdN,EAAAA;IACN,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;MACXC,OAAO,CAACC,GAARD,CAAY,0BAAZA,CAAAA;IACD;IACD,IAAA,CAAKM,SAAL,CAAeD,KAAf,CAAA;EACD,CA3CH;EAAA,MAAA,CA6CeE,QA7Cf,GAAA,SAAA,QAAA,CAAA,EAAA;IAAA,IAAA;mBA8CS,IAAA;;QASL,MAAA,CAAKC,MAAL,CAAYI,QAAZ,CAAqB,MAAA,CAAKhB,cAA1B,CAAA;QACA,MAAA,CAAKY,MAAL,CAAYK,qBAAZ,CAAkC,MAAA,CAAKf,2BAAvC,CAAA;QACA,MAAA,CAAKU,MAAL,CAAYM,OAAZ,CAAoB,MAAA,CAAKf,aAAzB,CAAA;+BAEsB,MAAA,CAAKS,MAAL,CAAYO,QAAZ,CAAqBC,MAArB,CAAA,CAAA,CAA8BN,IAA9B,CAAmC,UAACO,QAAD,EAAA;UAAA,OAAgCA,QAAQ,CAAC,CAAD,CAAxC;QAAA,CAAnC,CAAA,CAAA,CAAA,IAAA,CAAA,UAAhBd,OAAAA,EAAAA;UAEN,OAAO;YAAEY,QAAQ,EAAE,MAAA,CAAKP,MAAL,CAAYO,QAAxB;YAAkCZ,OAAO,EAAPA;UAAlC,CAAP;;;;YAfI,CAAC,MAAA,CAAKK,MAAAA,EAAAA;iCACa,MAAA,CAAO,cAAP,CAAA,CAAuBE,IAAvB,CAA4B,UAAA,CAAC,EAAA;YAAA,IAAA,UAAA;YAAA,OAAA,CAAA,UAAA,GAAIC,CAAJ,IAAA,IAAA,GAAA,KAAA,CAAA,GAAIA,CAAC,CAAA,SAAA,CAAL,KAAA,IAAA,GAAA,UAAA,GAAkBA,CAAlB;UAAA,CAA7B,CAAA,CAAA,CAAA,IAAA,CAAA,UAAfF,MAAAA,EAAAA;YACN,MAAA,CAAKD,MAAL,GAAc,IAAIC,MAAJ,CACZ,MAAA,CAAKxB,MADO,EAEZ,OAAO,MAAA,CAAKC,QAAL,CAAc,CAAd,CAAP,KAA4B,QAA5B,GAAuCJ,gBAAgB,CAAC,MAAA,CAAKI,QAAL,CAAc,CAAd,CAAD,CAAvD,GAA6E,MAAA,CAAKA,QAAL,CAAc,CAAd,CAFjE,EAGZ,MAAA,CAAKC,MAHO,CAAd;;;;;IAcH,CA9DH,CAAA,OAAA,CAAA,EAAA;MAAA,OAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;IAAA;EAAA,CAAA;EAAA,MAAA,CAgEe+B,WAhEf,GAAA,SAAA,WAAA,CAAA,EAAA;IAAA,IAAA;mBAiEW,IAAA;MAAP,OAAA,OAAA,CAAA,OAAA,CAAO,MAAA,CAAKV,MAAL,CAAYO,QAAnB,CAAA;IACD,CAlEH,CAAA,OAAA,CAAA,EAAA;MAAA,OAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;IAAA;EAAA,CAAA;EAAA,MAAA,CAoEeI,UApEf,GAAA,SAAA,UAAA,CAAA,EAAA;IAAA,IAAA;mBAqEW,IAAA;MAAP,OAAA,OAAA,CAAA,OAAA,CAAO,MAAA,CAAKX,MAAL,CAAYO,QAAZ,CAAqBK,IAArB,CAA0B,aAA1B,CAAP,CAAA;IACD,CAtEH,CAAA,OAAA,CAAA,EAAA;MAAA,OAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;IAAA;EAAA,CAAA;EAAA,MAAA,CAwEeC,UAxEf,GAAA,SAAA,UAAA,CAAA,EAAA;IAAA,IAAA;mBAyEW,IAAA;MAAP,OAAA,OAAA,CAAA,OAAA,CAAO,MAAA,CAAKb,MAAL,CAAYO,QAAZ,CAAqBK,IAArB,CAA0B,cAA1B,CAAA,CAA0CV,IAA1C,CAA+C,UAACO,QAAD,EAAA;QAAA,OAAgCA,QAAQ,CAAC,CAAD,CAAxC;MAAA,CAA/C,CAAP,CAAA;IACD,CA1EH,CAAA,OAAA,CAAA,EAAA;MAAA,OAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;IAAA;EAAA,CAAA;EAAA,MAAA,CA4ESK,UA5ET,GA4ESA,SAAAA,UAAAA,CAAAA,EAAAA;IACL,IAAA,CAAKd,MAAL,CAAYI,QAAZ,CAAqB,YAAA,CAAA,CAArB,CAAA;IACA,IAAA,CAAKJ,MAAL,CAAYK,qBAAZ,CAAkC,YAAA,CAAA,CAAlC,CAAA;IACA,IAAA,CAAKL,MAAL,CAAYM,OAAZ,CAAoB,YAAA,CAAA,CAApB,CAAA;EACD,CAhFH;EAAA,MAAA,CAkFeS,aAlFf,GAAA,SAAA,aAAA,CAkF6BC,UAlF7B,EAkF2DC,iBAlF3D,EAAA;IAAA,IAAA;oBAqFM,IAAA;MAFF,IAAI,OAAOD,UAAP,KAAsB,QAA1B,EAAoC;QAClC,CAAU,CAAC,CAAC1C,gBAAgB,CAAC0C,UAAD,CAA5B,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,SAAS,CAAA,KAAA,EAAA,kBAAA,GAAoDA,UAApD,CAAT,GAAA,SAAS,CAAA,KAAA,CAAT,GAAA,KAAA,CAAA;QACA,OAAA,CAAKhB,MAAL,CAAYe,aAAZ,CAA0BzC,gBAAgB,CAAC0C,UAAD,CAA1C,EAAwDC,iBAAxD,CAAA;QACA,OAAA,CAAKrB,UAAL,CAAgB;UAAEZ,OAAO,EAAEgC;QAAX,CAAhB,CAAA;MACD,CAJD,MAIO;QACL,OAAA,CAAKhB,MAAL,CAAYe,aAAZ,CAA0BC,UAA1B,EAAsCC,iBAAtC,CAAA;QACA,OAAA,CAAKrB,UAAL,CAAgB;UAAEZ,OAAO,EAAED,MAAM,CAACiC,UAAU,CAAChC,OAAZ;QAAjB,CAAhB,CAAA;MACD;;IACF,CA3FH,CAAA,OAAA,CAAA,EAAA;MAAA,OAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;IAAA;EAAA,CAAA;EAAA,MAAA,CA6FekC,KA7Ff,GAAA,SAAA,KAAA,CAAA,EAAA;IAAA,IAAA;oBA8FU,IAAA;6BAAA,OAAA,CAAKlB,MAAL,CAAYmB,MAAZ,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,YAAA;QACN,OAAA,CAAKzB,cAAL,CAAA,CAAA;;IACD,CAhGH,CAAA,OAAA,CAAA,EAAA;MAAA,OAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;IAAA;EAAA,CAAA;EAAA,OAAA,eAAA;AAAA,CAAA,CAAqClB,iBAArC,CAAA","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { ConnectorUpdate } from '@web3-react/types'\nimport invariant from 'tiny-invariant'\n\nconst chainIdToNetwork: { [network: number]: string } = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan',\n  100: 'xdai',\n  30: 'orchid',\n  31: 'orchidTestnet',\n  99: 'core',\n  77: 'sokol',\n  61: 'classic',\n  8: 'ubiq',\n  108: 'thundercore',\n  18: 'thundercoreTestnet',\n  163: 'lightstreams',\n  122: 'fuse',\n  1337: 'devChain',\n  31337: 'hardhat',\n  137: 'matic',\n  80001: 'maticMumbai'\n}\n\ntype Network = number | { chainId: string; [key: string]: any }\n\ninterface PortisConnectorArguments {\n  dAppId: string\n  networks: Network[]\n  config?: any\n}\n\nexport class PortisConnector extends AbstractConnector {\n  private readonly dAppId: string\n  private readonly networks: Network[]\n  private readonly config: any\n\n  public portis: any\n\n  constructor({ dAppId, networks, config = {} }: PortisConnectorArguments) {\n    const chainIds = networks.map((n): number => (typeof n === 'number' ? n : Number(n.chainId)))\n    invariant(\n      chainIds.every((c): boolean => !!chainIdToNetwork[c]),\n      `One or more unsupported networks ${networks}`\n    )\n    super({ supportedChainIds: chainIds })\n\n    this.dAppId = dAppId\n    this.networks = networks\n    this.config = config\n\n    this.handleOnLogout = this.handleOnLogout.bind(this)\n    this.handleOnActiveWalletChanged = this.handleOnActiveWalletChanged.bind(this)\n    this.handleOnError = this.handleOnError.bind(this)\n  }\n\n  private handleOnLogout(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onLogout' event\")\n    }\n    this.emitDeactivate()\n  }\n\n  private handleOnActiveWalletChanged(account: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onActiveWalletChanged' event with payload\", account)\n    }\n    this.emitUpdate({ account })\n  }\n\n  private handleOnError(error: Error): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onError' event\")\n    }\n    this.emitError(error)\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.portis) {\n      const Portis = await import('@portis/web3').then(m => m?.default ?? m)\n      this.portis = new Portis(\n        this.dAppId,\n        typeof this.networks[0] === 'number' ? chainIdToNetwork[this.networks[0]] : (this.networks[0] as any),\n        this.config\n      )\n    }\n\n    this.portis.onLogout(this.handleOnLogout)\n    this.portis.onActiveWalletChanged(this.handleOnActiveWalletChanged)\n    this.portis.onError(this.handleOnError)\n\n    const account = await this.portis.provider.enable().then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.portis.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.portis.provider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.portis.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.portis.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.portis.onLogout(() => {})\n    this.portis.onActiveWalletChanged(() => {})\n    this.portis.onError(() => {})\n  }\n\n  public async changeNetwork(newNetwork: number | Network, isGasRelayEnabled?: boolean) {\n    if (typeof newNetwork === 'number') {\n      invariant(!!chainIdToNetwork[newNetwork], `Invalid chainId ${newNetwork}`)\n      this.portis.changeNetwork(chainIdToNetwork[newNetwork], isGasRelayEnabled)\n      this.emitUpdate({ chainId: newNetwork })\n    } else {\n      this.portis.changeNetwork(newNetwork, isGasRelayEnabled)\n      this.emitUpdate({ chainId: Number(newNetwork.chainId) })\n    }\n  }\n\n  public async close() {\n    await this.portis.logout()\n    this.emitDeactivate()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}