{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Reports = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Reports help to estimate costs, calculate translation costs, and identify the top members.\n *\n * Use API to generate Cost Estimate, Translation Cost, and Top Members reports.\n * You can then export reports in .xlsx or .csv file formats.\n * Report generation is an asynchronous operation and shall be completed with a sequence of API methods.\n */\nclass Reports extends core_1.CrowdinApi {\n  /**\n   * @param groupId group identifier\n   * @param request request body\n   * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.reports.post\n   */\n  generateGroupReport(groupId, request) {\n    const url = `${this.url}/groups/${groupId}/reports`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param groupId group identifier\n   * @param reportId report identifier\n   * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.reports.get\n   */\n  checkGroupReportStatus(groupId, reportId) {\n    const url = `${this.url}/groups/${groupId}/reports/${reportId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param groupId group identifier\n   * @param reportId report identifier\n   * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.reports.download.download\n   */\n  downloadGroupReport(groupId, reportId) {\n    const url = `${this.url}/groups/${groupId}/reports/${reportId}/download`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param request request body\n   * @see https://support.crowdin.com/enterprise/api/#operation/api.reports.post\n   */\n  generateOrganizationReport(request) {\n    const url = `${this.url}/reports`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param reportId report identifier\n   * @see https://support.crowdin.com/enterprise/api/#operation/api.reports.get\n   */\n  checkOrganizationReportStatus(reportId) {\n    const url = `${this.url}/reports/${reportId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param reportId report identifier\n   * @see https://support.crowdin.com/enterprise/api/#operation/api.reports.download.download\n   */\n  downloadOrganizationReport(reportId) {\n    const url = `${this.url}/reports/${reportId}/download`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.post\n   */\n  generateReport(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/reports`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param reportId report identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.get\n   */\n  checkReportStatus(projectId, reportId) {\n    const url = `${this.url}/projects/${projectId}/reports/${reportId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param reportId report identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.download.download\n   */\n  downloadReport(projectId, reportId) {\n    const url = `${this.url}/projects/${projectId}/reports/${reportId}/download`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param options optional parameters for the request\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.settings-templates.getMany\n   */\n  listReportSettingsTemplates(projectId, options) {\n    const url = `${this.url}/projects/${projectId}/reports/settings-templates`;\n    return this.getList(url, options === null || options === void 0 ? void 0 : options.limit, options === null || options === void 0 ? void 0 : options.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.settings-templates.post\n   */\n  addReportSettingsTemplate(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/reports/settings-templates`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param reportSettingsTemplateId report settings template identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.settings-templates.get\n   */\n  getReportSettingsTemplate(projectId, reportSettingsTemplateId) {\n    const url = `${this.url}/projects/${projectId}/reports/settings-templates/${reportSettingsTemplateId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param reportSettingsTemplateId report settings template identifier\n   * @param request request body\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.settings-templates.patch\n   */\n  editReportSettingsTemplate(projectId, reportSettingsTemplateId, request) {\n    const url = `${this.url}/projects/${projectId}/reports/settings-templates/${reportSettingsTemplateId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param reportSettingsTemplateId report settings template identifier\n   * @see https://developer.crowdin.com/api/v2/#operation/api.projects.settings-templates.delete\n   */\n  deleteReportSettingsTemplate(projectId, reportSettingsTemplateId) {\n    const url = `${this.url}/projects/${projectId}/reports/settings-templates/${reportSettingsTemplateId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n}\nexports.Reports = Reports;","map":{"version":3,"names":["Object","defineProperty","exports","value","Reports","core_1","require","CrowdinApi","generateGroupReport","groupId","request","url","post","defaultConfig","checkGroupReportStatus","reportId","get","downloadGroupReport","generateOrganizationReport","checkOrganizationReportStatus","downloadOrganizationReport","generateReport","projectId","checkReportStatus","downloadReport","listReportSettingsTemplates","options","getList","limit","offset","addReportSettingsTemplate","getReportSettingsTemplate","reportSettingsTemplateId","editReportSettingsTemplate","patch","deleteReportSettingsTemplate","delete"],"sources":["C:/projects/panther-frontend-dex1/node_modules/@crowdin/crowdin-api-client/out/reports/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Reports = void 0;\nconst core_1 = require(\"../core\");\n/**\n * Reports help to estimate costs, calculate translation costs, and identify the top members.\n *\n * Use API to generate Cost Estimate, Translation Cost, and Top Members reports.\n * You can then export reports in .xlsx or .csv file formats.\n * Report generation is an asynchronous operation and shall be completed with a sequence of API methods.\n */\nclass Reports extends core_1.CrowdinApi {\n    /**\n     * @param groupId group identifier\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.reports.post\n     */\n    generateGroupReport(groupId, request) {\n        const url = `${this.url}/groups/${groupId}/reports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param reportId report identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.reports.get\n     */\n    checkGroupReportStatus(groupId, reportId) {\n        const url = `${this.url}/groups/${groupId}/reports/${reportId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param reportId report identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.groups.reports.download.download\n     */\n    downloadGroupReport(groupId, reportId) {\n        const url = `${this.url}/groups/${groupId}/reports/${reportId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param request request body\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.reports.post\n     */\n    generateOrganizationReport(request) {\n        const url = `${this.url}/reports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param reportId report identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.reports.get\n     */\n    checkOrganizationReportStatus(reportId) {\n        const url = `${this.url}/reports/${reportId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param reportId report identifier\n     * @see https://support.crowdin.com/enterprise/api/#operation/api.reports.download.download\n     */\n    downloadOrganizationReport(reportId) {\n        const url = `${this.url}/reports/${reportId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.post\n     */\n    generateReport(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/reports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param reportId report identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.get\n     */\n    checkReportStatus(projectId, reportId) {\n        const url = `${this.url}/projects/${projectId}/reports/${reportId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param reportId report identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.download.download\n     */\n    downloadReport(projectId, reportId) {\n        const url = `${this.url}/projects/${projectId}/reports/${reportId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param options optional parameters for the request\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.settings-templates.getMany\n     */\n    listReportSettingsTemplates(projectId, options) {\n        const url = `${this.url}/projects/${projectId}/reports/settings-templates`;\n        return this.getList(url, options === null || options === void 0 ? void 0 : options.limit, options === null || options === void 0 ? void 0 : options.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.settings-templates.post\n     */\n    addReportSettingsTemplate(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/reports/settings-templates`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param reportSettingsTemplateId report settings template identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.settings-templates.get\n     */\n    getReportSettingsTemplate(projectId, reportSettingsTemplateId) {\n        const url = `${this.url}/projects/${projectId}/reports/settings-templates/${reportSettingsTemplateId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param reportSettingsTemplateId report settings template identifier\n     * @param request request body\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.reports.settings-templates.patch\n     */\n    editReportSettingsTemplate(projectId, reportSettingsTemplateId, request) {\n        const url = `${this.url}/projects/${projectId}/reports/settings-templates/${reportSettingsTemplateId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param reportSettingsTemplateId report settings template identifier\n     * @see https://developer.crowdin.com/api/v2/#operation/api.projects.settings-templates.delete\n     */\n    deleteReportSettingsTemplate(projectId, reportSettingsTemplateId) {\n        const url = `${this.url}/projects/${projectId}/reports/settings-templates/${reportSettingsTemplateId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.Reports = Reports;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}