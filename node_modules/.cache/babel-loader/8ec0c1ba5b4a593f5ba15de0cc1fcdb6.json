{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nexport let Field = /*#__PURE__*/function (Field) {\n  Field[\"INPUT\"] = \"INPUT\";\n  Field[\"OUTPUT\"] = \"OUTPUT\";\n  return Field;\n}({});\nexport const selectCurrency = createAction('swap/selectCurrency');\nexport const switchCurrencies = createAction('swap/switchCurrencies');\nexport const typeInput = createAction('swap/typeInput');\nexport const replaceSwapState = createAction('swap/replaceSwapState');\nexport const setRecipient = createAction('swap/setRecipient');","map":{"version":3,"names":["createAction","Field","selectCurrency","switchCurrencies","typeInput","replaceSwapState","setRecipient"],"sources":["C:/projects/panther-frontend-dex1/src/state/swap/actions.ts"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  INPUT = 'INPUT',\r\n  OUTPUT = 'OUTPUT'\r\n}\r\n\r\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\r\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\r\nexport const replaceSwapState = createAction<{\r\n  field: Field\r\n  typedValue: string\r\n  inputCurrencyId?: string\r\n  outputCurrencyId?: string\r\n  recipient: string | null\r\n}>('swap/replaceSwapState')\r\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAE/C,WAAYC,KAAK,0BAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAAA,OAALA,KAAK;AAAA;AAKjB,OAAO,MAAMC,cAAc,GAAGF,YAAY,CAAuC,qBAAqB,CAAC;AACvG,OAAO,MAAMG,gBAAgB,GAAGH,YAAY,CAAO,uBAAuB,CAAC;AAC3E,OAAO,MAAMI,SAAS,GAAGJ,YAAY,CAAuC,gBAAgB,CAAC;AAC7F,OAAO,MAAMK,gBAAgB,GAAGL,YAAY,CAMzC,uBAAuB,CAAC;AAC3B,OAAO,MAAMM,YAAY,GAAGN,YAAY,CAA+B,mBAAmB,CAAC"},"metadata":{},"sourceType":"module"}